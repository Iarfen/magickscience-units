<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1complex__number" kind="class" language="C++" prot="public">
    <compoundname>scifir::complex_number</compoundname>
    <templateparamlist>
      <param>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1complex__number_1aa6b5eed50f89c30ce2a228453739012b" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::complex_number&lt; T &gt;::real</definition>
        <argsstring></argsstring>
        <name>real</name>
        <qualifiedname>scifir::complex_number::real</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="154" column="3" bodyfile="meca_number/complex_number.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1complex__number_1a071915bbab93da99f83b500ed89f2c0f" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::complex_number&lt; T &gt;::imaginary</definition>
        <argsstring></argsstring>
        <name>imaginary</name>
        <qualifiedname>scifir::complex_number::imaginary</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="155" column="3" bodyfile="meca_number/complex_number.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1complex__number_1ae824ee086a067ead2305da9fc068b394" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::complex_number&lt; T &gt;::complex_number</definition>
        <argsstring>()</argsstring>
        <name>complex_number</name>
        <qualifiedname>scifir::complex_number::complex_number</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="20" column="1" bodyfile="meca_number/complex_number.hpp" bodystart="20" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a8429239a112a685c37f4a54676c1c098" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::complex_number&lt; T &gt;::complex_number</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x)</argsstring>
        <name>complex_number</name>
        <qualifiedname>scifir::complex_number::complex_number</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="23" column="1" bodyfile="meca_number/complex_number.hpp" bodystart="23" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1abb6fa22a6b84469b6aa9d4732e4c00e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::complex_number&lt; T &gt;::complex_number</definition>
        <argsstring>(complex_number&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>complex_number</name>
        <qualifiedname>scifir::complex_number::complex_number</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="26" column="1" bodyfile="meca_number/complex_number.hpp" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a90da6927896375f54fd23f19990c1f3b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::complex_number&lt; T &gt;::complex_number</definition>
        <argsstring>(T x, T y)</argsstring>
        <name>complex_number</name>
        <qualifiedname>scifir::complex_number::complex_number</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="29" column="10" bodyfile="meca_number/complex_number.hpp" bodystart="29" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a284e7ecbf88e3d89ecfa877b6d46ef32" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::complex_number&lt; T &gt;::complex_number</definition>
        <argsstring>(const string &amp;init_complex_number)</argsstring>
        <name>complex_number</name>
        <qualifiedname>scifir::complex_number::complex_number</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_complex_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="32" column="10" bodyfile="meca_number/complex_number.hpp" bodystart="32" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a51c3da2fc7bc8b926f273b50271d0e22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
        <definition>complex_number&lt; T &gt; &amp; scifir::complex_number&lt; T &gt;::operator=</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::complex_number::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="61" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="61" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a40a089dad2e5a7e9d62f3cbb11ba2a5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
        <definition>complex_number&lt; T &gt; &amp; scifir::complex_number&lt; T &gt;::operator=</definition>
        <argsstring>(complex_number&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::complex_number::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="68" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="68" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a8df9bcbaecde5e61b88d94671bb4f791" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt;</type>
        <definition>complex_number&lt; T &gt; scifir::complex_number&lt; T &gt;::operator+</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::complex_number::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="75" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1ab275e95df7118724cb25dd8de7b66d5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt;</type>
        <definition>complex_number&lt; T &gt; scifir::complex_number&lt; T &gt;::operator-</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::complex_number::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="80" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a30029016af77bad97be4e51f4e09aea9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt;</type>
        <definition>complex_number&lt; T &gt; scifir::complex_number&lt; T &gt;::operator*</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::complex_number::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="85" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a018e45e9bd961006e8b2433046215ca8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt;</type>
        <definition>complex_number&lt; T &gt; scifir::complex_number&lt; T &gt;::operator/</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::complex_number::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="90" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1ade75b91648d6c8cbb58a0232440175eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::complex_number&lt; T &gt;::operator+=</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::complex_number::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="97" column="6" bodyfile="meca_number/complex_number.hpp" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a9986323ec1c9b1825d5f645c2a2c020d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::complex_number&lt; T &gt;::operator-=</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::complex_number::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="103" column="6" bodyfile="meca_number/complex_number.hpp" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a8eb89c7f7843404699d0b22604a8563e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::complex_number&lt; T &gt;::operator*=</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::complex_number::operator*=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="109" column="6" bodyfile="meca_number/complex_number.hpp" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a5c7138aff9a56061e71f0e3ab118d4c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::complex_number&lt; T &gt;::operator/=</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::complex_number::operator/=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="115" column="6" bodyfile="meca_number/complex_number.hpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1aaa8470da942e5965370ef1362c98c39e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt;</type>
        <definition>complex_number&lt; T &gt; scifir::complex_number&lt; T &gt;::get_conjugate</definition>
        <argsstring>() const</argsstring>
        <name>get_conjugate</name>
        <qualifiedname>scifir::complex_number::get_conjugate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="121" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1aa857513de09aa842fb9209cc61b404bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T scifir::complex_number&lt; T &gt;::get_r</definition>
        <argsstring>() const</argsstring>
        <name>get_r</name>
        <qualifiedname>scifir::complex_number::get_r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="126" column="3" bodyfile="meca_number/complex_number.hpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a93c2ae019df1d2ddad89b6a82249958b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::complex_number&lt; T &gt;::get_argument</definition>
        <argsstring>() const</argsstring>
        <name>get_argument</name>
        <qualifiedname>scifir::complex_number::get_argument</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="131" column="7" bodyfile="meca_number/complex_number.hpp" bodystart="131" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1afef59ef76952d9d39e7594ab3a74addc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt;</type>
        <definition>complex_number&lt; T &gt; scifir::complex_number&lt; T &gt;::get_reciprocal</definition>
        <argsstring>() const</argsstring>
        <name>get_reciprocal</name>
        <qualifiedname>scifir::complex_number::get_reciprocal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="147" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="147" bodyend="152"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="meca_number/complex_number.hpp" line="17" column="1" bodyfile="meca_number/complex_number.hpp" bodystart="18" bodyend="156"/>
    <listofallmembers>
      <member refid="classscifir_1_1complex__number_1ae824ee086a067ead2305da9fc068b394" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>complex_number</name></member>
      <member refid="classscifir_1_1complex__number_1a8429239a112a685c37f4a54676c1c098" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>complex_number</name></member>
      <member refid="classscifir_1_1complex__number_1abb6fa22a6b84469b6aa9d4732e4c00e6" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>complex_number</name></member>
      <member refid="classscifir_1_1complex__number_1a90da6927896375f54fd23f19990c1f3b" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>complex_number</name></member>
      <member refid="classscifir_1_1complex__number_1a284e7ecbf88e3d89ecfa877b6d46ef32" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>complex_number</name></member>
      <member refid="classscifir_1_1complex__number_1a93c2ae019df1d2ddad89b6a82249958b" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>get_argument</name></member>
      <member refid="classscifir_1_1complex__number_1aaa8470da942e5965370ef1362c98c39e" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>get_conjugate</name></member>
      <member refid="classscifir_1_1complex__number_1aa857513de09aa842fb9209cc61b404bf" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>get_r</name></member>
      <member refid="classscifir_1_1complex__number_1afef59ef76952d9d39e7594ab3a74addc" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>get_reciprocal</name></member>
      <member refid="classscifir_1_1complex__number_1a071915bbab93da99f83b500ed89f2c0f" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>imaginary</name></member>
      <member refid="classscifir_1_1complex__number_1a30029016af77bad97be4e51f4e09aea9" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator*</name></member>
      <member refid="classscifir_1_1complex__number_1a8eb89c7f7843404699d0b22604a8563e" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1complex__number_1a8df9bcbaecde5e61b88d94671bb4f791" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator+</name></member>
      <member refid="classscifir_1_1complex__number_1ade75b91648d6c8cbb58a0232440175eb" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1complex__number_1ab275e95df7118724cb25dd8de7b66d5e" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator-</name></member>
      <member refid="classscifir_1_1complex__number_1a9986323ec1c9b1825d5f645c2a2c020d" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1complex__number_1a018e45e9bd961006e8b2433046215ca8" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator/</name></member>
      <member refid="classscifir_1_1complex__number_1a5c7138aff9a56061e71f0e3ab118d4c8" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1complex__number_1a51c3da2fc7bc8b926f273b50271d0e22" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator=</name></member>
      <member refid="classscifir_1_1complex__number_1a40a089dad2e5a7e9d62f3cbb11ba2a5a" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator=</name></member>
      <member refid="classscifir_1_1complex__number_1aa6b5eed50f89c30ce2a228453739012b" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>real</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
