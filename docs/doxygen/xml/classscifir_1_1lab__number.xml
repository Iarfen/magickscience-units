<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1lab__number" kind="class" language="C++" prot="public">
    <compoundname>scifir::lab_number</compoundname>
    <templateparamlist>
      <param>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::lab_number&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>scifir::lab_number::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="116" column="3" bodyfile="meca_number/lab_number.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::lab_number&lt; T &gt;::error_value</definition>
        <argsstring></argsstring>
        <name>error_value</name>
        <qualifiedname>scifir::lab_number::error_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="117" column="3" bodyfile="meca_number/lab_number.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1lab__number_1a7a9a83ef6d51f55e30477f1101b73037" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::lab_number&lt; T &gt;::lab_number</definition>
        <argsstring>()</argsstring>
        <name>lab_number</name>
        <qualifiedname>scifir::lab_number::lab_number</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="20" column="1" bodyfile="meca_number/lab_number.hpp" bodystart="20" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a3253ee657dbe92a1d1ef86cc04a3db86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::lab_number&lt; T &gt;::lab_number</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>lab_number</name>
        <qualifiedname>scifir::lab_number::lab_number</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="23" column="1" bodyfile="meca_number/lab_number.hpp" bodystart="23" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1aa3c6996e9a044e34d835e41829ee6648" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::lab_number&lt; T &gt;::lab_number</definition>
        <argsstring>(lab_number&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>lab_number</name>
        <qualifiedname>scifir::lab_number::lab_number</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="26" column="1" bodyfile="meca_number/lab_number.hpp" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1adb73c66680a749314bf0c52c030125a5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::lab_number&lt; T &gt;::lab_number</definition>
        <argsstring>(T x, T y)</argsstring>
        <name>lab_number</name>
        <qualifiedname>scifir::lab_number::lab_number</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="29" column="10" bodyfile="meca_number/lab_number.hpp" bodystart="29" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a4e3a41a878e76f15af9ade9222aa7e7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
        <definition>lab_number&lt; T &gt; &amp; scifir::lab_number&lt; T &gt;::operator=</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::lab_number::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="32" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a6aa1e6a3966a68901866f32905129721" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
        <definition>lab_number&lt; T &gt; &amp; scifir::lab_number&lt; T &gt;::operator=</definition>
        <argsstring>(lab_number&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::lab_number::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="39" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1ab37ace1c12a3e65c0bf99d80bbefd48a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt;</type>
        <definition>lab_number&lt; T &gt; scifir::lab_number&lt; T &gt;::operator+</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::lab_number::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="46" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1ade0ff6438633e1880834176ccf03395f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt;</type>
        <definition>lab_number&lt; T &gt; scifir::lab_number&lt; T &gt;::operator-</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::lab_number::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="51" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a18eec3d508045911af4fd0feb8f781f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt;</type>
        <definition>lab_number&lt; T &gt; scifir::lab_number&lt; T &gt;::operator*</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::lab_number::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="56" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a1294887a4ddc0361b8fabc9b53451dc4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt;</type>
        <definition>lab_number&lt; T &gt; scifir::lab_number&lt; T &gt;::operator/</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::lab_number::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="61" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a58b858b4850ceba882dd0d57bc4dcd42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt;</type>
        <definition>lab_number&lt; T &gt; scifir::lab_number&lt; T &gt;::operator^</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::lab_number::operator^</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="66" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1aae4742986e4c70e2daa51893394676a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::lab_number&lt; T &gt;::operator+=</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::lab_number::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="71" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a141dc7aae4d797da45426dcf4d289f4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::lab_number&lt; T &gt;::operator-=</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::lab_number::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="77" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a055057cf6e7d7ec8d033157385274197" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::lab_number&lt; T &gt;::operator*=</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::lab_number::operator*=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="83" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1ab61bea14baa99fc1308b01df91beb29c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::lab_number&lt; T &gt;::operator/=</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::lab_number::operator/=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="89" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a8e23db2630ea3c77ca947f15b832d32d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::lab_number&lt; T &gt;::operator^=</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator^=</name>
        <qualifiedname>scifir::lab_number::operator^=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="95" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a5cac4667258cf23700b45ea6f7f0e87a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::lab_number&lt; T &gt;::display</definition>
        <argsstring>(int number_of_decimals=2) const</argsstring>
        <name>display</name>
        <qualifiedname>scifir::lab_number::display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="101" column="8" bodyfile="meca_number/lab_number.hpp" bodystart="101" bodyend="114"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="meca_number/lab_number.hpp" line="17" column="1" bodyfile="meca_number/lab_number.hpp" bodystart="18" bodyend="118"/>
    <listofallmembers>
      <member refid="classscifir_1_1lab__number_1a5cac4667258cf23700b45ea6f7f0e87a" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>display</name></member>
      <member refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>error_value</name></member>
      <member refid="classscifir_1_1lab__number_1a7a9a83ef6d51f55e30477f1101b73037" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>lab_number</name></member>
      <member refid="classscifir_1_1lab__number_1a3253ee657dbe92a1d1ef86cc04a3db86" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>lab_number</name></member>
      <member refid="classscifir_1_1lab__number_1aa3c6996e9a044e34d835e41829ee6648" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>lab_number</name></member>
      <member refid="classscifir_1_1lab__number_1adb73c66680a749314bf0c52c030125a5" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>lab_number</name></member>
      <member refid="classscifir_1_1lab__number_1a18eec3d508045911af4fd0feb8f781f7" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator*</name></member>
      <member refid="classscifir_1_1lab__number_1a055057cf6e7d7ec8d033157385274197" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1lab__number_1ab37ace1c12a3e65c0bf99d80bbefd48a" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator+</name></member>
      <member refid="classscifir_1_1lab__number_1aae4742986e4c70e2daa51893394676a3" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1lab__number_1ade0ff6438633e1880834176ccf03395f" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator-</name></member>
      <member refid="classscifir_1_1lab__number_1a141dc7aae4d797da45426dcf4d289f4b" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1lab__number_1a1294887a4ddc0361b8fabc9b53451dc4" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator/</name></member>
      <member refid="classscifir_1_1lab__number_1ab61bea14baa99fc1308b01df91beb29c" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1lab__number_1a4e3a41a878e76f15af9ade9222aa7e7a" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator=</name></member>
      <member refid="classscifir_1_1lab__number_1a6aa1e6a3966a68901866f32905129721" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator=</name></member>
      <member refid="classscifir_1_1lab__number_1a58b858b4850ceba882dd0d57bc4dcd42" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator^</name></member>
      <member refid="classscifir_1_1lab__number_1a8e23db2630ea3c77ca947f15b832d32d" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator^=</name></member>
      <member refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
