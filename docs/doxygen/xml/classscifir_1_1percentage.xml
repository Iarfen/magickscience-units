<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1percentage" kind="class" language="C++" prot="public">
    <compoundname>scifir::percentage</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classscifir_1_1percentage_1a8a6359416b116e57affb296949c11b21" prot="private" static="no" mutable="no">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>scifir::percentage::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="134" column="7" bodyfile="special_units/percentage.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1percentage_1a18948f7da73b52f27daa92954c3234ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>()</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="20" column="1" bodyfile="special_units/percentage.cpp" bodystart="14" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a2a562445037b2fe5d0ed5d0d7dc42377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(const percentage &amp;)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="21" column="1" bodyfile="special_units/percentage.cpp" bodystart="17" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a61bf969f17c1d9af773e5641277a9e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(percentage &amp;&amp;)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;&amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="22" column="1" bodyfile="special_units/percentage.cpp" bodystart="20" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1abc5a21e8c33864be2be524601d5f4cb6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(float)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="23" column="10" bodyfile="special_units/percentage.cpp" bodystart="23" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1ab239c73f7462da0b222c440911ec9c1d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(double)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="24" column="10" bodyfile="special_units/percentage.cpp" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1ab405b44bf7f23d266dd5ff08fc6de539" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(long double)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="25" column="10" bodyfile="special_units/percentage.cpp" bodystart="29" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a8d6d92a350f666fafd038202c1a71438" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(int)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="26" column="10" bodyfile="special_units/percentage.cpp" bodystart="32" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a19517e666c83aa123de48331e10e0e9f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(float, const string &amp;)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>x</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_dimensions</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="27" column="10" bodyfile="special_units/percentage.cpp" bodystart="35" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a556e85e3c672618f09206d793d6bc73b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(double, const string &amp;)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>x</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_dimensions</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="28" column="10" bodyfile="special_units/percentage.cpp" bodystart="59" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a6546c5ba3761b4b1170b4d418c677538" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(long double, const string &amp;)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>x</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_dimensions</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="29" column="10" bodyfile="special_units/percentage.cpp" bodystart="83" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1ab7f6644f596931ce18b2d8364f64dca7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(int, const string &amp;)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <defname>x</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_dimensions</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="30" column="10" bodyfile="special_units/percentage.cpp" bodystart="107" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1acca8180a4c6bacd2b14261ed67e68360" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(const string &amp;)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_percentage</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="31" column="10" bodyfile="special_units/percentage.cpp" bodystart="131" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a543dcfc12f0b0f3e62e2aa4d4321d9f7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(const scalar_unit &amp;)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="32" column="10" bodyfile="special_units/percentage.cpp" bodystart="183" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a31c71486e326d711955a2fe598d115ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(const percentage &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="34" column="12" bodyfile="special_units/percentage.cpp" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a8bed46a23ee3b420e9617677ddd9f4d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(percentage &amp;&amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;&amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="35" column="12" bodyfile="special_units/percentage.cpp" bodystart="202" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a2a3e86e049f5cbcef12bc58d3607abed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(float)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="36" column="12" bodyfile="special_units/percentage.cpp" bodystart="208" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a5b4a8bc6c3d710d25dde1f6bb9ec4717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(const string &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_percentage</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="37" column="12" bodyfile="special_units/percentage.cpp" bodystart="214" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a339a64a354941d768a8a8e6e56988040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(const scalar_unit &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="38" column="12" bodyfile="special_units/percentage.cpp" bodystart="267" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a64ba3202f386c17dde5605465857ed75" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::operator float</definition>
        <argsstring>() const</argsstring>
        <name>operator float</name>
        <qualifiedname>scifir::percentage::operator float</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="40" column="10" bodyfile="special_units/percentage.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a3bff25faccd76a10dd9d24e0d9448e8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
        <definition>const float &amp; scifir::percentage::get_value</definition>
        <argsstring>() const</argsstring>
        <name>get_value</name>
        <qualifiedname>scifir::percentage::get_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="45" column="20" bodyfile="special_units/percentage.hpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1ab0979515863c4888cd21fa1b76edac44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator+</definition>
        <argsstring>(const percentage &amp;) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::percentage::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="50" column="12" bodyfile="special_units/percentage.cpp" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1afae7595a001816ac1eb5193c17a86817" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator-</definition>
        <argsstring>(const percentage &amp;) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::percentage::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="51" column="12" bodyfile="special_units/percentage.cpp" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1ada19dacc59195b7b481c58a83e68f880" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator*</definition>
        <argsstring>(const percentage &amp;) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::percentage::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="52" column="12" bodyfile="special_units/percentage.cpp" bodystart="290" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a04e82131cbb9f5efff63f73b7b3f00dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator/</definition>
        <argsstring>(const percentage &amp;) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::percentage::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="53" column="12" bodyfile="special_units/percentage.cpp" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a53a34053a710700b0685d960b3166837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator+=</definition>
        <argsstring>(const percentage &amp;)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::percentage::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="54" column="6" bodyfile="special_units/percentage.cpp" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a4c1cc834a78209f8637eede39bb65706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator-=</definition>
        <argsstring>(const percentage &amp;)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::percentage::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="55" column="6" bodyfile="special_units/percentage.cpp" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a20075b2e6a82ff6f0251f11ec6903e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator*=</definition>
        <argsstring>(const percentage &amp;)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::percentage::operator*=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="56" column="6" bodyfile="special_units/percentage.cpp" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1acdf4588daf1f43f9ebfa25da0b5c2973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator/=</definition>
        <argsstring>(const percentage &amp;)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::percentage::operator/=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="57" column="6" bodyfile="special_units/percentage.cpp" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1adac8f6627ac4a15c688a153ee0334c33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="60" column="6" bodyfile="special_units/percentage.hpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a95c99d7a15e7e9c5a42edd9e4a3dee1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator+</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::percentage::operator+</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="66" column="12" bodyfile="special_units/percentage.hpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1ad18e1f88014cacbff88309c6ff099eb3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator-</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::percentage::operator-</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="72" column="12" bodyfile="special_units/percentage.hpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a94a7dafa7b24547d9a12b04b6e564db1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::operator*</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::percentage::operator*</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="78" column="7" bodyfile="special_units/percentage.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1ab05f37111c057e1714f592646e38ee31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::operator/</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::percentage::operator/</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="84" column="7" bodyfile="special_units/percentage.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1af8a689931b4ecc92e13f0f5df5766f53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator+=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::percentage::operator+=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="90" column="6" bodyfile="special_units/percentage.hpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a3b3236f66a7090cc036dc5a980b096ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator-=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::percentage::operator-=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="96" column="6" bodyfile="special_units/percentage.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a535be3245e6ec3c7b6916d6f4732f651" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator*=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::percentage::operator*=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="102" column="6" bodyfile="special_units/percentage.hpp" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1adec5094b25814070daaaaeb7c2416417" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator/=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::percentage::operator/=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="108" column="6" bodyfile="special_units/percentage.hpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1addccf7ec453b14abc08f41c0c749b2c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <qualifiedname>scifir::percentage::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="113" column="12" bodyfile="special_units/percentage.cpp" bodystart="320" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a650475402efd37dfeaaafd4339eae577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <qualifiedname>scifir::percentage::operator++</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="114" column="12" bodyfile="special_units/percentage.cpp" bodystart="326" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1aecbfdd6b63d0dd993056347042063f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <qualifiedname>scifir::percentage::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="115" column="12" bodyfile="special_units/percentage.cpp" bodystart="333" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a994b72fe7e2e4f8d620c1046dd55f693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <qualifiedname>scifir::percentage::operator--</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="116" column="12" bodyfile="special_units/percentage.cpp" bodystart="339" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a381bb45a7f3b18d56be437dbab12f4f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::percentage::operator*</definition>
        <argsstring>(const scalar_unit &amp;) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::percentage::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="118" column="13" bodyfile="special_units/percentage.cpp" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1aadd8204724fa40d9899d7ca831dcd7f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::percentage::operator/</definition>
        <argsstring>(const scalar_unit &amp;) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::percentage::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="119" column="13" bodyfile="special_units/percentage.cpp" bodystart="351" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1aff54f2d08cc05e3f5fd3aa5b374b3ed8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::get_factor</definition>
        <argsstring>() const</argsstring>
        <name>get_factor</name>
        <qualifiedname>scifir::percentage::get_factor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="121" column="7" bodyfile="special_units/percentage.cpp" bodystart="356" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a295c00367e72dc3e70800da792086373" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::get_ppm</definition>
        <argsstring>() const</argsstring>
        <name>get_ppm</name>
        <qualifiedname>scifir::percentage::get_ppm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="123" column="7" bodyfile="special_units/percentage.cpp" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1aa7b9241fd38fe58761598687c2afecd7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::get_ppb</definition>
        <argsstring>() const</argsstring>
        <name>get_ppb</name>
        <qualifiedname>scifir::percentage::get_ppb</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="124" column="7" bodyfile="special_units/percentage.cpp" bodystart="366" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a4aefd4280cfc9f25f2ff7cf367ef64b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::get_ppt</definition>
        <argsstring>() const</argsstring>
        <name>get_ppt</name>
        <qualifiedname>scifir::percentage::get_ppt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="125" column="7" bodyfile="special_units/percentage.cpp" bodystart="371" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a30f341f9f9b90f5ac9ecfff47af64211" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::get_ppq</definition>
        <argsstring>() const</argsstring>
        <name>get_ppq</name>
        <qualifiedname>scifir::percentage::get_ppq</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="126" column="7" bodyfile="special_units/percentage.cpp" bodystart="376" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a28516c470ce03a0c3a4c7c384480fc85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::percentage::display_ppm</definition>
        <argsstring>() const</argsstring>
        <name>display_ppm</name>
        <qualifiedname>scifir::percentage::display_ppm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="128" column="8" bodyfile="special_units/percentage.cpp" bodystart="381" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a4c78d21bb1029aff07d5976e0f957d6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::percentage::display_ppb</definition>
        <argsstring>() const</argsstring>
        <name>display_ppb</name>
        <qualifiedname>scifir::percentage::display_ppb</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="129" column="8" bodyfile="special_units/percentage.cpp" bodystart="388" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a58f36233045fa09bdd43d8a2e713b42b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::percentage::display_ppt</definition>
        <argsstring>() const</argsstring>
        <name>display_ppt</name>
        <qualifiedname>scifir::percentage::display_ppt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="130" column="8" bodyfile="special_units/percentage.cpp" bodystart="395" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1acc3badb3d60ce955b3fbc6f82df47d28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::percentage::display_ppq</definition>
        <argsstring>() const</argsstring>
        <name>display_ppq</name>
        <qualifiedname>scifir::percentage::display_ppq</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="131" column="8" bodyfile="special_units/percentage.cpp" bodystart="402" bodyend="407"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="special_units/percentage.hpp" line="17" column="1" bodyfile="special_units/percentage.hpp" bodystart="18" bodyend="136"/>
    <listofallmembers>
      <member refid="classscifir_1_1percentage_1a4c78d21bb1029aff07d5976e0f957d6b" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>display_ppb</name></member>
      <member refid="classscifir_1_1percentage_1a28516c470ce03a0c3a4c7c384480fc85" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>display_ppm</name></member>
      <member refid="classscifir_1_1percentage_1acc3badb3d60ce955b3fbc6f82df47d28" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>display_ppq</name></member>
      <member refid="classscifir_1_1percentage_1a58f36233045fa09bdd43d8a2e713b42b" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>display_ppt</name></member>
      <member refid="classscifir_1_1percentage_1aff54f2d08cc05e3f5fd3aa5b374b3ed8" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>get_factor</name></member>
      <member refid="classscifir_1_1percentage_1aa7b9241fd38fe58761598687c2afecd7" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>get_ppb</name></member>
      <member refid="classscifir_1_1percentage_1a295c00367e72dc3e70800da792086373" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>get_ppm</name></member>
      <member refid="classscifir_1_1percentage_1a30f341f9f9b90f5ac9ecfff47af64211" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>get_ppq</name></member>
      <member refid="classscifir_1_1percentage_1a4aefd4280cfc9f25f2ff7cf367ef64b0" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>get_ppt</name></member>
      <member refid="classscifir_1_1percentage_1a3bff25faccd76a10dd9d24e0d9448e8c" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>get_value</name></member>
      <member refid="classscifir_1_1percentage_1a64ba3202f386c17dde5605465857ed75" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator float</name></member>
      <member refid="classscifir_1_1percentage_1ada19dacc59195b7b481c58a83e68f880" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator*</name></member>
      <member refid="classscifir_1_1percentage_1a94a7dafa7b24547d9a12b04b6e564db1" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator*</name></member>
      <member refid="classscifir_1_1percentage_1a381bb45a7f3b18d56be437dbab12f4f7" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator*</name></member>
      <member refid="classscifir_1_1percentage_1a20075b2e6a82ff6f0251f11ec6903e21" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1percentage_1a535be3245e6ec3c7b6916d6f4732f651" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1percentage_1ab0979515863c4888cd21fa1b76edac44" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator+</name></member>
      <member refid="classscifir_1_1percentage_1a95c99d7a15e7e9c5a42edd9e4a3dee1c" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator+</name></member>
      <member refid="classscifir_1_1percentage_1addccf7ec453b14abc08f41c0c749b2c4" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator++</name></member>
      <member refid="classscifir_1_1percentage_1a650475402efd37dfeaaafd4339eae577" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator++</name></member>
      <member refid="classscifir_1_1percentage_1a53a34053a710700b0685d960b3166837" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1percentage_1af8a689931b4ecc92e13f0f5df5766f53" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1percentage_1afae7595a001816ac1eb5193c17a86817" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator-</name></member>
      <member refid="classscifir_1_1percentage_1ad18e1f88014cacbff88309c6ff099eb3" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator-</name></member>
      <member refid="classscifir_1_1percentage_1aecbfdd6b63d0dd993056347042063f85" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator--</name></member>
      <member refid="classscifir_1_1percentage_1a994b72fe7e2e4f8d620c1046dd55f693" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator--</name></member>
      <member refid="classscifir_1_1percentage_1a4c1cc834a78209f8637eede39bb65706" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1percentage_1a3b3236f66a7090cc036dc5a980b096ca" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1percentage_1a04e82131cbb9f5efff63f73b7b3f00dd" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator/</name></member>
      <member refid="classscifir_1_1percentage_1ab05f37111c057e1714f592646e38ee31" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator/</name></member>
      <member refid="classscifir_1_1percentage_1aadd8204724fa40d9899d7ca831dcd7f3" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator/</name></member>
      <member refid="classscifir_1_1percentage_1acdf4588daf1f43f9ebfa25da0b5c2973" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1percentage_1adec5094b25814070daaaaeb7c2416417" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1percentage_1a31c71486e326d711955a2fe598d115ac" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1a8bed46a23ee3b420e9617677ddd9f4d7" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1a2a3e86e049f5cbcef12bc58d3607abed" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1a5b4a8bc6c3d710d25dde1f6bb9ec4717" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1a339a64a354941d768a8a8e6e56988040" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1adac8f6627ac4a15c688a153ee0334c33" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1a18948f7da73b52f27daa92954c3234ef" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a2a562445037b2fe5d0ed5d0d7dc42377" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a61bf969f17c1d9af773e5641277a9e11" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1abc5a21e8c33864be2be524601d5f4cb6" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1ab239c73f7462da0b222c440911ec9c1d" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1ab405b44bf7f23d266dd5ff08fc6de539" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a8d6d92a350f666fafd038202c1a71438" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a19517e666c83aa123de48331e10e0e9f" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a556e85e3c672618f09206d793d6bc73b" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a6546c5ba3761b4b1170b4d418c677538" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1ab7f6644f596931ce18b2d8364f64dca7" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1acca8180a4c6bacd2b14261ed67e68360" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a543dcfc12f0b0f3e62e2aa4d4321d9f7" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a8a6359416b116e57affb296949c11b21" prot="private" virt="non-virtual"><scope>scifir::percentage</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
