<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1pixel" kind="class" language="C++" prot="public">
    <compoundname>scifir::pixel</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classscifir_1_1pixel_1a1e79500c250b2efae9f1ba0933f85a84" prot="private" static="no" mutable="no">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::pixel::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>scifir::pixel::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="129" column="7" bodyfile="special_units/pixel.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1pixel_1ac37a8dcc1c1e3f39fcc671463b5cc527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>()</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="20" column="1" bodyfile="special_units/pixel.cpp" bodystart="16" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a749f60eb282312701c0b90f6a3647a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(const pixel &amp;)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="21" column="1" bodyfile="special_units/pixel.cpp" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1ad84213d9ad520fe03658970b4bfdd913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(pixel &amp;&amp;)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;&amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="22" column="1" bodyfile="special_units/pixel.cpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a66920d205101f83abf1da9f48026b067" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(float)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="23" column="10" bodyfile="special_units/pixel.cpp" bodystart="25" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a21feb5b8546e69c82dbe92adc0f80048" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(double)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="24" column="10" bodyfile="special_units/pixel.cpp" bodystart="28" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a13d70bb36e5b22a1984b0c8175443979" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(long double)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="25" column="10" bodyfile="special_units/pixel.cpp" bodystart="31" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a0f6deac37bd12b41ab30795c6863c84f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(int)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="26" column="10" bodyfile="special_units/pixel.cpp" bodystart="34" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a5259b8fa4497a6d7126043dec42bcce3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(const string &amp;)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_pixel</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="27" column="10" bodyfile="special_units/pixel.cpp" bodystart="37" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1aa9ee2b1b7f1beda9a459bbe2138ed49c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(const scalar_unit &amp;)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="28" column="10" bodyfile="special_units/pixel.cpp" bodystart="53" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a7954b1a3e035021d12ec97e5985c49ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator=</definition>
        <argsstring>(const pixel &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::pixel::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="30" column="7" bodyfile="special_units/pixel.cpp" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a4d5a1ea8762f464bc8645aa0ea9cb122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator=</definition>
        <argsstring>(pixel &amp;&amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::pixel::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;&amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="31" column="7" bodyfile="special_units/pixel.cpp" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a663efe7ce68e42fb4cab16d7189af2b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator=</definition>
        <argsstring>(float)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::pixel::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="32" column="7" bodyfile="special_units/pixel.cpp" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a6ecf36840ff111a6d088ccf1deb4aada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator=</definition>
        <argsstring>(const string &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::pixel::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_pixel</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="33" column="7" bodyfile="special_units/pixel.cpp" bodystart="84" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a474fe1b91b95af2f06c789e0b33c555d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator=</definition>
        <argsstring>(const scalar_unit &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::pixel::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="34" column="7" bodyfile="special_units/pixel.cpp" bodystart="101" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1af31f373bcd06b57379209b717865af2a" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::operator float</definition>
        <argsstring>() const</argsstring>
        <name>operator float</name>
        <qualifiedname>scifir::pixel::operator float</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="36" column="10" bodyfile="special_units/pixel.hpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a787b708456c79b02f869a394a24ed41c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
        <definition>const float &amp; scifir::pixel::get_value</definition>
        <argsstring>() const</argsstring>
        <name>get_value</name>
        <qualifiedname>scifir::pixel::get_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="41" column="20" bodyfile="special_units/pixel.hpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1abf61333f32487228d417424fc0329814" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator+</definition>
        <argsstring>(const pixel &amp;) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::pixel::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="46" column="7" bodyfile="special_units/pixel.cpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a3ef28d57d971a1d76e1aecc52969d890" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator-</definition>
        <argsstring>(const pixel &amp;) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::pixel::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="47" column="7" bodyfile="special_units/pixel.cpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a8230882aa685bb6db97389aec3bd0a72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator*</definition>
        <argsstring>(const pixel &amp;) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::pixel::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="48" column="7" bodyfile="special_units/pixel.cpp" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a4bb7e44259b991057d05114c4c040312" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator/</definition>
        <argsstring>(const pixel &amp;) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::pixel::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="49" column="7" bodyfile="special_units/pixel.cpp" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a74fdd67a56a27e4308058d8b89e6b932" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator^</definition>
        <argsstring>(const pixel &amp;) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::pixel::operator^</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="50" column="7" bodyfile="special_units/pixel.cpp" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a54110bb208b6aa25ccdc2e4bd09c6a46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator+=</definition>
        <argsstring>(const pixel &amp;)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::pixel::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="51" column="6" bodyfile="special_units/pixel.cpp" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1ab07e52f2bb10a3c909b15123756ebe6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator-=</definition>
        <argsstring>(const pixel &amp;)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::pixel::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="52" column="6" bodyfile="special_units/pixel.cpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a42ed6996e2f8316f5b9982ac75e2ba58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator*=</definition>
        <argsstring>(const pixel &amp;)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::pixel::operator*=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="53" column="6" bodyfile="special_units/pixel.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a11a9e3128efeb6f971437257f2d348ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator/=</definition>
        <argsstring>(const pixel &amp;)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::pixel::operator/=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="54" column="6" bodyfile="special_units/pixel.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a03684624427e1d9af651a1eaa8ad29a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator^=</definition>
        <argsstring>(const pixel &amp;)</argsstring>
        <name>operator^=</name>
        <qualifiedname>scifir::pixel::operator^=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="55" column="6" bodyfile="special_units/pixel.cpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a1b6cb574c879d31099cb00102d706588" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::pixel::operator=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="58" column="6" bodyfile="special_units/pixel.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a893257616490c5b5015e796a23987c6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator+</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::pixel::operator+</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="64" column="7" bodyfile="special_units/pixel.hpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1aaa55cf5ae3990cf7d13fa6795c6200a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator-</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::pixel::operator-</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="70" column="7" bodyfile="special_units/pixel.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a2bd831970c935dad8cba8ad887ed810c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator*</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::pixel::operator*</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="76" column="7" bodyfile="special_units/pixel.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1af44b4e2f81eaad7c1fce62c0c678d033" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator/</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::pixel::operator/</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="82" column="7" bodyfile="special_units/pixel.hpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a5dec43b9658ffdeb12c3883eabf32e75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator^</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::pixel::operator^</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="88" column="7" bodyfile="special_units/pixel.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1af134f4b052c3250ad7053cf2a869cc88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator+=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::pixel::operator+=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="94" column="6" bodyfile="special_units/pixel.hpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a31304af0c313e105d2a8f9051a435aa0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator-=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::pixel::operator-=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="100" column="6" bodyfile="special_units/pixel.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1ad1fe334afe2ab1cbd776ccae7feb0058" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator*=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::pixel::operator*=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="106" column="6" bodyfile="special_units/pixel.hpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a75f60113534530b7c8877ffe54111320" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator/=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::pixel::operator/=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="112" column="6" bodyfile="special_units/pixel.hpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a6367a6782cc43e888ffccbbcf9a9b5b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator^=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator^=</name>
        <qualifiedname>scifir::pixel::operator^=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="118" column="6" bodyfile="special_units/pixel.hpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a4198e76869b1042d0e0cc89446efcd11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <qualifiedname>scifir::pixel::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="123" column="7" bodyfile="special_units/pixel.cpp" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a2c1d225502fa1f31fb35ddbe1ef6303a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <qualifiedname>scifir::pixel::operator++</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="124" column="7" bodyfile="special_units/pixel.cpp" bodystart="170" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1aa54be4b2c5933306414806b0b0c1ac74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <qualifiedname>scifir::pixel::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="125" column="7" bodyfile="special_units/pixel.cpp" bodystart="177" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a06913d78fccaefdcad33d71e502b954e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <qualifiedname>scifir::pixel::operator--</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="126" column="7" bodyfile="special_units/pixel.cpp" bodystart="183" bodyend="188"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="special_units/pixel.hpp" line="17" column="1" bodyfile="special_units/pixel.hpp" bodystart="18" bodyend="131"/>
    <listofallmembers>
      <member refid="classscifir_1_1pixel_1a787b708456c79b02f869a394a24ed41c" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>get_value</name></member>
      <member refid="classscifir_1_1pixel_1af31f373bcd06b57379209b717865af2a" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator float</name></member>
      <member refid="classscifir_1_1pixel_1a8230882aa685bb6db97389aec3bd0a72" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator*</name></member>
      <member refid="classscifir_1_1pixel_1a2bd831970c935dad8cba8ad887ed810c" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator*</name></member>
      <member refid="classscifir_1_1pixel_1a42ed6996e2f8316f5b9982ac75e2ba58" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1pixel_1ad1fe334afe2ab1cbd776ccae7feb0058" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1pixel_1abf61333f32487228d417424fc0329814" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator+</name></member>
      <member refid="classscifir_1_1pixel_1a893257616490c5b5015e796a23987c6a" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator+</name></member>
      <member refid="classscifir_1_1pixel_1a4198e76869b1042d0e0cc89446efcd11" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator++</name></member>
      <member refid="classscifir_1_1pixel_1a2c1d225502fa1f31fb35ddbe1ef6303a" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator++</name></member>
      <member refid="classscifir_1_1pixel_1a54110bb208b6aa25ccdc2e4bd09c6a46" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1pixel_1af134f4b052c3250ad7053cf2a869cc88" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1pixel_1a3ef28d57d971a1d76e1aecc52969d890" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator-</name></member>
      <member refid="classscifir_1_1pixel_1aaa55cf5ae3990cf7d13fa6795c6200a4" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator-</name></member>
      <member refid="classscifir_1_1pixel_1aa54be4b2c5933306414806b0b0c1ac74" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator--</name></member>
      <member refid="classscifir_1_1pixel_1a06913d78fccaefdcad33d71e502b954e" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator--</name></member>
      <member refid="classscifir_1_1pixel_1ab07e52f2bb10a3c909b15123756ebe6d" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1pixel_1a31304af0c313e105d2a8f9051a435aa0" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1pixel_1a4bb7e44259b991057d05114c4c040312" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator/</name></member>
      <member refid="classscifir_1_1pixel_1af44b4e2f81eaad7c1fce62c0c678d033" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator/</name></member>
      <member refid="classscifir_1_1pixel_1a11a9e3128efeb6f971437257f2d348ca" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1pixel_1a75f60113534530b7c8877ffe54111320" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1pixel_1a7954b1a3e035021d12ec97e5985c49ce" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pixel_1a4d5a1ea8762f464bc8645aa0ea9cb122" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pixel_1a663efe7ce68e42fb4cab16d7189af2b3" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pixel_1a6ecf36840ff111a6d088ccf1deb4aada" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pixel_1a474fe1b91b95af2f06c789e0b33c555d" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pixel_1a1b6cb574c879d31099cb00102d706588" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pixel_1a74fdd67a56a27e4308058d8b89e6b932" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator^</name></member>
      <member refid="classscifir_1_1pixel_1a5dec43b9658ffdeb12c3883eabf32e75" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator^</name></member>
      <member refid="classscifir_1_1pixel_1a03684624427e1d9af651a1eaa8ad29a1" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator^=</name></member>
      <member refid="classscifir_1_1pixel_1a6367a6782cc43e888ffccbbcf9a9b5b1" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator^=</name></member>
      <member refid="classscifir_1_1pixel_1ac37a8dcc1c1e3f39fcc671463b5cc527" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1a749f60eb282312701c0b90f6a3647a9e" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1ad84213d9ad520fe03658970b4bfdd913" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1a66920d205101f83abf1da9f48026b067" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1a21feb5b8546e69c82dbe92adc0f80048" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1a13d70bb36e5b22a1984b0c8175443979" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1a0f6deac37bd12b41ab30795c6863c84f" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1a5259b8fa4497a6d7126043dec42bcce3" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1aa9ee2b1b7f1beda9a459bbe2138ed49c" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1a1e79500c250b2efae9f1ba0933f85a84" prot="private" virt="non-virtual"><scope>scifir::pixel</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
