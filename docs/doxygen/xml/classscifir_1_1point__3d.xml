<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1point__3d" kind="class" language="C++" prot="public">
    <compoundname>scifir::point_3d</compoundname>
    <templateparamlist>
      <param>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
        <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">length</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1point__3d_1ab9c20bdb77ad24a6c81b4cba153194e9" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::point_3d&lt; T &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>scifir::point_3d::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="259" column="3" bodyfile="topology/point_3d.hpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1point__3d_1a17eee5782be030b024dffe8fd97d95a6" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::point_3d&lt; T &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>scifir::point_3d::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="260" column="3" bodyfile="topology/point_3d.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1point__3d_1a2bf49970857ba45c16b2a9aa3338025c" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::point_3d&lt; T &gt;::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <qualifiedname>scifir::point_3d::z</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="261" column="3" bodyfile="topology/point_3d.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1point__3d_1a0306b765ab011ef2efb1a718d657a4f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_3d&lt; T &gt;::point_3d</definition>
        <argsstring>()</argsstring>
        <name>point_3d</name>
        <qualifiedname>scifir::point_3d::point_3d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="21" column="1" bodyfile="topology/point_3d.hpp" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a24625ca343ae41bbe135577084eb2073" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_3d&lt; T &gt;::point_3d</definition>
        <argsstring>(const point_3d&lt; T &gt; &amp;x_point)</argsstring>
        <name>point_3d</name>
        <qualifiedname>scifir::point_3d::point_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1point__3d" kindref="compound">point_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="24" column="1" bodyfile="topology/point_3d.hpp" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1ab2003b104db261c702eb52ccd5e77f51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_3d&lt; T &gt;::point_3d</definition>
        <argsstring>(point_3d&lt; T &gt; &amp;&amp;x_point)</argsstring>
        <name>point_3d</name>
        <qualifiedname>scifir::point_3d::point_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1point__3d" kindref="compound">point_3d</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="27" column="1" bodyfile="topology/point_3d.hpp" bodystart="27" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a52c9686bb0849ced5704661452230c9b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_3d&lt; T &gt;::point_3d</definition>
        <argsstring>(const T &amp;new_x, const T &amp;new_y, const T &amp;new_z)</argsstring>
        <name>point_3d</name>
        <qualifiedname>scifir::point_3d::point_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="30" column="10" bodyfile="topology/point_3d.hpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a1cd051c5c2b6fd1788252518d40efc39" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_3d&lt; T &gt;::point_3d</definition>
        <argsstring>(const T &amp;new_p, const angle &amp;new_theta, T new_z)</argsstring>
        <name>point_3d</name>
        <qualifiedname>scifir::point_3d::point_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type>T</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="33" column="10" bodyfile="topology/point_3d.hpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a642799197517f9f5cfa2afad351512b6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_3d&lt; T &gt;::point_3d</definition>
        <argsstring>(const T &amp;new_r, const angle &amp;new_theta, const angle &amp;new_phi)</argsstring>
        <name>point_3d</name>
        <qualifiedname>scifir::point_3d::point_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="38" column="10" bodyfile="topology/point_3d.hpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a6384d705169aa1f41f124f43f97d1f03" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_3d&lt; T &gt;::point_3d</definition>
        <argsstring>(const angle &amp;new_latitude, const angle &amp;new_longitude, const T &amp;new_altitude)</argsstring>
        <name>point_3d</name>
        <qualifiedname>scifir::point_3d::point_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_latitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_longitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_altitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="43" column="10" bodyfile="topology/point_3d.hpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a01ca640105be3ce75cd5c6ccf4c6206c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::point_3d&lt; T &gt;::point_3d</definition>
        <argsstring>(const coordinates_3d&lt; T &gt; &amp;)</argsstring>
        <name>point_3d</name>
        <qualifiedname>scifir::point_3d::point_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__3d" kindref="compound">coordinates_3d</ref>&lt; T &gt; &amp;</type>
          <defname>x_coordinates</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="48" column="10" bodyfile="topology/point_3d_impl.hpp" bodystart="13" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a0a01383196d2c69e2231a40e0d1e7cb9" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_3d&lt; T &gt;::point_3d</definition>
        <argsstring>(string init_point_3d)</argsstring>
        <name>point_3d</name>
        <qualifiedname>scifir::point_3d::point_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
          <declname>init_point_3d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="50" column="10" bodyfile="topology/point_3d.hpp" bodystart="50" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1aa7fcd0ed52f0edb7e95c54d9599e6e56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__3d" kindref="compound">point_3d</ref>&lt; T &gt; &amp;</type>
        <definition>point_3d&lt; T &gt; &amp; scifir::point_3d&lt; T &gt;::operator=</definition>
        <argsstring>(const point_3d&lt; T &gt; &amp;x_point)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::point_3d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1point__3d" kindref="compound">point_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="98" column="10" bodyfile="topology/point_3d.hpp" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1ac77258bbf8af00d4fa0aa92592d6756b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__3d" kindref="compound">point_3d</ref>&lt; T &gt; &amp;</type>
        <definition>point_3d&lt; T &gt; &amp; scifir::point_3d&lt; T &gt;::operator=</definition>
        <argsstring>(point_3d&lt; T &gt; &amp;&amp;x_point)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::point_3d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1point__3d" kindref="compound">point_3d</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="106" column="10" bodyfile="topology/point_3d.hpp" bodystart="106" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a09c25468cf1ec477ede3193df3dd62f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__3d" kindref="compound">point_3d</ref>&lt; T &gt; &amp;</type>
        <definition>point_3d&lt; T &gt; &amp; scifir::point_3d&lt; T &gt;::operator=</definition>
        <argsstring>(const coordinates_3d&lt; T &gt; &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::point_3d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__3d" kindref="compound">coordinates_3d</ref>&lt; T &gt; &amp;</type>
          <defname>x_coordinates</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="114" column="10" bodyfile="topology/point_3d_impl.hpp" bodystart="17" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a2435572bfaeb1aa4657676931892b46a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T scifir::point_3d&lt; T &gt;::get_p</definition>
        <argsstring>() const</argsstring>
        <name>get_p</name>
        <qualifiedname>scifir::point_3d::get_p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="116" column="3" bodyfile="topology/point_3d.hpp" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1aa07121ee46361b25c52f2e44d736759e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_3d&lt; T &gt;::get_theta</definition>
        <argsstring>() const</argsstring>
        <name>get_theta</name>
        <qualifiedname>scifir::point_3d::get_theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="121" column="7" bodyfile="topology/point_3d.hpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1ada36171009961dea0faadcfae2f8c1cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T scifir::point_3d&lt; T &gt;::get_r</definition>
        <argsstring>() const</argsstring>
        <name>get_r</name>
        <qualifiedname>scifir::point_3d::get_r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="126" column="3" bodyfile="topology/point_3d.hpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1aa7322e37b1e8c652cc9617ea887032fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_3d&lt; T &gt;::get_phi</definition>
        <argsstring>() const</argsstring>
        <name>get_phi</name>
        <qualifiedname>scifir::point_3d::get_phi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="131" column="7" bodyfile="topology/point_3d.hpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a39095d4779444e4c38319eb107c9066b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_3d&lt; T &gt;::get_latitude</definition>
        <argsstring>() const</argsstring>
        <name>get_latitude</name>
        <qualifiedname>scifir::point_3d::get_latitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="136" column="7" bodyfile="topology/point_3d.hpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a32a4b1a914de0aa294641bf36fcb9901" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_3d&lt; T &gt;::get_longitude</definition>
        <argsstring>() const</argsstring>
        <name>get_longitude</name>
        <qualifiedname>scifir::point_3d::get_longitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="141" column="7" bodyfile="topology/point_3d.hpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a7c154064cac678249e905f0ab370ae0f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T scifir::point_3d&lt; T &gt;::get_altitude</definition>
        <argsstring>() const</argsstring>
        <name>get_altitude</name>
        <qualifiedname>scifir::point_3d::get_altitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="146" column="3" bodyfile="topology/point_3d.hpp" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a8a1da439acd2363837df17eb9bc70732" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_3d&lt; T &gt;::set_position</definition>
        <argsstring>(const T &amp;new_x, const T &amp;new_y, const T &amp;new_z)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_3d::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="151" column="6" bodyfile="topology/point_3d.hpp" bodystart="151" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a720e40e2ed8a307e4d01e8727a8dc63c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_3d&lt; T &gt;::set_position</definition>
        <argsstring>(const T &amp;new_p, const angle &amp;new_theta, T new_z)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_3d::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type>T</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="158" column="6" bodyfile="topology/point_3d.hpp" bodystart="158" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a64cfad0d41cddbf7c99fe11d4c9b89ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_3d&lt; T &gt;::set_position</definition>
        <argsstring>(const T &amp;new_r, const angle &amp;new_theta, const angle &amp;new_phi)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_3d::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="166" column="6" bodyfile="topology/point_3d.hpp" bodystart="166" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1aa2efe3fdc0971ab94643969a954bbc57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_3d&lt; T &gt;::set_position</definition>
        <argsstring>(const angle &amp;new_latitude, const angle &amp;new_longitude, const T &amp;new_altitude)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_3d::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_latitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_longitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_altitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="173" column="6" bodyfile="topology/point_3d.hpp" bodystart="173" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a2288b5142fb86a5136b4c038c07b5072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_3d&lt; T &gt;::rotate_in_x</definition>
        <argsstring>(const angle &amp;x_angle)</argsstring>
        <name>rotate_in_x</name>
        <qualifiedname>scifir::point_3d::rotate_in_x</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>x_angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="180" column="6" bodyfile="topology/point_3d.hpp" bodystart="180" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a578e1f6409dc9840c93be1fa546c0a34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_3d&lt; T &gt;::rotate_in_y</definition>
        <argsstring>(const angle &amp;x_angle)</argsstring>
        <name>rotate_in_y</name>
        <qualifiedname>scifir::point_3d::rotate_in_y</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>x_angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="188" column="6" bodyfile="topology/point_3d.hpp" bodystart="188" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a84c40a6f45fa6062cf00e4f0398e3a8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_3d&lt; T &gt;::rotate_in_z</definition>
        <argsstring>(const angle &amp;x_angle)</argsstring>
        <name>rotate_in_z</name>
        <qualifiedname>scifir::point_3d::rotate_in_z</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>x_angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="196" column="6" bodyfile="topology/point_3d.hpp" bodystart="196" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a20ab6b75c38c399373993c8a6d2b1a84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_3d&lt; T &gt;::move</definition>
        <argsstring>(const displacement_3d &amp;x_displacement)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_3d::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">displacement_3d</ref> &amp;</type>
          <declname>x_displacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="204" column="6" bodyfile="topology/point_3d.hpp" bodystart="204" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1aacf9557a8608e9898765e04eabf1b1c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_3d&lt; T &gt;::move</definition>
        <argsstring>(const T &amp;new_x, const T &amp;new_y, const T &amp;new_z)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_3d::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="211" column="6" bodyfile="topology/point_3d.hpp" bodystart="211" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a9ef95266865e4aba9e9c06f9f58cb91a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_3d&lt; T &gt;::move</definition>
        <argsstring>(const T &amp;new_p, const angle &amp;new_theta, T new_z)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_3d::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type>T</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="218" column="6" bodyfile="topology/point_3d.hpp" bodystart="218" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a968c069d8f6a70ea279da6993712a040" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_3d&lt; T &gt;::move</definition>
        <argsstring>(const T &amp;new_r, const angle &amp;new_theta, const angle &amp;new_phi)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_3d::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="226" column="6" bodyfile="topology/point_3d.hpp" bodystart="226" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a094e6512c9718eb0733eac8823a8c668" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T scifir::point_3d&lt; T &gt;::distance_to_origin</definition>
        <argsstring>() const</argsstring>
        <name>distance_to_origin</name>
        <qualifiedname>scifir::point_3d::distance_to_origin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="233" column="3" bodyfile="topology/point_3d.hpp" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1a79de6656281dd9dd06fc8766a62300dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_3d&lt; T &gt;::display_cylindrical</definition>
        <argsstring>() const</argsstring>
        <name>display_cylindrical</name>
        <qualifiedname>scifir::point_3d::display_cylindrical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="238" column="8" bodyfile="topology/point_3d.hpp" bodystart="238" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1aad1bf99533a92f4ee2f7cf456c6f1dbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_3d&lt; T &gt;::display_spherical</definition>
        <argsstring>() const</argsstring>
        <name>display_spherical</name>
        <qualifiedname>scifir::point_3d::display_spherical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="245" column="8" bodyfile="topology/point_3d.hpp" bodystart="245" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__3d_1acbeb87bca5536cefe8a737d08f918779" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_3d&lt; T &gt;::display_geographical</definition>
        <argsstring>() const</argsstring>
        <name>display_geographical</name>
        <qualifiedname>scifir::point_3d::display_geographical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_3d.hpp" line="252" column="8" bodyfile="topology/point_3d.hpp" bodystart="252" bodyend="257"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="topology/point_3d.hpp" line="18" column="1" bodyfile="topology/point_3d.hpp" bodystart="19" bodyend="262"/>
    <listofallmembers>
      <member refid="classscifir_1_1point__3d_1a79de6656281dd9dd06fc8766a62300dd" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>display_cylindrical</name></member>
      <member refid="classscifir_1_1point__3d_1acbeb87bca5536cefe8a737d08f918779" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>display_geographical</name></member>
      <member refid="classscifir_1_1point__3d_1aad1bf99533a92f4ee2f7cf456c6f1dbe" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>display_spherical</name></member>
      <member refid="classscifir_1_1point__3d_1a094e6512c9718eb0733eac8823a8c668" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>distance_to_origin</name></member>
      <member refid="classscifir_1_1point__3d_1a7c154064cac678249e905f0ab370ae0f" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>get_altitude</name></member>
      <member refid="classscifir_1_1point__3d_1a39095d4779444e4c38319eb107c9066b" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>get_latitude</name></member>
      <member refid="classscifir_1_1point__3d_1a32a4b1a914de0aa294641bf36fcb9901" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>get_longitude</name></member>
      <member refid="classscifir_1_1point__3d_1a2435572bfaeb1aa4657676931892b46a" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>get_p</name></member>
      <member refid="classscifir_1_1point__3d_1aa7322e37b1e8c652cc9617ea887032fa" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>get_phi</name></member>
      <member refid="classscifir_1_1point__3d_1ada36171009961dea0faadcfae2f8c1cc" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>get_r</name></member>
      <member refid="classscifir_1_1point__3d_1aa07121ee46361b25c52f2e44d736759e" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>get_theta</name></member>
      <member refid="classscifir_1_1point__3d_1a20ab6b75c38c399373993c8a6d2b1a84" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>move</name></member>
      <member refid="classscifir_1_1point__3d_1aacf9557a8608e9898765e04eabf1b1c3" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>move</name></member>
      <member refid="classscifir_1_1point__3d_1a9ef95266865e4aba9e9c06f9f58cb91a" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>move</name></member>
      <member refid="classscifir_1_1point__3d_1a968c069d8f6a70ea279da6993712a040" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>move</name></member>
      <member refid="classscifir_1_1point__3d_1aa7fcd0ed52f0edb7e95c54d9599e6e56" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__3d_1ac77258bbf8af00d4fa0aa92592d6756b" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__3d_1a09c25468cf1ec477ede3193df3dd62f5" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__3d_1a0306b765ab011ef2efb1a718d657a4f1" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>point_3d</name></member>
      <member refid="classscifir_1_1point__3d_1a24625ca343ae41bbe135577084eb2073" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>point_3d</name></member>
      <member refid="classscifir_1_1point__3d_1ab2003b104db261c702eb52ccd5e77f51" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>point_3d</name></member>
      <member refid="classscifir_1_1point__3d_1a52c9686bb0849ced5704661452230c9b" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>point_3d</name></member>
      <member refid="classscifir_1_1point__3d_1a1cd051c5c2b6fd1788252518d40efc39" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>point_3d</name></member>
      <member refid="classscifir_1_1point__3d_1a642799197517f9f5cfa2afad351512b6" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>point_3d</name></member>
      <member refid="classscifir_1_1point__3d_1a6384d705169aa1f41f124f43f97d1f03" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>point_3d</name></member>
      <member refid="classscifir_1_1point__3d_1a01ca640105be3ce75cd5c6ccf4c6206c" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>point_3d</name></member>
      <member refid="classscifir_1_1point__3d_1a0a01383196d2c69e2231a40e0d1e7cb9" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>point_3d</name></member>
      <member refid="classscifir_1_1point__3d_1a2288b5142fb86a5136b4c038c07b5072" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>rotate_in_x</name></member>
      <member refid="classscifir_1_1point__3d_1a578e1f6409dc9840c93be1fa546c0a34" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>rotate_in_y</name></member>
      <member refid="classscifir_1_1point__3d_1a84c40a6f45fa6062cf00e4f0398e3a8d" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>rotate_in_z</name></member>
      <member refid="classscifir_1_1point__3d_1a8a1da439acd2363837df17eb9bc70732" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__3d_1a720e40e2ed8a307e4d01e8727a8dc63c" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__3d_1a64cfad0d41cddbf7c99fe11d4c9b89ff" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__3d_1aa2efe3fdc0971ab94643969a954bbc57" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__3d_1ab9c20bdb77ad24a6c81b4cba153194e9" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>x</name></member>
      <member refid="classscifir_1_1point__3d_1a17eee5782be030b024dffe8fd97d95a6" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>y</name></member>
      <member refid="classscifir_1_1point__3d_1a2bf49970857ba45c16b2a9aa3338025c" prot="public" virt="non-virtual"><scope>scifir::point_3d</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
