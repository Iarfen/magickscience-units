<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1point__nd_3_01float_01_4" kind="class" language="C++" prot="public">
    <compoundname>scifir::point_nd&lt; float &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1point__nd_3_01float_01_4_1aa3425d85abe531524fced08184ebf68e" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt;</type>
        <definition>vector&lt;float&gt; scifir::point_nd&lt; float &gt;::values</definition>
        <argsstring></argsstring>
        <name>values</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::values</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="855" column="8" bodyfile="topology/point_nd.hpp" bodystart="855" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a4175ebb374f18f140bd012bf54a83996" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>()</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="444" column="1" bodyfile="topology/point_nd.hpp" bodystart="444" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ac76056b05c3791ed0e1a766aea4246d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const point_nd&lt; float &gt; &amp;x)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="447" column="1" bodyfile="topology/point_nd.hpp" bodystart="447" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a603a4c6f4ee12c45a4102ced4bc76bd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(point_nd&lt; float &gt; &amp;&amp;x)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="450" column="1" bodyfile="topology/point_nd.hpp" bodystart="450" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1aa801352acb1925e01fc118313d3ee28c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const vector&lt; float &gt; &amp;new_values)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="453" column="10" bodyfile="topology/point_nd.hpp" bodystart="453" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a1c7ad7e87456607bdc165ff15cb94c62" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const float &amp;new_x)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="456" column="10" bodyfile="topology/point_nd.hpp" bodystart="456" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1aebfb6c08338c653c32c345d9cbf591fe" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const float &amp;new_x, const float &amp;new_y)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="461" column="10" bodyfile="topology/point_nd.hpp" bodystart="461" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a1c296c9990d8d8318827bbca2b1a8b4f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const float &amp;new_p, const angle &amp;new_theta)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="467" column="10" bodyfile="topology/point_nd.hpp" bodystart="467" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ad869b59cfcf79119cae5bf47f7ae4e93" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const float &amp;new_x, const float &amp;new_y, const float &amp;new_z)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="472" column="10" bodyfile="topology/point_nd.hpp" bodystart="472" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ab6e9a929a5b41d605aa4d47edd2df45d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const float &amp;new_p, const angle &amp;new_theta, const float &amp;new_z)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="479" column="10" bodyfile="topology/point_nd.hpp" bodystart="479" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a7a988b999185e655f7dff29003dec7f5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const float &amp;new_r, const angle &amp;new_theta, const angle &amp;new_phi)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="484" column="10" bodyfile="topology/point_nd.hpp" bodystart="484" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a54cef154c1b8217b75110113c955b3cc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const angle &amp;new_latitude, const angle &amp;new_longitude, const float &amp;new_altitude)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_latitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_longitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_altitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="489" column="10" bodyfile="topology/point_nd.hpp" bodystart="489" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a98536d9aa6bcf6a3887d14ebc088265c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const coordinates_nd&lt; float &gt; &amp;)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__nd" kindref="compound">coordinates_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <defname>new_coordinates</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="494" column="10" bodyfile="topology/point_nd.cpp" bodystart="9" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ad901e48ea2bde844b9dd48006d7798c7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(string init_point_nd)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
          <declname>init_point_nd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="496" column="10" bodyfile="topology/point_nd.hpp" bodystart="496" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a4992c0884858486c0117d47ada803750" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
        <definition>point_nd&lt; float &gt; &amp; scifir::point_nd&lt; float &gt;::operator=</definition>
        <argsstring>(const point_nd&lt; float &gt; &amp;x_point)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="562" column="10" bodyfile="topology/point_nd.hpp" bodystart="562" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a4c2ec609453dd18763afab72c2ae9904" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
        <definition>point_nd&lt; float &gt; &amp; scifir::point_nd&lt; float &gt;::operator=</definition>
        <argsstring>(point_nd&lt; float &gt; &amp;&amp;x_point)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;&amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="568" column="10" bodyfile="topology/point_nd.hpp" bodystart="568" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a4b2b9d7ff779443dd72b099ca5449cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
        <definition>point_nd&lt; float &gt; &amp; scifir::point_nd&lt; float &gt;::operator=</definition>
        <argsstring>(const coordinates_nd&lt; float &gt; &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__nd" kindref="compound">coordinates_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <defname>x_coordinates</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="574" column="10" bodyfile="topology/point_nd.cpp" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a71cee233ce28f41a9fc48a29f6ffefa1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
        <definition>bool scifir::point_nd&lt; float &gt;::is_nd</definition>
        <argsstring>(unsigned int i) const</argsstring>
        <name>is_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::is_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">unsigned</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="576" column="6" bodyfile="topology/point_nd.hpp" bodystart="576" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a31c237773c49d6a7e0b0a074e0d52b6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        <definition>int scifir::point_nd&lt; float &gt;::get_nd</definition>
        <argsstring>() const</argsstring>
        <name>get_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_nd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="581" column="5" bodyfile="topology/point_nd.hpp" bodystart="581" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1acd569732895b62b793eb1923fb4c2145" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::point_nd&lt; float &gt;::get_p</definition>
        <argsstring>() const</argsstring>
        <name>get_p</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="586" column="7" bodyfile="topology/point_nd.hpp" bodystart="586" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1aee94aa49237b23182999763bc5146b76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_nd&lt; float &gt;::get_theta</definition>
        <argsstring>() const</argsstring>
        <name>get_theta</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="598" column="7" bodyfile="topology/point_nd.hpp" bodystart="598" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a16bd2b100d528b149ccb9c512f42a20a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::point_nd&lt; float &gt;::get_r</definition>
        <argsstring>() const</argsstring>
        <name>get_r</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="610" column="7" bodyfile="topology/point_nd.hpp" bodystart="610" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a30aab62b886029f37f0e9d111db2527f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_nd&lt; float &gt;::get_phi</definition>
        <argsstring>() const</argsstring>
        <name>get_phi</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_phi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="622" column="7" bodyfile="topology/point_nd.hpp" bodystart="622" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1acdc3f24fa8ba50f8305a3ed193a80fd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_nd&lt; float &gt;::get_latitude</definition>
        <argsstring>() const</argsstring>
        <name>get_latitude</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_latitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="634" column="7" bodyfile="topology/point_nd.hpp" bodystart="634" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a74a22877f701f4d2ffe673fe35343212" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_nd&lt; float &gt;::get_longitude</definition>
        <argsstring>() const</argsstring>
        <name>get_longitude</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_longitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="639" column="7" bodyfile="topology/point_nd.hpp" bodystart="639" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a41b22ee4a45424044d1f7d1c02ce89ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::point_nd&lt; float &gt;::get_altitude</definition>
        <argsstring>() const</argsstring>
        <name>get_altitude</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_altitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="644" column="7" bodyfile="topology/point_nd.hpp" bodystart="644" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a368f0ddb6649711c5cb44f5ed251f560" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(const float &amp;new_x)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="649" column="6" bodyfile="topology/point_nd.hpp" bodystart="649" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1adcf62ba478cc2512490b73400d0cce90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(const float &amp;new_x, const float &amp;new_y)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="655" column="6" bodyfile="topology/point_nd.hpp" bodystart="655" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a1a8a20be7537178e5949db9796e94e62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(const float &amp;new_p, const angle &amp;new_theta)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="662" column="6" bodyfile="topology/point_nd.hpp" bodystart="662" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a7d44596816377aac6cc1d87f9453e2d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(const float &amp;new_x, const float &amp;new_y, const float &amp;new_z)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="669" column="6" bodyfile="topology/point_nd.hpp" bodystart="669" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a0719b9df9981ac2a7e896fc3008b8fdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(const float &amp;new_p, const angle &amp;new_theta, const float &amp;new_z)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="677" column="6" bodyfile="topology/point_nd.hpp" bodystart="677" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a11d400e09e0a4139cdc5015f88e8be1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(const float &amp;new_r, const angle &amp;new_theta, const angle &amp;new_phi)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="685" column="6" bodyfile="topology/point_nd.hpp" bodystart="685" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a69632d16e34b5737b0fc47167f4568b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(const angle &amp;new_latitude, const angle &amp;new_longitude, const float &amp;new_altitude)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_latitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_longitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_altitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="693" column="6" bodyfile="topology/point_nd.hpp" bodystart="693" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1aec4d7cdb5ca2d4a535a4fccc91fe1b94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(const vector&lt; float &gt; &amp;new_values)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="701" column="6" bodyfile="topology/point_nd.hpp" bodystart="701" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a5d3f5f3f8293dc875b22784b3bcffa37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::rotate</definition>
        <argsstring>(int dimension_number, int axis, const angle &amp;new_theta)</argsstring>
        <name>rotate</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::rotate</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>dimension_number</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>axis</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="707" column="6" bodyfile="topology/point_nd.hpp" bodystart="707" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a4baf77b03c0ab6d421ab201299e42e6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const float &amp;new_x)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="725" column="6" bodyfile="topology/point_nd.hpp" bodystart="725" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a61cba4672a4a83dcd8526f547407d64b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const displacement_2d &amp;x_displacement)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">displacement_2d</ref> &amp;</type>
          <declname>x_displacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="733" column="6" bodyfile="topology/point_nd.hpp" bodystart="733" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1aeaedbae592df0a8bd005e34e09ed8dab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const float &amp;new_x, const float &amp;new_y)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="742" column="6" bodyfile="topology/point_nd.hpp" bodystart="742" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a76cce018a313eed75ddc84eab0cd411e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const float &amp;new_p, const angle &amp;new_theta)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="751" column="6" bodyfile="topology/point_nd.hpp" bodystart="751" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a7dab374ffca0ac8e1d8bc3779b4c29e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const displacement_3d &amp;x_displacement)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">displacement_3d</ref> &amp;</type>
          <declname>x_displacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="760" column="6" bodyfile="topology/point_nd.hpp" bodystart="760" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a389f0c00fa49892045c5fa3261b96021" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const float &amp;new_x, const float &amp;new_y, const float &amp;new_z)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="770" column="6" bodyfile="topology/point_nd.hpp" bodystart="770" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a2342dcb3e1de2272b424a4e16f684ed1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const float &amp;new_p, const angle &amp;new_theta, const float &amp;new_z)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="780" column="6" bodyfile="topology/point_nd.hpp" bodystart="780" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a8cf5c6586f85377e4815db9b30fe4f17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const float &amp;new_r, const angle &amp;new_theta, const angle &amp;new_phi)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="790" column="6" bodyfile="topology/point_nd.hpp" bodystart="790" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ac151973b85a78d0286efcc484af4c1c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const displacement_nd &amp;x_displacement)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">displacement_nd</ref> &amp;</type>
          <declname>x_displacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="800" column="6" bodyfile="topology/point_nd.hpp" bodystart="800" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a1c00210eb18032ab372998510976824c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const float &amp;new_r, const vector&lt; angle &gt; &amp;new_angles)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="811" column="6" bodyfile="topology/point_nd.hpp" bodystart="811" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a9e0a2df9bd04cfcb893a565ab9df7042" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::point_nd&lt; float &gt;::distance_to_origin</definition>
        <argsstring>() const</argsstring>
        <name>distance_to_origin</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::distance_to_origin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="817" column="7" bodyfile="topology/point_nd.hpp" bodystart="817" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a9ee69e0456f2bbd2423a4430cfb43d41" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_nd&lt; float &gt;::display_polar</definition>
        <argsstring>() const</argsstring>
        <name>display_polar</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::display_polar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="827" column="8" bodyfile="topology/point_nd.hpp" bodystart="827" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1aceb98e6b28ffc12f0e1edb7da478948a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_nd&lt; float &gt;::display_cylindrical</definition>
        <argsstring>() const</argsstring>
        <name>display_cylindrical</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::display_cylindrical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="834" column="8" bodyfile="topology/point_nd.hpp" bodystart="834" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ad5ffb2a9d55f525c6e17e37c4c75a13e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_nd&lt; float &gt;::display_spherical</definition>
        <argsstring>() const</argsstring>
        <name>display_spherical</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::display_spherical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="841" column="8" bodyfile="topology/point_nd.hpp" bodystart="841" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ac7287fa939b9a640f082326e42bf0900" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_nd&lt; float &gt;::display_geographical</definition>
        <argsstring>() const</argsstring>
        <name>display_geographical</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::display_geographical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="848" column="8" bodyfile="topology/point_nd.hpp" bodystart="848" bodyend="853"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="topology/point_nd.hpp" line="441" column="1" bodyfile="topology/point_nd.hpp" bodystart="442" bodyend="856"/>
    <listofallmembers>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aceb98e6b28ffc12f0e1edb7da478948a" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>display_cylindrical</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ac7287fa939b9a640f082326e42bf0900" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>display_geographical</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a9ee69e0456f2bbd2423a4430cfb43d41" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>display_polar</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ad5ffb2a9d55f525c6e17e37c4c75a13e" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>display_spherical</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a9e0a2df9bd04cfcb893a565ab9df7042" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>distance_to_origin</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a41b22ee4a45424044d1f7d1c02ce89ef" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_altitude</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1acdc3f24fa8ba50f8305a3ed193a80fd8" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_latitude</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a74a22877f701f4d2ffe673fe35343212" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_longitude</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a31c237773c49d6a7e0b0a074e0d52b6b" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1acd569732895b62b793eb1923fb4c2145" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_p</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a30aab62b886029f37f0e9d111db2527f" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_phi</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a16bd2b100d528b149ccb9c512f42a20a" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_r</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aee94aa49237b23182999763bc5146b76" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_theta</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a71cee233ce28f41a9fc48a29f6ffefa1" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>is_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a4baf77b03c0ab6d421ab201299e42e6d" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a61cba4672a4a83dcd8526f547407d64b" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aeaedbae592df0a8bd005e34e09ed8dab" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a76cce018a313eed75ddc84eab0cd411e" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a7dab374ffca0ac8e1d8bc3779b4c29e5" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a389f0c00fa49892045c5fa3261b96021" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a2342dcb3e1de2272b424a4e16f684ed1" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a8cf5c6586f85377e4815db9b30fe4f17" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ac151973b85a78d0286efcc484af4c1c6" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a1c00210eb18032ab372998510976824c" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a4992c0884858486c0117d47ada803750" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a4c2ec609453dd18763afab72c2ae9904" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a4b2b9d7ff779443dd72b099ca5449cd7" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a4175ebb374f18f140bd012bf54a83996" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ac76056b05c3791ed0e1a766aea4246d9" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a603a4c6f4ee12c45a4102ced4bc76bd4" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aa801352acb1925e01fc118313d3ee28c" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a1c7ad7e87456607bdc165ff15cb94c62" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aebfb6c08338c653c32c345d9cbf591fe" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a1c296c9990d8d8318827bbca2b1a8b4f" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ad869b59cfcf79119cae5bf47f7ae4e93" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ab6e9a929a5b41d605aa4d47edd2df45d" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a7a988b999185e655f7dff29003dec7f5" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a54cef154c1b8217b75110113c955b3cc" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a98536d9aa6bcf6a3887d14ebc088265c" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ad901e48ea2bde844b9dd48006d7798c7" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a5d3f5f3f8293dc875b22784b3bcffa37" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>rotate</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a368f0ddb6649711c5cb44f5ed251f560" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1adcf62ba478cc2512490b73400d0cce90" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a1a8a20be7537178e5949db9796e94e62" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a7d44596816377aac6cc1d87f9453e2d0" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a0719b9df9981ac2a7e896fc3008b8fdc" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a11d400e09e0a4139cdc5015f88e8be1c" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a69632d16e34b5737b0fc47167f4568b3" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aec4d7cdb5ca2d4a535a4fccc91fe1b94" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aa3425d85abe531524fced08184ebf68e" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>values</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
