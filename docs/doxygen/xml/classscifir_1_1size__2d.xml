<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1size__2d" kind="class" language="C++" prot="public">
    <compoundname>scifir::size_2d</compoundname>
    <templateparamlist>
      <param>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
        <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">length</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1size__2d_1a70d41a94d3d859315bf892358511af65" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::size_2d&lt; T &gt;::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <qualifiedname>scifir::size_2d::width</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="87" column="3" bodyfile="special_units/size_2d.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1size__2d_1aa0314d195f593f6fef07e7fc49b3eeaf" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::size_2d&lt; T &gt;::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <qualifiedname>scifir::size_2d::height</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="88" column="3" bodyfile="special_units/size_2d.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1size__2d_1af6de4e43d719be600b2991279af39786" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_2d&lt; T &gt;::size_2d</definition>
        <argsstring>()</argsstring>
        <name>size_2d</name>
        <qualifiedname>scifir::size_2d::size_2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="18" column="1" bodyfile="special_units/size_2d.hpp" bodystart="18" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_1a181f4a13c388a739376728b966a9ec71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_2d&lt; T &gt;::size_2d</definition>
        <argsstring>(const size_2d&lt; T &gt; &amp;x)</argsstring>
        <name>size_2d</name>
        <qualifiedname>scifir::size_2d::size_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="21" column="1" bodyfile="special_units/size_2d.hpp" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_1a281aaf9ed9dc259b45829bc1a685eaf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_2d&lt; T &gt;::size_2d</definition>
        <argsstring>(size_2d&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>size_2d</name>
        <qualifiedname>scifir::size_2d::size_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="24" column="1" bodyfile="special_units/size_2d.hpp" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_1a7ce1a231bf040bf85bc37e719084c736" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_2d&lt; T &gt;::size_2d</definition>
        <argsstring>(const T &amp;new_width, const T &amp;new_height)</argsstring>
        <name>size_2d</name>
        <qualifiedname>scifir::size_2d::size_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="27" column="10" bodyfile="special_units/size_2d.hpp" bodystart="27" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_1a0f2a482f58e42ca1a326dadad58aadd6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_2d&lt; T &gt;::size_2d</definition>
        <argsstring>(const string &amp;new_width, const string &amp;new_height)</argsstring>
        <name>size_2d</name>
        <qualifiedname>scifir::size_2d::size_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="30" column="10" bodyfile="special_units/size_2d.hpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_1a78fa06fd70e556b02ad800b0f7984383" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_2d&lt; T &gt;::size_2d</definition>
        <argsstring>(const string &amp;init_size_2d)</argsstring>
        <name>size_2d</name>
        <qualifiedname>scifir::size_2d::size_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_size_2d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="33" column="10" bodyfile="special_units/size_2d.hpp" bodystart="33" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_1aea4c1eedd739d06b55f91892d070bf90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; T &gt; &amp;</type>
        <definition>size_2d&lt; T &gt; &amp; scifir::size_2d&lt; T &gt;::operator=</definition>
        <argsstring>(const size_2d&lt; T &gt; &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::size_2d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="46" column="9" bodyfile="special_units/size_2d.hpp" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_1ae43efbda6f31686a0b9a1e9ead7b9ecb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; T &gt; &amp;</type>
        <definition>size_2d&lt; T &gt; &amp; scifir::size_2d&lt; T &gt;::operator=</definition>
        <argsstring>(size_2d&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::size_2d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="53" column="9" bodyfile="special_units/size_2d.hpp" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_1a266ce61ca2ce95cd3fc7523c07445ab3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; T &gt;</type>
        <definition>size_2d&lt; T &gt; scifir::size_2d&lt; T &gt;::operator+</definition>
        <argsstring>(const size_2d&lt; T &gt; &amp;x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::size_2d::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="60" column="9" bodyfile="special_units/size_2d.hpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_1ad3160844c496b5d863d94f5e0f9b0c4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; T &gt;</type>
        <definition>size_2d&lt; T &gt; scifir::size_2d&lt; T &gt;::operator-</definition>
        <argsstring>(const size_2d&lt; T &gt; &amp;x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::size_2d::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="65" column="9" bodyfile="special_units/size_2d.hpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_1a24be11097148fb9017e048b85d046e9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::size_2d&lt; T &gt;::operator+=</definition>
        <argsstring>(const size_2d&lt; T &gt; &amp;x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::size_2d::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="70" column="6" bodyfile="special_units/size_2d.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_1a1184fc788933022a4a2ace49ec68c94b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::size_2d&lt; T &gt;::operator-=</definition>
        <argsstring>(const size_2d&lt; T &gt; &amp;x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::size_2d::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="76" column="6" bodyfile="special_units/size_2d.hpp" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_1acb9c3251c584ecd0e9ecd08973bc84cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::size_2d&lt; T &gt;::get_area</definition>
        <argsstring>() const</argsstring>
        <name>get_area</name>
        <qualifiedname>scifir::size_2d::get_area</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="82" column="13" bodyfile="special_units/size_2d.hpp" bodystart="82" bodyend="85"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="special_units/size_2d.hpp" line="15" column="1" bodyfile="special_units/size_2d.hpp" bodystart="16" bodyend="89"/>
    <listofallmembers>
      <member refid="classscifir_1_1size__2d_1acb9c3251c584ecd0e9ecd08973bc84cb" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>get_area</name></member>
      <member refid="classscifir_1_1size__2d_1aa0314d195f593f6fef07e7fc49b3eeaf" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>height</name></member>
      <member refid="classscifir_1_1size__2d_1a266ce61ca2ce95cd3fc7523c07445ab3" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>operator+</name></member>
      <member refid="classscifir_1_1size__2d_1a24be11097148fb9017e048b85d046e9a" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1size__2d_1ad3160844c496b5d863d94f5e0f9b0c4d" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>operator-</name></member>
      <member refid="classscifir_1_1size__2d_1a1184fc788933022a4a2ace49ec68c94b" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1size__2d_1aea4c1eedd739d06b55f91892d070bf90" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__2d_1ae43efbda6f31686a0b9a1e9ead7b9ecb" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__2d_1af6de4e43d719be600b2991279af39786" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>size_2d</name></member>
      <member refid="classscifir_1_1size__2d_1a181f4a13c388a739376728b966a9ec71" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>size_2d</name></member>
      <member refid="classscifir_1_1size__2d_1a281aaf9ed9dc259b45829bc1a685eaf1" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>size_2d</name></member>
      <member refid="classscifir_1_1size__2d_1a7ce1a231bf040bf85bc37e719084c736" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>size_2d</name></member>
      <member refid="classscifir_1_1size__2d_1a0f2a482f58e42ca1a326dadad58aadd6" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>size_2d</name></member>
      <member refid="classscifir_1_1size__2d_1a78fa06fd70e556b02ad800b0f7984383" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>size_2d</name></member>
      <member refid="classscifir_1_1size__2d_1a70d41a94d3d859315bf892358511af65" prot="public" virt="non-virtual"><scope>scifir::size_2d</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
