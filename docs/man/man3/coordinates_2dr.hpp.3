.TH "coordinates/coordinates_2dr.hpp" 3 "Sat Jul 13 2024" "Version 2.0.0" "scifir-units" \" -*- nroff -*-
.ad l
.nh
.SH NAME
coordinates/coordinates_2dr.hpp
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./coordinates/coordinates_2d\&.hpp'\fP
.br
\fC#include '\&.\&./topology/direction\&.hpp'\fP
.br
\fC#include '\&.\&./topology/point_2d\&.hpp'\fP
.br
\fC#include '\&.\&./meca_number/angle\&.hpp'\fP
.br
\fC#include '\&.\&./util/types\&.hpp'\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <string>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBscifir::coordinates_2dr< T >\fP"
.br
.ti -1c
.RI "class \fBscifir::coordinates_2dr< float >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBscifir\fP"
.br
.RI "The namespace scifir contains all scifir-units, excepting the string literals, which are outside\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T > string \fBscifir::to_string\fP (const coordinates_2dr< T > &x)"
.br
.ti -1c
.RI "string \fBscifir::to_string\fP (const coordinates_2dr< float > &x)"
.br
.ti -1c
.RI "template<typename T , typename U > T \fBscifir::distance\fP (const coordinates_2dr< T > &x, const coordinates_2dr< U > &y)"
.br
.ti -1c
.RI "float \fBscifir::distance\fP (const coordinates_2dr< float > &x, const coordinates_2dr< float > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > T \fBscifir::distance\fP (const coordinates_2dr< T > &x, const coordinates_2d< U > &y)"
.br
.ti -1c
.RI "float \fBscifir::distance\fP (const coordinates_2dr< float > &x, const coordinates_2d< float > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > T \fBscifir::distance\fP (const coordinates_2d< T > &x, const coordinates_2dr< U > &y)"
.br
.ti -1c
.RI "float \fBscifir::distance\fP (const coordinates_2d< float > &x, const coordinates_2dr< float > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > T \fBscifir::distance\fP (const coordinates_2dr< T > &x, const point_2d< U > &y)"
.br
.ti -1c
.RI "float \fBscifir::distance\fP (const coordinates_2dr< float > &x, const point_2d< float > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > T \fBscifir::distance\fP (const point_2d< T > &x, const coordinates_2dr< U > &y)"
.br
.ti -1c
.RI "float \fBscifir::distance\fP (const point_2d< float > &x, const coordinates_2dr< float > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > bool \fBoperator==\fP (const \fBscifir::coordinates_2dr\fP< T > &x, const \fBscifir::coordinates_2dr\fP< U > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > bool \fBoperator!=\fP (const \fBscifir::coordinates_2dr\fP< T > &x, const \fBscifir::coordinates_2dr\fP< U > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > bool \fBoperator==\fP (const \fBscifir::coordinates_2dr\fP< T > &x, const \fBscifir::coordinates_2d\fP< U > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > bool \fBoperator!=\fP (const \fBscifir::coordinates_2dr\fP< T > &x, const \fBscifir::coordinates_2d\fP< U > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > bool \fBoperator==\fP (const \fBscifir::coordinates_2d\fP< T > &x, const \fBscifir::coordinates_2dr\fP< U > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > bool \fBoperator!=\fP (const \fBscifir::coordinates_2d\fP< T > &x, const \fBscifir::coordinates_2dr\fP< U > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > bool \fBoperator==\fP (const \fBscifir::coordinates_2dr\fP< T > &x, const \fBscifir::point_2d\fP< U > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > bool \fBoperator!=\fP (const \fBscifir::coordinates_2dr\fP< T > &x, const \fBscifir::point_2d\fP< U > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > bool \fBoperator==\fP (const \fBscifir::point_2d\fP< T > &x, const \fBscifir::coordinates_2dr\fP< U > &y)"
.br
.ti -1c
.RI "template<typename T , typename U > bool \fBoperator!=\fP (const \fBscifir::point_2d\fP< T > &x, const \fBscifir::coordinates_2dr\fP< U > &y)"
.br
.ti -1c
.RI "template<typename T > bool \fBoperator==\fP (const \fBscifir::coordinates_2dr\fP< T > &x, const string &init_coordinates_2dr)"
.br
.ti -1c
.RI "template<typename T > bool \fBoperator!=\fP (const \fBscifir::coordinates_2dr\fP< T > &x, const string &init_coordinates_2dr)"
.br
.ti -1c
.RI "template<typename T > bool \fBoperator==\fP (const string &init_coordinates_2dr, const \fBscifir::coordinates_2dr\fP< T > &x)"
.br
.ti -1c
.RI "template<typename T > bool \fBoperator!=\fP (const string &init_coordinates_2dr, const \fBscifir::coordinates_2dr\fP< T > &x)"
.br
.ti -1c
.RI "template<typename T > void \fBoperator+=\fP (string &x, const \fBscifir::coordinates_2dr\fP< T > &y)"
.br
.ti -1c
.RI "template<typename T > string \fBoperator+\fP (const string &x, const \fBscifir::coordinates_2dr\fP< T > &y)"
.br
.ti -1c
.RI "template<typename T > string \fBoperator+\fP (const \fBscifir::coordinates_2dr\fP< T > &x, const string &y)"
.br
.ti -1c
.RI "template<typename T > ostream & \fBoperator<<\fP (ostream &os, const \fBscifir::coordinates_2dr\fP< T > &x)"
.br
.ti -1c
.RI "ostream & \fBoperator<<\fP (ostream &os, const \fBscifir::coordinates_2dr\fP< float > &x)"
.br
.ti -1c
.RI "template<typename T > istream & \fBoperator>>\fP (istream &is, \fBscifir::coordinates_2dr\fP< T > &x)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "template<typename T , typename U > bool operator!= (const \fBscifir::coordinates_2d\fP< T > & x, const \fBscifir::coordinates_2dr\fP< U > & y)"

.PP
Definition at line 584 of file coordinates_2dr\&.hpp\&.
.PP
.nf
585 {
586     return !(x == y);
587 }
.fi
.SS "template<typename T , typename U > bool operator!= (const \fBscifir::coordinates_2dr\fP< T > & x, const \fBscifir::coordinates_2d\fP< U > & y)"

.PP
Definition at line 565 of file coordinates_2dr\&.hpp\&.
.PP
.nf
566 {
567     return !(x == y);
568 }
.fi
.SS "template<typename T , typename U > bool operator!= (const \fBscifir::coordinates_2dr\fP< T > & x, const \fBscifir::coordinates_2dr\fP< U > & y)"

.PP
Definition at line 546 of file coordinates_2dr\&.hpp\&.
.PP
.nf
547 {
548     return !(x == y);
549 }
.fi
.SS "template<typename T , typename U > bool operator!= (const \fBscifir::coordinates_2dr\fP< T > & x, const \fBscifir::point_2d\fP< U > & y)"

.PP
Definition at line 603 of file coordinates_2dr\&.hpp\&.
.PP
.nf
604 {
605     return !(x == y);
606 }
.fi
.SS "template<typename T > bool operator!= (const \fBscifir::coordinates_2dr\fP< T > & x, const string & init_coordinates_2dr)"

.PP
Definition at line 635 of file coordinates_2dr\&.hpp\&.
.PP
.nf
636 {
637     return !(x == init_coordinates_2dr);
638 }
.fi
.SS "template<typename T , typename U > bool operator!= (const \fBscifir::point_2d\fP< T > & x, const \fBscifir::coordinates_2dr\fP< U > & y)"

.PP
Definition at line 622 of file coordinates_2dr\&.hpp\&.
.PP
.nf
623 {
624     return !(x == y);
625 }
.fi
.SS "template<typename T > bool operator!= (const string & init_coordinates_2dr, const \fBscifir::coordinates_2dr\fP< T > & x)"

.PP
Definition at line 648 of file coordinates_2dr\&.hpp\&.
.PP
.nf
649 {
650     return !(init_coordinates_2dr == x);
651 }
.fi
.SS "template<typename T > string operator+ (const \fBscifir::coordinates_2dr\fP< T > & x, const string & y)"

.PP
Definition at line 666 of file coordinates_2dr\&.hpp\&.
.PP
.nf
667 {
668     return to_string(x) + y;
669 }
.fi
.SS "template<typename T > string operator+ (const string & x, const \fBscifir::coordinates_2dr\fP< T > & y)"

.PP
Definition at line 660 of file coordinates_2dr\&.hpp\&.
.PP
.nf
661 {
662     return x + to_string(y);
663 }
.fi
.SS "template<typename T > void operator+= (string & x, const \fBscifir::coordinates_2dr\fP< T > & y)"

.PP
Definition at line 654 of file coordinates_2dr\&.hpp\&.
.PP
.nf
655 {
656     x += to_string(y);
657 }
.fi
.SS "ostream& operator<< (ostream & os, const \fBscifir::coordinates_2dr\fP< float > & x)"

.PP
Definition at line 38 of file coordinates_2dr\&.cpp\&.
.PP
.nf
39 {
40     return os << scifir::to_string(x);
41 }
.fi
.SS "template<typename T > ostream& operator<< (ostream & os, const \fBscifir::coordinates_2dr\fP< T > & x)"

.PP
Definition at line 672 of file coordinates_2dr\&.hpp\&.
.PP
.nf
673 {
674     return os << to_string(x);
675 }
.fi
.SS "template<typename T , typename U > bool operator== (const \fBscifir::coordinates_2d\fP< T > & x, const \fBscifir::coordinates_2dr\fP< U > & y)"

.PP
Definition at line 571 of file coordinates_2dr\&.hpp\&.
.PP
.nf
572 {
573     if (x\&.x == y\&.x and x\&.y == y\&.y)
574     {
575         return true;
576     }
577     else
578     {
579         return false;
580     }
581 }
.fi
.SS "template<typename T , typename U > bool operator== (const \fBscifir::coordinates_2dr\fP< T > & x, const \fBscifir::coordinates_2d\fP< U > & y)"

.PP
Definition at line 552 of file coordinates_2dr\&.hpp\&.
.PP
.nf
553 {
554     if (x\&.x == y\&.x and x\&.y == y\&.y)
555     {
556         return true;
557     }
558     else
559     {
560         return false;
561     }
562 }
.fi
.SS "template<typename T , typename U > bool operator== (const \fBscifir::coordinates_2dr\fP< T > & x, const \fBscifir::coordinates_2dr\fP< U > & y)"

.PP
Definition at line 533 of file coordinates_2dr\&.hpp\&.
.PP
.nf
534 {
535     if (x\&.x == y\&.x and x\&.y == y\&.y and x\&.theta == y\&.theta)
536     {
537         return true;
538     }
539     else
540     {
541         return false;
542     }
543 }
.fi
.SS "template<typename T , typename U > bool operator== (const \fBscifir::coordinates_2dr\fP< T > & x, const \fBscifir::point_2d\fP< U > & y)"

.PP
Definition at line 590 of file coordinates_2dr\&.hpp\&.
.PP
.nf
591 {
592     if (x\&.x == y\&.x and x\&.y == y\&.y)
593     {
594         return true;
595     }
596     else
597     {
598         return false;
599     }
600 }
.fi
.SS "template<typename T > bool operator== (const \fBscifir::coordinates_2dr\fP< T > & x, const string & init_coordinates_2dr)"

.PP
Definition at line 628 of file coordinates_2dr\&.hpp\&.
.PP
.nf
629 {
630     scifir::coordinates_2dr<T> y(init_coordinates_2dr);
631     return (x == y);
632 }
.fi
.SS "template<typename T , typename U > bool operator== (const \fBscifir::point_2d\fP< T > & x, const \fBscifir::coordinates_2dr\fP< U > & y)"

.PP
Definition at line 609 of file coordinates_2dr\&.hpp\&.
.PP
.nf
610 {
611     if (x\&.x == y\&.x and x\&.y == y\&.y)
612     {
613         return true;
614     }
615     else
616     {
617         return false;
618     }
619 }
.fi
.SS "template<typename T > bool operator== (const string & init_coordinates_2dr, const \fBscifir::coordinates_2dr\fP< T > & x)"

.PP
Definition at line 641 of file coordinates_2dr\&.hpp\&.
.PP
.nf
642 {
643     scifir::coordinates_2dr<T> y(init_coordinates_2dr);
644     return (x == y);
645 }
.fi
.SS "template<typename T > istream& operator>> (istream & is, \fBscifir::coordinates_2dr\fP< T > & x)"

.PP
Definition at line 680 of file coordinates_2dr\&.hpp\&.
.PP
.nf
681 {
682     char a[256];
683     is\&.getline(a, 256);
684     string b(a);
685     boost::trim(b);
686     x = scifir::coordinates_2dr<T>(b);
687     return is;
688 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for scifir-units from the source code\&.
