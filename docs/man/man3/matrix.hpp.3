.TH "util/matrix.hpp" 3 "Version 2.0.0" "scifir-units" \" -*- nroff -*-
.ad l
.nh
.SH NAME
util/matrix.hpp
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./units/scalar_unit\&.hpp'\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <sstream>\fP
.br
\fC#include <vector>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBscifir::matrix< T, M, N >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBscifir\fP"
.br
.RI "The namespace scifir contains all scifir-units, excepting the string literals, which are outside\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T , int M, int N> bool \fBoperator==\fP (const \fBscifir::matrix\fP< T, M, N > &x, const \fBscifir::matrix\fP< T, M, N > &y)"
.br
.ti -1c
.RI "template<typename T , int M, int N> bool \fBoperator!=\fP (const \fBscifir::matrix\fP< T, M, N > &x, const \fBscifir::matrix\fP< T, M, N > &y)"
.br
.ti -1c
.RI "template<typename T , int M, int N> ostream & \fBoperator<<\fP (ostream &os, const \fBscifir::matrix\fP< T, M, N > &x)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "template<typename T , int M, int N> bool operator!= (const \fBscifir::matrix\fP< T, M, N > & x, const \fBscifir::matrix\fP< T, M, N > & y)"

.PP
Definition at line \fB275\fP of file \fBmatrix\&.hpp\fP\&..PP
.nf
276 {
277     return !(x == y);
278 }
.fi

.SS "template<typename T , int M, int N> ostream & operator<< (ostream & os, const \fBscifir::matrix\fP< T, M, N > & x)"

.PP
Definition at line \fB281\fP of file \fBmatrix\&.hpp\fP\&..PP
.nf
282 {
283     ostringstream output;
284     output << "[";
285     for(int i = 1; i <= x\&.row_size(); i++)
286     {
287         for(int j = 1; j <= x\&.column_size(); j++)
288         {
289             output << x(i, j);
290             if(j < x\&.column_size())
291             {
292                 output << ", ";
293             }
294         }
295         if(i < x\&.row_size())
296         {
297             output << endl;
298         }
299     }
300     output << "]";
301     return os << output\&.str();
302 }
.fi

.SS "template<typename T , int M, int N> bool operator== (const \fBscifir::matrix\fP< T, M, N > & x, const \fBscifir::matrix\fP< T, M, N > & y)"

.PP
Definition at line \fB259\fP of file \fBmatrix\&.hpp\fP\&..PP
.nf
260 {
261     for(int i = 0; i < x\&.row_size(); i++)
262     {
263         for(int j = 0; j < x\&.column_size(); j++)
264         {
265             if (x(i,j) != y(i,j))
266             {
267                 return false;
268             }
269         }
270     }
271     return true;
272 }
.fi

.SH "Author"
.PP 
Generated automatically by Doxygen for scifir-units from the source code\&.
