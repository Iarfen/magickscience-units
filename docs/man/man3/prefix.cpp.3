.TH "units/prefix.cpp" 3 "Sat Jul 13 2024" "Version 2.0.0" "scifir-units" \" -*- nroff -*-
.ad l
.nh
.SH NAME
units/prefix.cpp
.SH SYNOPSIS
.br
.PP
\fC#include '\&./prefix\&.hpp'\fP
.br
\fC#include <iostream>\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBscifir\fP"
.br
.RI "The namespace scifir contains all scifir-units, excepting the string literals, which are outside\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "prefix::type \fBscifir::prefix_string\fP (const string &x)"
.br
.RI "Returns the value of the enum \fBprefix::type\fP associated with the string x given\&. "
.ti -1c
.RI "prefix \fBscifir::closest_prefix\fP (const prefix &actual_prefix, int actual_scale)"
.br
.RI "Returns the closes prefix related to the scale of the current value\&. It is used when displaying a \fBscalar_unit\fP to the most close prefix available\&. "
.ti -1c
.RI "prefix \fBscifir::create_prefix_by_factor\fP (int factor)"
.br
.RI "Creates the prefix of the factor given, which is always between a range\&. "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBscifir::prefix\fP &x, const \fBscifir::prefix\fP &y)"
.br
.RI "Comparison operator\&. Compares if two prefixes are the same, that's, if they have the same prefix::type\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBscifir::prefix\fP &x, const \fBscifir::prefix\fP &y)"
.br
.RI "Comparison operator\&. Compares if two prefixes are different, that's, if they don't have the same prefix::type\&. "
.ti -1c
.RI "bool \fBoperator<=\fP (const \fBscifir::prefix\fP &x, const \fBscifir::prefix\fP &y)"
.br
.RI "Checks if prefix x is of a lower or equal factor than prefix y\&. "
.ti -1c
.RI "bool \fBoperator>\fP (const \fBscifir::prefix\fP &x, const \fBscifir::prefix\fP &y)"
.br
.RI "Checks if prefix x is of a greather factor than prefix y\&. "
.ti -1c
.RI "bool \fBoperator>=\fP (const \fBscifir::prefix\fP &x, const \fBscifir::prefix\fP &y)"
.br
.RI "Checks if prefix x is of an equal or greather factor than prefix y\&. "
.ti -1c
.RI "ostream & \fBoperator<<\fP (ostream &os, const \fBscifir::prefix\fP &x)"
.br
.RI "Adds the string representation of the prefix x to an output stream\&. "
.in -1c
.SH "Function Documentation"
.PP 
.SS "bool operator!= (const \fBscifir::prefix\fP & x, const \fBscifir::prefix\fP & y)"

.PP
Comparison operator\&. Compares if two prefixes are different, that's, if they don't have the same prefix::type\&. 
.PP
Definition at line 441 of file prefix\&.cpp\&.
.PP
.nf
442 {
443     return !(x == y);
444 }
.fi
.SS "ostream & operator<< (ostream & os, const \fBscifir::prefix\fP & x)"

.PP
Adds the string representation of the prefix x to an output stream\&. 
.PP
Definition at line 461 of file prefix\&.cpp\&.
.PP
.nf
462 {
463     return os << x\&.get_symbol();
464 }
.fi
.SS "bool operator<= (const \fBscifir::prefix\fP & x, const \fBscifir::prefix\fP & y)"

.PP
Checks if prefix x is of a lower or equal factor than prefix y\&. 
.PP
Definition at line 446 of file prefix\&.cpp\&.
.PP
.nf
447 {
448     return (x\&.get_conversion_factor() <= y\&.get_conversion_factor());
449 }
.fi
.SS "bool operator== (const \fBscifir::prefix\fP & x, const \fBscifir::prefix\fP & y)"

.PP
Comparison operator\&. Compares if two prefixes are the same, that's, if they have the same prefix::type\&. 
.PP
Definition at line 436 of file prefix\&.cpp\&.
.PP
.nf
437 {
438     return (x\&.get_conversion_factor() == y\&.get_conversion_factor());
439 }
.fi
.SS "bool operator> (const \fBscifir::prefix\fP & x, const \fBscifir::prefix\fP & y)"

.PP
Checks if prefix x is of a greather factor than prefix y\&. 
.PP
Definition at line 451 of file prefix\&.cpp\&.
.PP
.nf
452 {
453     return (x\&.get_conversion_factor() > y\&.get_conversion_factor());
454 }
.fi
.SS "bool operator>= (const \fBscifir::prefix\fP & x, const \fBscifir::prefix\fP & y)"

.PP
Checks if prefix x is of an equal or greather factor than prefix y\&. 
.PP
Definition at line 456 of file prefix\&.cpp\&.
.PP
.nf
457 {
458     return (x\&.get_conversion_factor() >= y\&.get_conversion_factor());
459 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for scifir-units from the source code\&.
