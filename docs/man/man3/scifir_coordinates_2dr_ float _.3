.TH "scifir::coordinates_2dr< float >" 3 "Version 2.0.0" "scifir-units" \" -*- nroff -*-
.ad l
.nh
.SH NAME
scifir::coordinates_2dr< float >
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBcoordinates_2dr\fP (\fBconst\fP \fBcoordinates_2dr\fP< \fBfloat\fP > &\fBx_coordinates\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP (\fBcoordinates_2dr\fP< \fBfloat\fP > &&\fBx_coordinates\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP (\fBfloat\fP \fBnew_x\fP, \fBfloat\fP \fBnew_y\fP, \fBconst\fP \fBangle\fP &\fBnew_theta\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP (\fBfloat\fP \fBnew_p\fP, \fBconst\fP \fBangle\fP &\fBnew_polar_theta\fP, \fBconst\fP \fBangle\fP &\fBnew_theta\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP (\fBconst\fP \fBscifir::point_2d\fP< \fBfloat\fP > &\fBnew_point\fP, \fBconst\fP \fBangle\fP &\fBnew_theta\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP (\fBscifir::point_2d\fP< \fBfloat\fP > &&\fBnew_point\fP, \fBconst\fP \fBangle\fP &\fBnew_theta\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP (\fBconst\fP \fBscifir::coordinates_2d\fP< \fBfloat\fP > &\fBnew_point\fP, \fBconst\fP \fBangle\fP &\fBnew_theta\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP (\fBscifir::coordinates_2d\fP< \fBfloat\fP > &&\fBnew_point\fP, \fBconst\fP \fBangle\fP &\fBnew_theta\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP (\fBconst\fP \fBstring\fP &\fBinit_coordinates_2dr\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP< \fBfloat\fP > & \fBoperator=\fP (\fBconst\fP \fBcoordinates_2dr\fP< \fBfloat\fP > &\fBx_coordinates\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP< \fBfloat\fP > & \fBoperator=\fP (\fBcoordinates_2dr\fP< \fBfloat\fP > &&\fBx_coordinates\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP< \fBfloat\fP > & \fBoperator=\fP (\fBconst\fP \fBpoint_2d\fP< \fBfloat\fP > &\fBx_point\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP< \fBfloat\fP > & \fBoperator=\fP (\fBpoint_2d\fP< \fBfloat\fP > &&\fBx_point\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP< \fBfloat\fP > & \fBoperator=\fP (\fBconst\fP \fBcoordinates_2d\fP< \fBfloat\fP > &\fBx_coordinates\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP< \fBfloat\fP > & \fBoperator=\fP (\fBcoordinates_2d\fP< \fBfloat\fP > &&\fBx_coordinates\fP)"
.br
.ti -1c
.RI "\fBcoordinates_2dr\fP< \fBfloat\fP > & \fBoperator=\fP (\fBconst\fP \fBstring\fP &\fBinit_coordinates_2dr\fP)"
.br
.ti -1c
.RI "\fBfloat\fP \fBget_p\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBangle\fP \fBget_polar_theta\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBpoint_to\fP (direction::name x)"
.br
.ti -1c
.RI "\fBvoid\fP \fBset_position\fP (\fBfloat\fP \fBnew_x\fP, \fBfloat\fP \fBnew_y\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBset_position\fP (\fBfloat\fP \fBnew_p\fP, \fBconst\fP \fBangle\fP &\fBnew_theta\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBrotate\fP (\fBconst\fP \fBangle\fP &\fBx_angle\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmove\fP (\fBconst\fP \fBdisplacement_2d\fP &\fBx_displacement\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmove\fP (\fBfloat\fP \fBnew_x\fP, \fBfloat\fP \fBnew_y\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmove\fP (\fBfloat\fP \fBnew_p\fP, \fBconst\fP \fBangle\fP &\fBnew_theta\fP)"
.br
.ti -1c
.RI "\fBfloat\fP \fBdistance_to_origin\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBstring\fP \fBdisplay_cartesian\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBstring\fP \fBdisplay_polar\fP () \fBconst\fP"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBfloat\fP \fBx\fP"
.br
.ti -1c
.RI "\fBfloat\fP \fBy\fP"
.br
.ti -1c
.RI "\fBangle\fP \fBtheta\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for scifir-units from the source code\&.
