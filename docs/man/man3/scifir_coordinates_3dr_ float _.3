.TH "scifir::coordinates_3dr< float >" 3 "Sat Jul 13 2024" "Version 2.0.0" "scifir-units" \" -*- nroff -*-
.ad l
.nh
.SH NAME
scifir::coordinates_3dr< float >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <coordinates_3dr\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBcoordinates_3dr\fP ()"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP (const \fBcoordinates_3dr\fP< float > &x_coordinates)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP (\fBcoordinates_3dr\fP< float > &&x_coordinates)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP (float new_x, float new_y, float new_z, const \fBangle\fP &new_theta, const \fBangle\fP &new_phi)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP (float new_p, const \fBangle\fP &new_cylindrical_theta, float new_z, const \fBangle\fP &new_theta, const \fBangle\fP &new_phi)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP (float new_r, const \fBangle\fP &new_spherical_theta, const \fBangle\fP &new_spherical_phi, const \fBangle\fP &new_theta, const \fBangle\fP &new_phi)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP (const \fBangle\fP &new_latitude, const \fBangle\fP &new_longitude, float new_altitude, const \fBangle\fP &new_theta, const \fBangle\fP &new_phi)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP (const \fBpoint_3d\fP< float > &x_point, const \fBangle\fP &new_theta, const \fBangle\fP &new_phi)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP (\fBpoint_3d\fP< float > &&x_point, const \fBangle\fP &new_theta, const \fBangle\fP &new_phi)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP (const \fBcoordinates_3d\fP< float > &x_coordinates, const \fBangle\fP &new_theta, const \fBangle\fP &new_phi)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP (\fBcoordinates_3d\fP< float > &&x_coordinates, const \fBangle\fP &new_theta, const \fBangle\fP &new_phi)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP (const string &init_coordinates_3dr)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP< float > & \fBoperator=\fP (const \fBcoordinates_3dr\fP< float > &x_coordinates)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP< float > & \fBoperator=\fP (\fBcoordinates_3dr\fP< float > &&x_coordinates)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP< float > & \fBoperator=\fP (const \fBpoint_3d\fP< float > &x_point)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP< float > & \fBoperator=\fP (\fBpoint_3d\fP< float > &&x_point)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP< float > & \fBoperator=\fP (const \fBcoordinates_3d\fP< float > &x_coordinates)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP< float > & \fBoperator=\fP (\fBcoordinates_3d\fP< float > &&x_coordinates)"
.br
.ti -1c
.RI "\fBcoordinates_3dr\fP< float > & \fBoperator=\fP (const string &init_coordinates_3dr)"
.br
.ti -1c
.RI "float \fBget_p\fP () const"
.br
.ti -1c
.RI "\fBangle\fP \fBget_spherical_theta\fP () const"
.br
.ti -1c
.RI "float \fBget_r\fP () const"
.br
.ti -1c
.RI "\fBangle\fP \fBget_spherical_phi\fP () const"
.br
.ti -1c
.RI "\fBangle\fP \fBget_latitude\fP () const"
.br
.ti -1c
.RI "\fBangle\fP \fBget_longitude\fP () const"
.br
.ti -1c
.RI "float \fBget_altitude\fP () const"
.br
.ti -1c
.RI "void \fBpoint_to\fP (\fBdirection::name\fP \fBx\fP)"
.br
.ti -1c
.RI "void \fBset_position\fP (float new_x, float new_y, float new_z)"
.br
.ti -1c
.RI "void \fBset_position\fP (float new_p, const \fBangle\fP &new_theta, float new_z)"
.br
.ti -1c
.RI "void \fBset_position\fP (float new_r, const \fBangle\fP &new_theta, const \fBangle\fP &new_phi)"
.br
.ti -1c
.RI "void \fBset_position\fP (const \fBangle\fP &new_latitude, const \fBangle\fP &new_longitude, float new_altitude)"
.br
.ti -1c
.RI "void \fBrotate_in_x\fP (const \fBangle\fP &x_angle)"
.br
.ti -1c
.RI "void \fBrotate_in_y\fP (const \fBangle\fP &x_angle)"
.br
.ti -1c
.RI "void \fBrotate_in_z\fP (const \fBangle\fP &x_angle)"
.br
.ti -1c
.RI "void \fBmove\fP (const displacement_3d &x_displacement)"
.br
.ti -1c
.RI "void \fBmove\fP (float new_x, float new_y, float new_z)"
.br
.ti -1c
.RI "void \fBmove\fP (float new_p, const \fBangle\fP &new_theta, float new_z)"
.br
.ti -1c
.RI "void \fBmove\fP (float new_r, const \fBangle\fP &new_theta, const \fBangle\fP &new_phi)"
.br
.ti -1c
.RI "float \fBdistance_to_origin\fP () const"
.br
.ti -1c
.RI "string \fBdisplay_cartesian\fP () const"
.br
.ti -1c
.RI "string \fBdisplay_cylindrical\fP () const"
.br
.ti -1c
.RI "string \fBdisplay_spherical\fP () const"
.br
.ti -1c
.RI "string \fBdisplay_geographical\fP () const"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "float \fBx\fP"
.br
.ti -1c
.RI "float \fBy\fP"
.br
.ti -1c
.RI "float \fBz\fP"
.br
.ti -1c
.RI "\fBangle\fP \fBtheta\fP"
.br
.ti -1c
.RI "\fBangle\fP \fBphi\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBinitialize_from_string\fP (string init_coordinates_3dr)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 476 of file coordinates_3dr\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBscifir::coordinates_3dr\fP< float >::\fBcoordinates_3dr\fP ()\fC [inline]\fP"

.PP
Definition at line 479 of file coordinates_3dr\&.hpp\&.
.PP
.nf
479                               : x(),y(),z(),theta(),phi()
480             {}
.fi
.SS "\fBscifir::coordinates_3dr\fP< float >::\fBcoordinates_3dr\fP (const \fBcoordinates_3dr\fP< float > & x_coordinates)\fC [inline]\fP"

.PP
Definition at line 482 of file coordinates_3dr\&.hpp\&.
.PP
.nf
482                                                                          : x(x_coordinates\&.x),y(x_coordinates\&.y),z(x_coordinates\&.z),theta(x_coordinates\&.theta),phi(x_coordinates\&.phi)
483             {}
.fi
.SS "\fBscifir::coordinates_3dr\fP< float >::\fBcoordinates_3dr\fP (\fBcoordinates_3dr\fP< float > && x_coordinates)\fC [inline]\fP"

.PP
Definition at line 485 of file coordinates_3dr\&.hpp\&.
.PP
.nf
485                                                                     : x(std::move(x_coordinates\&.x)),y(std::move(x_coordinates\&.y)),z(std::move(x_coordinates\&.z)),theta(std::move(x_coordinates\&.theta)),phi(std::move(x_coordinates\&.phi))
486             {}
.fi
.SS "\fBscifir::coordinates_3dr\fP< float >::\fBcoordinates_3dr\fP (float new_x, float new_y, float new_z, const \fBangle\fP & new_theta, const \fBangle\fP & new_phi)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 488 of file coordinates_3dr\&.hpp\&.
.PP
.nf
488                                                                                                                       : x(new_x),y(new_y),z(new_z),theta(new_theta),phi(new_phi)
489             {}
.fi
.SS "\fBscifir::coordinates_3dr\fP< float >::\fBcoordinates_3dr\fP (float new_p, const \fBangle\fP & new_cylindrical_theta, float new_z, const \fBangle\fP & new_theta, const \fBangle\fP & new_phi)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 491 of file coordinates_3dr\&.hpp\&.
.PP
.nf
491                                                                                                                                              : x(),y(),z(),theta(new_theta),phi(new_phi)
492             {
493                 set_position(new_p,new_cylindrical_theta,new_z);
494             }
.fi
.SS "\fBscifir::coordinates_3dr\fP< float >::\fBcoordinates_3dr\fP (float new_r, const \fBangle\fP & new_spherical_theta, const \fBangle\fP & new_spherical_phi, const \fBangle\fP & new_theta, const \fBangle\fP & new_phi)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 496 of file coordinates_3dr\&.hpp\&.
.PP
.nf
496                                                                                                                                                               : x(),y(),z(),theta(new_theta),phi(new_phi)
497             {
498                 set_position(new_r,new_spherical_theta,new_spherical_phi);
499             }
.fi
.SS "\fBscifir::coordinates_3dr\fP< float >::\fBcoordinates_3dr\fP (const \fBangle\fP & new_latitude, const \fBangle\fP & new_longitude, float new_altitude, const \fBangle\fP & new_theta, const \fBangle\fP & new_phi)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 501 of file coordinates_3dr\&.hpp\&.
.PP
.nf
501                                                                                                                                                           : x(),y(),z(),theta(new_theta),phi(new_phi)
502             {
503                 set_position(new_latitude,new_longitude,new_altitude);
504             }
.fi
.SS "\fBscifir::coordinates_3dr\fP< float >::\fBcoordinates_3dr\fP (const \fBpoint_3d\fP< float > & x_point, const \fBangle\fP & new_theta, const \fBangle\fP & new_phi)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 506 of file coordinates_3dr\&.hpp\&.
.PP
.nf
506                                                                                                                  : x(x_point\&.x),y(x_point\&.y),z(x_point\&.z),theta(new_theta),phi(new_phi)
507             {}
.fi
.SS "\fBscifir::coordinates_3dr\fP< float >::\fBcoordinates_3dr\fP (\fBpoint_3d\fP< float > && x_point, const \fBangle\fP & new_theta, const \fBangle\fP & new_phi)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 509 of file coordinates_3dr\&.hpp\&.
.PP
.nf
509                                                                                                             : x(std::move(x_point\&.x)),y(std::move(x_point\&.y)),z(std::move(x_point\&.z)),theta(new_theta),phi(new_phi)
510             {}
.fi
.SS "\fBscifir::coordinates_3dr\fP< float >::\fBcoordinates_3dr\fP (const \fBcoordinates_3d\fP< float > & x_coordinates, const \fBangle\fP & new_theta, const \fBangle\fP & new_phi)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 512 of file coordinates_3dr\&.hpp\&.
.PP
.nf
512                                                                                                                              : x(x_coordinates\&.x),y(x_coordinates\&.y),z(x_coordinates\&.z),theta(new_theta),phi(new_phi)
513             {}
.fi
.SS "\fBscifir::coordinates_3dr\fP< float >::\fBcoordinates_3dr\fP (\fBcoordinates_3d\fP< float > && x_coordinates, const \fBangle\fP & new_theta, const \fBangle\fP & new_phi)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 515 of file coordinates_3dr\&.hpp\&.
.PP
.nf
515                                                                                                                         : x(std::move(x_coordinates\&.x)),y(std::move(x_coordinates\&.y)),z(std::move(x_coordinates\&.z)),theta(new_theta),phi(new_phi)
516             {}
.fi
.SS "\fBscifir::coordinates_3dr\fP< float >::\fBcoordinates_3dr\fP (const string & init_coordinates_3dr)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 518 of file coordinates_3dr\&.hpp\&.
.PP
.nf
518                                                                          : coordinates_3dr()
519             {
520                 initialize_from_string(init_coordinates_3dr);
521             }
.fi
.SH "Member Function Documentation"
.PP 
.SS "string \fBscifir::coordinates_3dr\fP< float >::display_cartesian () const\fC [inline]\fP"

.PP
Definition at line 835 of file coordinates_3dr\&.hpp\&.
.PP
.nf
836             {
837                 ostringstream out;
838                 out << "(" << display_float(x) << "," << display_float(y) << "," << display_float(z) << ";" << theta << "," << phi << ")";
839                 return out\&.str();
840             }
.fi
.SS "string \fBscifir::coordinates_3dr\fP< float >::display_cylindrical () const\fC [inline]\fP"

.PP
Definition at line 842 of file coordinates_3dr\&.hpp\&.
.PP
.nf
843             {
844                 ostringstream out;
845                 out << "(" << display_float(get_p()) << "," << get_spherical_theta() << "," << display_float(z) << ";" << theta << "," << phi << ")";
846                 return out\&.str();
847             }
.fi
.SS "string \fBscifir::coordinates_3dr\fP< float >::display_geographical () const\fC [inline]\fP"

.PP
Definition at line 856 of file coordinates_3dr\&.hpp\&.
.PP
.nf
857             {
858                 ostringstream out;
859                 out << "(" << get_latitude() << "," << get_longitude() << "," << display_float(get_altitude()) << ";" << theta << "," << phi << ")";
860                 return out\&.str();
861             }
.fi
.SS "string \fBscifir::coordinates_3dr\fP< float >::display_spherical () const\fC [inline]\fP"

.PP
Definition at line 849 of file coordinates_3dr\&.hpp\&.
.PP
.nf
850             {
851                 ostringstream out;
852                 out << "(" << display_float(get_r()) << "," << get_spherical_theta() << "," << get_spherical_phi() << ";" << theta << "," << phi << ")";
853                 return out\&.str();
854             }
.fi
.SS "float \fBscifir::coordinates_3dr\fP< float >::distance_to_origin () const\fC [inline]\fP"

.PP
Definition at line 830 of file coordinates_3dr\&.hpp\&.
.PP
.nf
831             {
832                 return float(std::sqrt(std::pow(x,2) + std::pow(y,2) + std::pow(z,2)));
833             }
.fi
.SS "float \fBscifir::coordinates_3dr\fP< float >::get_altitude () const\fC [inline]\fP"

.PP
Definition at line 611 of file coordinates_3dr\&.hpp\&.
.PP
.nf
612             {
613                 return 0\&.0f;
614             }
.fi
.SS "\fBangle\fP \fBscifir::coordinates_3dr\fP< float >::get_latitude () const\fC [inline]\fP"

.PP
Definition at line 601 of file coordinates_3dr\&.hpp\&.
.PP
.nf
602             {
603                 return scifir::asin(z/6317);
604             }
.fi
.SS "\fBangle\fP \fBscifir::coordinates_3dr\fP< float >::get_longitude () const\fC [inline]\fP"

.PP
Definition at line 606 of file coordinates_3dr\&.hpp\&.
.PP
.nf
607             {
608                 return scifir::atan(float(y/x));
609             }
.fi
.SS "float \fBscifir::coordinates_3dr\fP< float >::get_p () const\fC [inline]\fP"

.PP
Definition at line 581 of file coordinates_3dr\&.hpp\&.
.PP
.nf
582             {
583                 return float(std::sqrt(std::pow(x,2) + std::pow(y,2)));
584             }
.fi
.SS "float \fBscifir::coordinates_3dr\fP< float >::get_r () const\fC [inline]\fP"

.PP
Definition at line 591 of file coordinates_3dr\&.hpp\&.
.PP
.nf
592             {
593                 return float(std::sqrt(std::pow(x,2) + std::pow(y,2) + std::pow(z,2)));
594             }
.fi
.SS "\fBangle\fP \fBscifir::coordinates_3dr\fP< float >::get_spherical_phi () const\fC [inline]\fP"

.PP
Definition at line 596 of file coordinates_3dr\&.hpp\&.
.PP
.nf
597             {
598                 return angle(scifir::acos_degree(float(z/std::sqrt(std::pow(x,2) + std::pow(y,2) + std::pow(z,2)))));
599             }
.fi
.SS "\fBangle\fP \fBscifir::coordinates_3dr\fP< float >::get_spherical_theta () const\fC [inline]\fP"

.PP
Definition at line 586 of file coordinates_3dr\&.hpp\&.
.PP
.nf
587             {
588                 return scifir::atan(float(y/x));
589             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::initialize_from_string (string init_coordinates_3dr)\fC [inline]\fP, \fC [private]\fP"

.PP
Definition at line 870 of file coordinates_3dr\&.hpp\&.
.PP
.nf
871             {
872                 vector<string> init_coordinates;
873                 vector<string> init_values;
874                 vector<string> init_angles;
875                 if (init_coordinates_3dr\&.front() == '(')
876                 {
877                     init_coordinates_3dr\&.erase(0,1);
878                 }
879                 if (init_coordinates_3dr\&.back() == ')')
880                 {
881                     init_coordinates_3dr\&.erase(init_coordinates_3dr\&.size()-1,1);
882                 }
883                 boost::split(init_coordinates,init_coordinates_3dr,boost::is_any_of(";"));
884                 if (init_coordinates\&.size() > 0)
885                 {
886                     boost::split(init_values,init_coordinates[0],boost::is_any_of(","));
887                 }
888                 if (init_coordinates\&.size() > 1)
889                 {
890                     boost::split(init_angles,init_coordinates[1],boost::is_any_of(","));
891                 }
892                 if (init_values\&.size() == 3 and init_angles\&.size() == 2)
893                 {
894                     if (is_angle(init_values[0]))
895                     {
896                         if (is_angle(init_values[1]))
897                         {
898                             if (!is_angle(init_values[2]))
899                             {
900                                 set_position(angle(init_values[0]),angle(init_values[1]),stof(init_values[2]));
901                             }
902                         }
903                     }
904                     else
905                     {
906                         if (is_angle(init_values[1]))
907                         {
908                             if (is_angle(init_values[2]))
909                             {
910                                 set_position(stof(init_values[0]),angle(init_values[1]),angle(init_values[2]));
911                             }
912                             else
913                             {
914                                 set_position(stof(init_values[0]),angle(init_values[1]),stof(init_values[2]));
915                             }
916                         }
917                         else
918                         {
919                             if (!is_angle(init_values[2]))
920                             {
921                                 set_position(stof(init_values[0]),stof(init_values[1]),stof(init_values[2]));
922                             }
923                         }
924                     }
925                     theta = angle(init_angles[0]);
926                     phi = angle(init_angles[1]);
927                 }
928             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::move (const displacement_3d & x_displacement)\fC [inline]\fP"

.PP
Definition at line 802 of file coordinates_3dr\&.hpp\&.
.PP
.nf
803             {
804                 x += float(x_displacement\&.x_projection());
805                 y += float(x_displacement\&.y_projection());
806                 z += float(x_displacement\&.z_projection());
807             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::move (float new_p, const \fBangle\fP & new_theta, float new_z)\fC [inline]\fP"

.PP
Definition at line 816 of file coordinates_3dr\&.hpp\&.
.PP
.nf
817             {
818                 x += new_p * scifir::cos(new_theta);
819                 y += new_p * scifir::sin(new_theta);
820                 z += new_z;
821             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::move (float new_r, const \fBangle\fP & new_theta, const \fBangle\fP & new_phi)\fC [inline]\fP"

.PP
Definition at line 823 of file coordinates_3dr\&.hpp\&.
.PP
.nf
824             {
825                 x += new_r * scifir::cos(new_theta) * scifir::sin(new_phi);
826                 y += new_r * scifir::sin(new_theta) * scifir::sin(new_phi);
827                 z += new_r * scifir::cos(new_phi);
828             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::move (float new_x, float new_y, float new_z)\fC [inline]\fP"

.PP
Definition at line 809 of file coordinates_3dr\&.hpp\&.
.PP
.nf
810             {
811                 x += new_x;
812                 y += new_y;
813                 z += new_z;
814             }
.fi
.SS "\fBcoordinates_3dr\fP<float>& \fBscifir::coordinates_3dr\fP< float >::operator= (const \fBcoordinates_3d\fP< float > & x_coordinates)\fC [inline]\fP"

.PP
Definition at line 559 of file coordinates_3dr\&.hpp\&.
.PP
.nf
560             {
561                 x = x_coordinates\&.x;
562                 y = x_coordinates\&.y;
563                 z = x_coordinates\&.z;
564                 return *this;
565             }
.fi
.SS "\fBcoordinates_3dr\fP<float>& \fBscifir::coordinates_3dr\fP< float >::operator= (const \fBcoordinates_3dr\fP< float > & x_coordinates)\fC [inline]\fP"

.PP
Definition at line 523 of file coordinates_3dr\&.hpp\&.
.PP
.nf
524             {
525                 x = x_coordinates\&.x;
526                 y = x_coordinates\&.y;
527                 z = x_coordinates\&.z;
528                 theta = x_coordinates\&.theta;
529                 phi = x_coordinates\&.phi;
530                 return *this;
531             }
.fi
.SS "\fBcoordinates_3dr\fP<float>& \fBscifir::coordinates_3dr\fP< float >::operator= (const \fBpoint_3d\fP< float > & x_point)\fC [inline]\fP"

.PP
Definition at line 543 of file coordinates_3dr\&.hpp\&.
.PP
.nf
544             {
545                 x = x_point\&.x;
546                 y = x_point\&.y;
547                 z = x_point\&.z;
548                 return *this;
549             }
.fi
.SS "\fBcoordinates_3dr\fP<float>& \fBscifir::coordinates_3dr\fP< float >::operator= (const string & init_coordinates_3dr)\fC [inline]\fP"

.PP
Definition at line 575 of file coordinates_3dr\&.hpp\&.
.PP
.nf
576             {
577                 initialize_from_string(init_coordinates_3dr);
578                 return *this;
579             }
.fi
.SS "\fBcoordinates_3dr\fP<float>& \fBscifir::coordinates_3dr\fP< float >::operator= (\fBcoordinates_3d\fP< float > && x_coordinates)\fC [inline]\fP"

.PP
Definition at line 567 of file coordinates_3dr\&.hpp\&.
.PP
.nf
568             {
569                 x = std::move(x_coordinates\&.x);
570                 y = std::move(x_coordinates\&.y);
571                 z = std::move(x_coordinates\&.z);
572                 return *this;
573             }
.fi
.SS "\fBcoordinates_3dr\fP<float>& \fBscifir::coordinates_3dr\fP< float >::operator= (\fBcoordinates_3dr\fP< float > && x_coordinates)\fC [inline]\fP"

.PP
Definition at line 533 of file coordinates_3dr\&.hpp\&.
.PP
.nf
534             {
535                 x = std::move(x_coordinates\&.x);
536                 y = std::move(x_coordinates\&.y);
537                 z = std::move(x_coordinates\&.z);
538                 theta = std::move(x_coordinates\&.theta);
539                 phi = std::move(x_coordinates\&.phi);
540                 return *this;
541             }
.fi
.SS "\fBcoordinates_3dr\fP<float>& \fBscifir::coordinates_3dr\fP< float >::operator= (\fBpoint_3d\fP< float > && x_point)\fC [inline]\fP"

.PP
Definition at line 551 of file coordinates_3dr\&.hpp\&.
.PP
.nf
552             {
553                 x = std::move(x_point\&.x);
554                 y = std::move(x_point\&.y);
555                 z = std::move(x_point\&.z);
556                 return *this;
557             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::point_to (\fBdirection::name\fP x)\fC [inline]\fP"

.PP
Definition at line 616 of file coordinates_3dr\&.hpp\&.
.PP
.nf
617             {
618                 if (x == direction::LEFT)
619                 {
620                     theta = 270\&.0f;
621                     phi = 90\&.0f;
622                 }
623                 else if(x == direction::RIGHT)
624                 {
625                     theta = 90\&.0f;
626                     phi = 90\&.0f;
627                 }
628                 else if(x == direction::TOP)
629                 {
630                     theta = 0\&.0f;
631                     phi = 0\&.0f;
632                 }
633                 else if(x == direction::BOTTOM)
634                 {
635                     theta = 0\&.0f;
636                     phi = 180\&.0f;
637                 }
638                 else if(x == direction::LEFT_TOP)
639                 {
640                     theta = 270\&.0f;
641                     phi = 45\&.0f;
642                 }
643                 else if(x == direction::RIGHT_TOP)
644                 {
645                     theta = 90\&.0f;
646                     phi = 45\&.0f;
647                 }
648                 else if(x == direction::RIGHT_BOTTOM)
649                 {
650                     theta = 90\&.0f;
651                     phi = 135\&.0f;
652                 }
653                 else if(x == direction::LEFT_BOTTOM)
654                 {
655                     theta = 270\&.0f;
656                     phi = 135\&.0f;
657                 }
658                 else if(x == direction::FRONT)
659                 {
660                     theta = 0\&.0f;
661                     phi = 90\&.0f;
662                 }
663                 else if(x == direction::BACK)
664                 {
665                     theta = 180\&.0f;
666                     phi = 90\&.0f;
667                 }
668                 else if(x == direction::LEFT_FRONT)
669                 {
670                     theta = 315\&.0f;
671                     phi = 90\&.0f;
672                 }
673                 else if(x == direction::RIGHT_FRONT)
674                 {
675                     theta = 45\&.0f;
676                     phi = 90\&.0f;
677                 }
678                 else if(x == direction::TOP_FRONT)
679                 {
680                     theta = 0\&.0f;
681                     phi = 45\&.0f;
682                 }
683                 else if(x == direction::BOTTOM_FRONT)
684                 {
685                     theta = 0\&.0f;
686                     phi = 135\&.0f;
687                 }
688                 else if(x == direction::LEFT_BACK)
689                 {
690                     theta = 225\&.0f;
691                     phi = 90\&.0f;
692                 }
693                 else if(x == direction::RIGHT_BACK)
694                 {
695                     theta = 135\&.0f;
696                     phi = 90\&.0f;
697                 }
698                 else if(x == direction::TOP_BACK)
699                 {
700                     theta = 180\&.0f;
701                     phi = 45\&.0f;
702                 }
703                 else if(x == direction::BOTTOM_BACK)
704                 {
705                     theta = 180\&.0f;
706                     phi = 135\&.0f;
707                 }
708                 else if(x == direction::LEFT_TOP_FRONT)
709                 {
710                     theta = 315\&.0f;
711                     phi = 45\&.0f;
712                 }
713                 else if(x == direction::RIGHT_TOP_FRONT)
714                 {
715                     theta = 45\&.0f;
716                     phi = 45\&.0f;
717                 }
718                 else if(x == direction::LEFT_BOTTOM_FRONT)
719                 {
720                     theta = 315\&.0f;
721                     phi = 135\&.0f;
722                 }
723                 else if(x == direction::RIGHT_BOTTOM_FRONT)
724                 {
725                     theta = 45\&.0f;
726                     phi = 135\&.0f;
727                 }
728                 else if(x == direction::LEFT_TOP_BACK)
729                 {
730                     theta = 225\&.0f;
731                     phi = 45\&.0f;
732                 }
733                 else if(x == direction::RIGHT_TOP_BACK)
734                 {
735                     theta = 135\&.0f;
736                     phi = 45\&.0f;
737                 }
738                 else if(x == direction::LEFT_BOTTOM_BACK)
739                 {
740                     theta = 225\&.0f;
741                     phi = 135\&.0f;
742                 }
743                 else if(x == direction::RIGHT_BOTTOM_BACK)
744                 {
745                     theta = 135\&.0f;
746                     phi = 135\&.0f;
747                 }
748             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::rotate_in_x (const \fBangle\fP & x_angle)\fC [inline]\fP"

.PP
Definition at line 778 of file coordinates_3dr\&.hpp\&.
.PP
.nf
779             {
780                 float y_coord = y;
781                 float z_coord = z;
782                 y = y_coord * scifir::cos(x_angle) - z_coord * scifir::sin(x_angle);
783                 z = y_coord * scifir::sin(x_angle) + z_coord * scifir::cos(x_angle);
784             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::rotate_in_y (const \fBangle\fP & x_angle)\fC [inline]\fP"

.PP
Definition at line 786 of file coordinates_3dr\&.hpp\&.
.PP
.nf
787             {
788                 float x_coord = x;
789                 float z_coord = z;
790                 x = x_coord * scifir::cos(x_angle) - z_coord * scifir::sin(x_angle);
791                 z = x_coord * scifir::sin(x_angle) + z_coord * scifir::cos(x_angle);
792             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::rotate_in_z (const \fBangle\fP & x_angle)\fC [inline]\fP"

.PP
Definition at line 794 of file coordinates_3dr\&.hpp\&.
.PP
.nf
795             {
796                 float x_coord = x;
797                 float y_coord = y;
798                 x = x_coord * scifir::cos(x_angle) - y_coord * scifir::sin(x_angle);
799                 y = x_coord * scifir::sin(x_angle) + y_coord * scifir::cos(x_angle);
800             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::set_position (const \fBangle\fP & new_latitude, const \fBangle\fP & new_longitude, float new_altitude)\fC [inline]\fP"

.PP
Definition at line 771 of file coordinates_3dr\&.hpp\&.
.PP
.nf
772             {
773                 x = new_altitude * scifir::cos(new_latitude) * scifir::cos(new_longitude);
774                 y = new_altitude * scifir::cos(new_latitude) * scifir::sin(new_longitude);
775                 z = new_altitude * scifir::sin(new_latitude);
776             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::set_position (float new_p, const \fBangle\fP & new_theta, float new_z)\fC [inline]\fP"

.PP
Definition at line 757 of file coordinates_3dr\&.hpp\&.
.PP
.nf
758             {
759                 x = new_p * scifir::cos(new_theta);
760                 y = new_p * scifir::sin(new_theta);
761                 z = new_z;
762             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::set_position (float new_r, const \fBangle\fP & new_theta, const \fBangle\fP & new_phi)\fC [inline]\fP"

.PP
Definition at line 764 of file coordinates_3dr\&.hpp\&.
.PP
.nf
765             {
766                 x = new_r * scifir::cos(new_theta) * scifir::sin(new_phi);
767                 y = new_r * scifir::sin(new_theta) * scifir::sin(new_phi);
768                 z = new_r * scifir::cos(new_phi);
769             }
.fi
.SS "void \fBscifir::coordinates_3dr\fP< float >::set_position (float new_x, float new_y, float new_z)\fC [inline]\fP"

.PP
Definition at line 750 of file coordinates_3dr\&.hpp\&.
.PP
.nf
751             {
752                 x = new_x;
753                 y = new_y;
754                 z = new_z;
755             }
.fi
.SH "Member Data Documentation"
.PP 
.SS "\fBangle\fP \fBscifir::coordinates_3dr\fP< float >::phi"

.PP
Definition at line 867 of file coordinates_3dr\&.hpp\&.
.SS "\fBangle\fP \fBscifir::coordinates_3dr\fP< float >::theta"

.PP
Definition at line 866 of file coordinates_3dr\&.hpp\&.
.SS "float \fBscifir::coordinates_3dr\fP< float >::x"

.PP
Definition at line 863 of file coordinates_3dr\&.hpp\&.
.SS "float \fBscifir::coordinates_3dr\fP< float >::y"

.PP
Definition at line 864 of file coordinates_3dr\&.hpp\&.
.SS "float \fBscifir::coordinates_3dr\fP< float >::z"

.PP
Definition at line 865 of file coordinates_3dr\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for scifir-units from the source code\&.
