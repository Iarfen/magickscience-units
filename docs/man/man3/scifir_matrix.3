.TH "scifir::matrix< T, M, N >" 3 "Version 2.0.0" "scifir-units" \" -*- nroff -*-
.ad l
.nh
.SH NAME
scifir::matrix< T, M, N >
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmatrix\fP (\fBinitializer_list\fP< vector< T > > x)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBmatrix\fP< T, M, N > * \fBclone\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBint\fP \fBrow_size\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBint\fP \fBcolumn_size\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBmatrix\fP< T, 1, N > \fBrow\fP (\fBint\fP \fBi\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBmatrix\fP< T, M, 1 > \fBcolumn\fP (\fBint\fP \fBj\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP T & \fBoperator()\fP (\fBint\fP \fBi\fP, \fBint\fP \fBj\fP) \fBconst\fP"
.br
.ti -1c
.RI "T & \fBoperator()\fP (\fBint\fP \fBi\fP, \fBint\fP \fBj\fP)"
.br
.ti -1c
.RI "\fBmatrix\fP< T, M, N > \fBoperator+\fP (\fBconst\fP \fBmatrix\fP< T, M, N > &x)"
.br
.ti -1c
.RI "\fBmatrix\fP< T, M, N > \fBoperator\-\fP (\fBconst\fP \fBmatrix\fP< T, M, N > &x)"
.br
.ti -1c
.RI "template<\fBint\fP N2> \fBmatrix\fP< T, N, \fBN2\fP > \fBoperator*\fP (\fBconst\fP \fBmatrix\fP< T, N, \fBN2\fP > &x)"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBU\fP , \fBtypename\fP  = typename enable_if<is_integer_number<T>::value>::type> \fBmatrix\fP< T, M, N > \fBoperator^\fP (\fBU\fP x)"
.br
.ti -1c
.RI "\fBvoid\fP \fBoperator+=\fP (\fBconst\fP \fBmatrix\fP< T, M, N > &x)"
.br
.ti -1c
.RI "\fBvoid\fP \fBoperator\-=\fP (\fBconst\fP \fBmatrix\fP< T, M, N > &x)"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBU\fP , \fBtypename\fP  = typename enable_if<is_integer_number<T>::value>::type> \fBvoid\fP \fBoperator^=\fP (\fBU\fP x)"
.br
.ti -1c
.RI "\fBmatrix\fP< T, N, M > \fBt\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBis_square\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBis_diagonal\fP () \fBconst\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for scifir-units from the source code\&.
