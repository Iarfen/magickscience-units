.TH "scifir::point_1d< T >" 3 "Sat Jul 13 2024" "Version 2.0.0" "scifir-units" \" -*- nroff -*-
.ad l
.nh
.SH NAME
scifir::point_1d< T >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <point_1d\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBpoint_1d\fP ()"
.br
.ti -1c
.RI "\fBpoint_1d\fP (const \fBpoint_1d\fP< T > &x_point)"
.br
.ti -1c
.RI "\fBpoint_1d\fP (\fBpoint_1d\fP< T > &&x_point)"
.br
.ti -1c
.RI "\fBpoint_1d\fP (const T &new_x)"
.br
.ti -1c
.RI "\fBpoint_1d\fP (const \fBcoordinates_1d\fP< T > &x_coordinates)"
.br
.ti -1c
.RI "\fBpoint_1d\fP (\fBcoordinates_1d\fP< T > &&x_coordinates)"
.br
.ti -1c
.RI "\fBpoint_1d\fP (const string &init_point_1d)"
.br
.ti -1c
.RI "\fBpoint_1d\fP< T > & \fBoperator=\fP (const \fBpoint_1d\fP< T > &x_point)"
.br
.ti -1c
.RI "\fBpoint_1d\fP< T > & \fBoperator=\fP (\fBpoint_1d\fP< T > &&x_point)"
.br
.ti -1c
.RI "\fBpoint_1d\fP< T > & \fBoperator=\fP (const \fBcoordinates_1d\fP< T > &)"
.br
.ti -1c
.RI "\fBpoint_1d\fP< T > & \fBoperator=\fP (\fBcoordinates_1d\fP< T > &&)"
.br
.ti -1c
.RI "\fBpoint_1d\fP< T > & \fBoperator=\fP (const string &init_point_1d)"
.br
.ti -1c
.RI "void \fBset_position\fP (const T &new_x)"
.br
.ti -1c
.RI "void \fBmove\fP (const T &x_value)"
.br
.ti -1c
.RI "T \fBdistance_to_origin\fP () const"
.br
.ti -1c
.RI "string \fBdisplay_cartesian\fP () const"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "T \fBx\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBinitialize_from_string\fP (string init_point_1d)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T = length>
.br
class scifir::point_1d< T >"

.PP
Definition at line 19 of file point_1d\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T  = length> \fBscifir::point_1d\fP< T >::\fBpoint_1d\fP ()\fC [inline]\fP"

.PP
Definition at line 22 of file point_1d\&.hpp\&.
.PP
.nf
22                        : x()
23             {}
.fi
.SS "template<typename T  = length> \fBscifir::point_1d\fP< T >::\fBpoint_1d\fP (const \fBpoint_1d\fP< T > & x_point)\fC [inline]\fP"

.PP
Definition at line 25 of file point_1d\&.hpp\&.
.PP
.nf
25                                                  : x(x_point\&.x)
26             {}
.fi
.SS "template<typename T  = length> \fBscifir::point_1d\fP< T >::\fBpoint_1d\fP (\fBpoint_1d\fP< T > && x_point)\fC [inline]\fP"

.PP
Definition at line 28 of file point_1d\&.hpp\&.
.PP
.nf
28                                             : x(std::move(x_point\&.x))
29             {}
.fi
.SS "template<typename T  = length> \fBscifir::point_1d\fP< T >::\fBpoint_1d\fP (const T & new_x)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 31 of file point_1d\&.hpp\&.
.PP
.nf
31                                               : x(new_x)
32             {}
.fi
.SS "template<typename T > \fBscifir::point_1d\fP< T >::\fBpoint_1d\fP (const \fBcoordinates_1d\fP< T > & x_coordinates)\fC [explicit]\fP"

.PP
Definition at line 13 of file point_1d_impl\&.hpp\&.
.PP
.nf
13                                                                 : x(x_coordinates\&.x)
14     {}
.fi
.SS "template<typename T > \fBscifir::point_1d\fP< T >::\fBpoint_1d\fP (\fBcoordinates_1d\fP< T > && x_coordinates)\fC [explicit]\fP"

.PP
Definition at line 17 of file point_1d_impl\&.hpp\&.
.PP
.nf
17                                                            : x(std::move(x_coordinates\&.x))
18     {}
.fi
.SS "template<typename T  = length> \fBscifir::point_1d\fP< T >::\fBpoint_1d\fP (const string & init_point_1d)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Definition at line 38 of file point_1d\&.hpp\&.
.PP
.nf
38                                                            : point_1d()
39             {
40                 initialize_from_string(init_point_1d);
41             }
.fi
.SH "Member Function Documentation"
.PP 
.SS "template<typename T  = length> string \fBscifir::point_1d\fP< T >::display_cartesian () const\fC [inline]\fP"

.PP
Definition at line 80 of file point_1d\&.hpp\&.
.PP
.nf
81             {
82                 ostringstream out;
83                 out << "(" << x << ")";
84                 return out\&.str();
85             }
.fi
.SS "template<typename T  = length> T \fBscifir::point_1d\fP< T >::distance_to_origin () const\fC [inline]\fP"

.PP
Definition at line 75 of file point_1d\&.hpp\&.
.PP
.nf
76             {
77                 return T(std::abs(x\&.get_value()),x\&.get_dimensions());
78             }
.fi
.SS "template<typename T  = length> void \fBscifir::point_1d\fP< T >::initialize_from_string (string init_point_1d)\fC [inline]\fP, \fC [private]\fP"

.PP
Definition at line 90 of file point_1d\&.hpp\&.
.PP
.nf
91             {
92                 if (init_point_1d\&.front() == '(')
93                 {
94                     init_point_1d\&.erase(0,1);
95                 }
96                 if (init_point_1d\&.back() == ')')
97                 {
98                     init_point_1d\&.erase(init_point_1d\&.size()-1,1);
99                 }
100                 x = T(init_point_1d);
101             }
.fi
.SS "template<typename T  = length> void \fBscifir::point_1d\fP< T >::move (const T & x_value)\fC [inline]\fP"

.PP
Definition at line 70 of file point_1d\&.hpp\&.
.PP
.nf
71             {
72                 x += x_value;
73             }
.fi
.SS "template<typename T > \fBpoint_1d\fP< T > & \fBscifir::point_1d\fP< T >::operator= (const \fBcoordinates_1d\fP< T > & x_coordinates)"

.PP
Definition at line 21 of file point_1d_impl\&.hpp\&.
.PP
.nf
22     {
23         x = x_coordinates\&.x;
24         return *this;
25     }
.fi
.SS "template<typename T  = length> \fBpoint_1d\fP<T>& \fBscifir::point_1d\fP< T >::operator= (const \fBpoint_1d\fP< T > & x_point)\fC [inline]\fP"

.PP
Definition at line 43 of file point_1d\&.hpp\&.
.PP
.nf
44             {
45                 x = x_point\&.x;
46                 return *this;
47             }
.fi
.SS "template<typename T  = length> \fBpoint_1d\fP<T>& \fBscifir::point_1d\fP< T >::operator= (const string & init_point_1d)\fC [inline]\fP"

.PP
Definition at line 59 of file point_1d\&.hpp\&.
.PP
.nf
60             {
61                 initialize_from_string(init_point_1d);
62                 return *this;
63             }
.fi
.SS "template<typename T > \fBpoint_1d\fP< T > & \fBscifir::point_1d\fP< T >::operator= (\fBcoordinates_1d\fP< T > && x_coordinates)"

.PP
Definition at line 28 of file point_1d_impl\&.hpp\&.
.PP
.nf
29     {
30         x = std::move(x_coordinates\&.x);
31         return *this;
32     }
.fi
.SS "template<typename T  = length> \fBpoint_1d\fP<T>& \fBscifir::point_1d\fP< T >::operator= (\fBpoint_1d\fP< T > && x_point)\fC [inline]\fP"

.PP
Definition at line 49 of file point_1d\&.hpp\&.
.PP
.nf
50             {
51                 x = std::move(x_point\&.x);
52                 return *this;
53             }
.fi
.SS "template<typename T  = length> void \fBscifir::point_1d\fP< T >::set_position (const T & new_x)\fC [inline]\fP"

.PP
Definition at line 65 of file point_1d\&.hpp\&.
.PP
.nf
66             {
67                 x = new_x;
68             }
.fi
.SH "Member Data Documentation"
.PP 
.SS "template<typename T  = length> T \fBscifir::point_1d\fP< T >::x"

.PP
Definition at line 87 of file point_1d\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for scifir-units from the source code\&.
