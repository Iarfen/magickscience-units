.TH "scifir::zid" 3 "Sat Jul 13 2024" "Version 2.0.0" "scifir-units" \" -*- nroff -*-
.ad l
.nh
.SH NAME
scifir::zid
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <zid\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBzid\fP ()"
.br
.ti -1c
.RI "\fBzid\fP (const \fBzid\fP &x)"
.br
.ti -1c
.RI "\fBzid\fP (\fBzid\fP &&x)"
.br
.ti -1c
.RI "\fBzid\fP (const \fBscifir::aid\fP &new_aid, const string &new_country, const vector< string > &new_regions, const string &new_zone)"
.br
.ti -1c
.RI "\fBzid\fP (const \fBscifir::aid\fP &new_aid, const string &init_zid)"
.br
.ti -1c
.RI "\fBzid\fP (const string &init_zid_full)"
.br
.ti -1c
.RI "\fBzid\fP & \fBoperator=\fP (const \fBzid\fP &x)"
.br
.ti -1c
.RI "\fBzid\fP & \fBoperator=\fP (\fBzid\fP &&x)"
.br
.ti -1c
.RI "\fBzid\fP & \fBoperator=\fP (const string &init_zid_full)"
.br
.ti -1c
.RI "bool \fBhas_no_country\fP () const"
.br
.ti -1c
.RI "bool \fBhas_unknown_country\fP () const"
.br
.ti -1c
.RI "string \fBdisplay\fP () const"
.br
.ti -1c
.RI "string \fBpartial_display\fP () const"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBscifir::aid\fP \fBaid\fP"
.br
.ti -1c
.RI "vector< string > \fBregions\fP"
.br
.ti -1c
.RI "string \fBcountry\fP"
.br
.ti -1c
.RI "string \fBzone\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBinitialize_from_string\fP (const string &init_zid_full)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 13 of file zid\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "scifir::zid::zid ()"

.PP
Definition at line 12 of file zid\&.cpp\&.
.PP
.nf
12              : aid(),regions(),country(),zone()
13     {}
.fi
.SS "scifir::zid::zid (const \fBzid\fP & x)"

.PP
Definition at line 15 of file zid\&.cpp\&.
.PP
.nf
15                          : aid(x\&.aid),regions(x\&.regions),country(x\&.country),zone(x\&.zone)
16     {}
.fi
.SS "scifir::zid::zid (\fBzid\fP && x)"

.PP
Definition at line 18 of file zid\&.cpp\&.
.PP
.nf
18                     : aid(std::move(x\&.aid)),regions(std::move(x\&.regions)),country(std::move(x\&.country)),zone(std::move(x\&.zone))
19     {}
.fi
.SS "scifir::zid::zid (const \fBscifir::aid\fP & new_aid, const string & new_country, const vector< string > & new_regions, const string & new_zone)\fC [explicit]\fP"

.PP
Definition at line 21 of file zid\&.cpp\&.
.PP
.nf
21                                                                                                                         : aid(new_aid),country(new_country),regions(new_regions),zone(new_zone)
22     {}
.fi
.SS "scifir::zid::zid (const \fBscifir::aid\fP & new_aid, const string & init_zid)\fC [explicit]\fP"

.PP
Definition at line 24 of file zid\&.cpp\&.
.PP
.nf
24                                                             : aid(new_aid),regions(),country(),zone()
25     {
26         if (init_zid != "")
27         {
28             vector<string> values;
29             boost::split(values,init_zid,boost::is_any_of(":"));
30             country = values[0];
31             if (values\&.size() > 2)
32             {
33                 int total_for_values = int(values\&.size()) - 1;
34                 for (int i = 1; i < total_for_values; i++)
35                 {
36                     regions\&.push_back(values[i]);
37                 }
38             }
39             if (values\&.size() >= 2)
40             {
41                 zone = values\&.back();
42             }
43         }
44     }
.fi
.SS "scifir::zid::zid (const string & init_zid_full)\fC [explicit]\fP"

.PP
Definition at line 46 of file zid\&.cpp\&.
.PP
.nf
46                                         : zid()
47     {
48         initialize_from_string(init_zid_full);
49     }
.fi
.SH "Member Function Documentation"
.PP 
.SS "string scifir::zid::display () const"

.PP
Definition at line 85 of file zid\&.cpp\&.
.PP
.nf
86     {
87         if (country != "")
88         {
89             ostringstream out;
90             out << to_string(aid) << " " << country << ":";
91             for (const string& x_region : regions)
92             {
93                 out << x_region << ":";
94             }
95             out << zone;
96             return out\&.str();
97         }
98         else
99         {
100             return "";
101         }
102     }
.fi
.SS "bool scifir::zid::has_no_country () const"

.PP
Definition at line 75 of file zid\&.cpp\&.
.PP
.nf
76     {
77         return (country == "no-country");
78     }
.fi
.SS "bool scifir::zid::has_unknown_country () const"

.PP
Definition at line 80 of file zid\&.cpp\&.
.PP
.nf
81     {
82         return (country == "unknown-country");
83     }
.fi
.SS "void scifir::zid::initialize_from_string (const string & init_zid_full)\fC [private]\fP"

.PP
Definition at line 123 of file zid\&.cpp\&.
.PP
.nf
124     {
125         if (init_zid_full != "")
126         {
127             int number_whitespaces = std::count(init_zid_full\&.begin(),init_zid_full\&.end(),' ');
128             std::size_t last_whitespace = init_zid_full\&.find_last_of(' ');
129             if (number_whitespaces == 2 or number_whitespaces == 1)
130             {
131                 string init_aid = init_zid_full\&.substr(0,last_whitespace);
132                 string init_zid = init_zid_full\&.substr(last_whitespace + 1);
133                 aid = scifir::aid(init_aid);
134                 vector<string> values;
135                 boost::split(values,init_zid,boost::is_any_of(":"));
136                 country = values[0];
137                 if (values\&.size() > 2)
138                 {
139                     int total_for_values = int(values\&.size()) - 1;
140                     for (int i = 1; i < total_for_values; i++)
141                     {
142                         regions\&.push_back(values[i]);
143                     }
144                 }
145                 if (values\&.size() >= 2)
146                 {
147                     zone = values\&.back();
148                 }
149             }
150             else if (number_whitespaces == 0)
151             {
152                 vector<string> values;
153                 boost::split(values,init_zid_full,boost::is_any_of(":"));
154                 country = values[0];
155                 if (values\&.size() > 2)
156                 {
157                     int total_for_values = int(values\&.size()) - 1;
158                     for (int i = 1; i < total_for_values; i++)
159                     {
160                         regions\&.push_back(values[i]);
161                     }
162                 }
163                 if (values\&.size() >= 2)
164                 {
165                     zone = values\&.back();
166                 }
167             }
168         }
169     }
.fi
.SS "\fBzid\fP & scifir::zid::operator= (const string & init_zid_full)"

.PP
Definition at line 69 of file zid\&.cpp\&.
.PP
.nf
70     {
71         initialize_from_string(init_zid_full);
72         return *this;
73     }
.fi
.SS "\fBzid\fP & scifir::zid::operator= (const \fBzid\fP & x)"

.PP
Definition at line 51 of file zid\&.cpp\&.
.PP
.nf
52     {
53         aid = x\&.aid;
54         regions = x\&.regions;
55         country = x\&.country;
56         zone = x\&.zone;
57         return *this;
58     }
.fi
.SS "\fBzid\fP & scifir::zid::operator= (\fBzid\fP && x)"

.PP
Definition at line 60 of file zid\&.cpp\&.
.PP
.nf
61     {
62         aid = std::move(x\&.aid);
63         regions = std::move(x\&.regions);
64         country = std::move(x\&.country);
65         zone = std::move(x\&.zone);
66         return *this;
67     }
.fi
.SS "string scifir::zid::partial_display () const"

.PP
Definition at line 104 of file zid\&.cpp\&.
.PP
.nf
105     {
106         if (country != "")
107         {
108             ostringstream out;
109             out << country << ":";
110             for (const string& x_region : regions)
111             {
112                 out << x_region << ":";
113             }
114             out << zone;
115             return out\&.str();
116         }
117         else
118         {
119             return "";
120         }
121     }
.fi
.SH "Member Data Documentation"
.PP 
.SS "\fBscifir::aid\fP scifir::zid::aid"

.PP
Definition at line 33 of file zid\&.hpp\&.
.SS "string scifir::zid::country"

.PP
Definition at line 35 of file zid\&.hpp\&.
.SS "vector<string> scifir::zid::regions"

.PP
Definition at line 34 of file zid\&.hpp\&.
.SS "string scifir::zid::zone"

.PP
Definition at line 36 of file zid\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for scifir-units from the source code\&.
