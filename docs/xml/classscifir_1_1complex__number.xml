<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classscifir_1_1complex__number" kind="class" language="C++" prot="public">
    <compoundname>scifir::complex_number</compoundname>
    <includes refid="complex__number_8hpp" local="no">complex_number.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1complex__number_1aa6b5eed50f89c30ce2a228453739012b" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::complex_number&lt; T &gt;::real</definition>
        <argsstring></argsstring>
        <name>real</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="169" column="3" bodyfile="meca_number/complex_number.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1complex__number_1a071915bbab93da99f83b500ed89f2c0f" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::complex_number&lt; T &gt;::imaginary</definition>
        <argsstring></argsstring>
        <name>imaginary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="170" column="3" bodyfile="meca_number/complex_number.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1complex__number_1ae824ee086a067ead2305da9fc068b394" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::complex_number&lt; T &gt;::complex_number</definition>
        <argsstring>()</argsstring>
        <name>complex_number</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="22" column="1" bodyfile="meca_number/complex_number.hpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a8429239a112a685c37f4a54676c1c098" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::complex_number&lt; T &gt;::complex_number</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x)</argsstring>
        <name>complex_number</name>
        <param>
          <type>const <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="25" column="1" bodyfile="meca_number/complex_number.hpp" bodystart="25" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1abb6fa22a6b84469b6aa9d4732e4c00e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::complex_number&lt; T &gt;::complex_number</definition>
        <argsstring>(complex_number&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>complex_number</name>
        <param>
          <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="28" column="1" bodyfile="meca_number/complex_number.hpp" bodystart="28" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1ae9cb3fd997818a0ea7c2e9530c88a42d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::complex_number&lt; T &gt;::complex_number</definition>
        <argsstring>(const T &amp;x, const T &amp;y)</argsstring>
        <name>complex_number</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="31" column="10" bodyfile="meca_number/complex_number.hpp" bodystart="31" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a3bba9cc38e2792461012d37a5a68819c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::complex_number&lt; T &gt;::complex_number</definition>
        <argsstring>(const string &amp;x, const string &amp;y)</argsstring>
        <name>complex_number</name>
        <param>
          <type>const string &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="34" column="10" bodyfile="meca_number/complex_number.hpp" bodystart="34" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a284e7ecbf88e3d89ecfa877b6d46ef32" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::complex_number&lt; T &gt;::complex_number</definition>
        <argsstring>(const string &amp;init_complex_number)</argsstring>
        <name>complex_number</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_complex_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="37" column="10" bodyfile="meca_number/complex_number.hpp" bodystart="37" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1ad59db03744a3b56942cce6007f28e36b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
        <definition>complex_number&lt;T&gt;&amp; scifir::complex_number&lt; T &gt;::operator=</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="70" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1aad834a0f8c51b5e6e567c2c331c82f21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
        <definition>complex_number&lt;T&gt;&amp; scifir::complex_number&lt; T &gt;::operator=</definition>
        <argsstring>(complex_number&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="77" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a7738ba7c32d8edda83c4a0c941ca22fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt;</type>
        <definition>complex_number&lt;T&gt; scifir::complex_number&lt; T &gt;::operator+</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="84" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a2367019c3da6fafbbd53692fffdad83f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt;</type>
        <definition>complex_number&lt;T&gt; scifir::complex_number&lt; T &gt;::operator-</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="89" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a6dc16074feb0bbfecabdb9404be3a5a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &gt;</type>
        <definition>complex_number&lt;scalar_unit&gt; scifir::complex_number&lt; T &gt;::operator*</definition>
        <argsstring>(const complex_number&lt; U &gt; &amp;x) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; U &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="95" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a4a00270de236ea4dcf7fded55c8887be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &gt;</type>
        <definition>complex_number&lt;scalar_unit&gt; scifir::complex_number&lt; T &gt;::operator/</definition>
        <argsstring>(const complex_number&lt; U &gt; &amp;x) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; U &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="101" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1ade75b91648d6c8cbb58a0232440175eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::complex_number&lt; T &gt;::operator+=</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="108" column="6" bodyfile="meca_number/complex_number.hpp" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a9986323ec1c9b1825d5f645c2a2c020d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::complex_number&lt; T &gt;::operator-=</definition>
        <argsstring>(const complex_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="114" column="6" bodyfile="meca_number/complex_number.hpp" bodystart="114" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1adaad41cf8cdb49ca5ae36ce8f83f1cbf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; T &gt;</type>
        <definition>complex_number&lt;T&gt; scifir::complex_number&lt; T &gt;::get_conjugate</definition>
        <argsstring>() const</argsstring>
        <name>get_conjugate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="120" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1aa857513de09aa842fb9209cc61b404bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T scifir::complex_number&lt; T &gt;::get_r</definition>
        <argsstring>() const</argsstring>
        <name>get_r</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="125" column="3" bodyfile="meca_number/complex_number.hpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a93c2ae019df1d2ddad89b6a82249958b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::complex_number&lt; T &gt;::get_argument</definition>
        <argsstring>() const</argsstring>
        <name>get_argument</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="130" column="7" bodyfile="meca_number/complex_number.hpp" bodystart="130" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a463d390af3475778d0b5fc57e80b8daf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1complex__number" kindref="compound">complex_number</ref>&lt; <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &gt;</type>
        <definition>complex_number&lt;scalar_unit&gt; scifir::complex_number&lt; T &gt;::get_reciprocal</definition>
        <argsstring>() const</argsstring>
        <name>get_reciprocal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="146" column="16" bodyfile="meca_number/complex_number.hpp" bodystart="146" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1complex__number_1a4f37a685b85713c4ae36d05dd1bb5340" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string scifir::complex_number&lt; T &gt;::display</definition>
        <argsstring>(int number_of_decimals=2) const</argsstring>
        <name>display</name>
        <param>
          <type>int</type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/complex_number.hpp" line="153" column="8" bodyfile="meca_number/complex_number.hpp" bodystart="153" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="meca_number/complex_number.hpp" line="19" column="1" bodyfile="meca_number/complex_number.hpp" bodystart="20" bodyend="171"/>
    <listofallmembers>
      <member refid="classscifir_1_1complex__number_1ae824ee086a067ead2305da9fc068b394" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>complex_number</name></member>
      <member refid="classscifir_1_1complex__number_1a8429239a112a685c37f4a54676c1c098" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>complex_number</name></member>
      <member refid="classscifir_1_1complex__number_1abb6fa22a6b84469b6aa9d4732e4c00e6" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>complex_number</name></member>
      <member refid="classscifir_1_1complex__number_1ae9cb3fd997818a0ea7c2e9530c88a42d" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>complex_number</name></member>
      <member refid="classscifir_1_1complex__number_1a3bba9cc38e2792461012d37a5a68819c" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>complex_number</name></member>
      <member refid="classscifir_1_1complex__number_1a284e7ecbf88e3d89ecfa877b6d46ef32" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>complex_number</name></member>
      <member refid="classscifir_1_1complex__number_1a4f37a685b85713c4ae36d05dd1bb5340" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>display</name></member>
      <member refid="classscifir_1_1complex__number_1a93c2ae019df1d2ddad89b6a82249958b" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>get_argument</name></member>
      <member refid="classscifir_1_1complex__number_1adaad41cf8cdb49ca5ae36ce8f83f1cbf" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>get_conjugate</name></member>
      <member refid="classscifir_1_1complex__number_1aa857513de09aa842fb9209cc61b404bf" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>get_r</name></member>
      <member refid="classscifir_1_1complex__number_1a463d390af3475778d0b5fc57e80b8daf" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>get_reciprocal</name></member>
      <member refid="classscifir_1_1complex__number_1a071915bbab93da99f83b500ed89f2c0f" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>imaginary</name></member>
      <member refid="classscifir_1_1complex__number_1a6dc16074feb0bbfecabdb9404be3a5a6" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator*</name></member>
      <member refid="classscifir_1_1complex__number_1a7738ba7c32d8edda83c4a0c941ca22fa" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator+</name></member>
      <member refid="classscifir_1_1complex__number_1ade75b91648d6c8cbb58a0232440175eb" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1complex__number_1a2367019c3da6fafbbd53692fffdad83f" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator-</name></member>
      <member refid="classscifir_1_1complex__number_1a9986323ec1c9b1825d5f645c2a2c020d" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1complex__number_1a4a00270de236ea4dcf7fded55c8887be" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator/</name></member>
      <member refid="classscifir_1_1complex__number_1ad59db03744a3b56942cce6007f28e36b" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator=</name></member>
      <member refid="classscifir_1_1complex__number_1aad834a0f8c51b5e6e567c2c331c82f21" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>operator=</name></member>
      <member refid="classscifir_1_1complex__number_1aa6b5eed50f89c30ce2a228453739012b" prot="public" virt="non-virtual"><scope>scifir::complex_number</scope><name>real</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
