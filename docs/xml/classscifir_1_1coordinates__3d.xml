<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1coordinates__3d" kind="class" language="C++" prot="public">
    <compoundname>scifir::coordinates_3d</compoundname>
    <templateparamlist>
      <param>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
        <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">length</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1coordinates__3d_1a241a2364bcc034c3caa09fff95584a2b" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::coordinates_3d&lt; T &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>scifir::coordinates_3d::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="266" column="3" bodyfile="coordinates/coordinates_3d.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1coordinates__3d_1a87b7c2a83a9f7ba5733e4a76127e201b" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::coordinates_3d&lt; T &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>scifir::coordinates_3d::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="267" column="3" bodyfile="coordinates/coordinates_3d.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1coordinates__3d_1a410c7cfcf3dc47e5594373ff23518af8" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::coordinates_3d&lt; T &gt;::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <qualifiedname>scifir::coordinates_3d::z</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="268" column="3" bodyfile="coordinates/coordinates_3d.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a132e624074a54707a6b98bec13d2af16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::coordinates_3d&lt; T &gt;::coordinates_3d</definition>
        <argsstring>()</argsstring>
        <name>coordinates_3d</name>
        <qualifiedname>scifir::coordinates_3d::coordinates_3d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="21" column="1" bodyfile="coordinates/coordinates_3d.hpp" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a2104f7d87d637191c72d9b0fab607092" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::coordinates_3d&lt; T &gt;::coordinates_3d</definition>
        <argsstring>(const coordinates_3d&lt; T &gt; &amp;x_coordinates)</argsstring>
        <name>coordinates_3d</name>
        <qualifiedname>scifir::coordinates_3d::coordinates_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__3d" kindref="compound">coordinates_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x_coordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="24" column="1" bodyfile="coordinates/coordinates_3d.hpp" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a0f95a820628e019f28b5d43fb9306779" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::coordinates_3d&lt; T &gt;::coordinates_3d</definition>
        <argsstring>(coordinates_3d&lt; T &gt; &amp;&amp;x_coordinates)</argsstring>
        <name>coordinates_3d</name>
        <qualifiedname>scifir::coordinates_3d::coordinates_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__3d" kindref="compound">coordinates_3d</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x_coordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="27" column="1" bodyfile="coordinates/coordinates_3d.hpp" bodystart="27" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1ad9c12c8e0f9a5f60a13a805298ccedb0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::coordinates_3d&lt; T &gt;::coordinates_3d</definition>
        <argsstring>(const T &amp;new_x, const T &amp;new_y, const T &amp;new_z)</argsstring>
        <name>coordinates_3d</name>
        <qualifiedname>scifir::coordinates_3d::coordinates_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="30" column="10" bodyfile="coordinates/coordinates_3d.hpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1af30594a9d2f31c2c5bba1fcb1694c4fd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::coordinates_3d&lt; T &gt;::coordinates_3d</definition>
        <argsstring>(const T &amp;new_p, const angle &amp;new_theta, T new_z)</argsstring>
        <name>coordinates_3d</name>
        <qualifiedname>scifir::coordinates_3d::coordinates_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type>T</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="33" column="10" bodyfile="coordinates/coordinates_3d.hpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1adf20aee1f9e3af4230b3a5185b7d6212" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::coordinates_3d&lt; T &gt;::coordinates_3d</definition>
        <argsstring>(const T &amp;new_r, const angle &amp;new_theta, const angle &amp;new_phi)</argsstring>
        <name>coordinates_3d</name>
        <qualifiedname>scifir::coordinates_3d::coordinates_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="38" column="10" bodyfile="coordinates/coordinates_3d.hpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1ad0b17a4c7a899473062bae4100029546" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::coordinates_3d&lt; T &gt;::coordinates_3d</definition>
        <argsstring>(const angle &amp;new_latitude, const angle &amp;new_longitude, const T &amp;new_altitude)</argsstring>
        <name>coordinates_3d</name>
        <qualifiedname>scifir::coordinates_3d::coordinates_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_latitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_longitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_altitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="43" column="10" bodyfile="coordinates/coordinates_3d.hpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a76092ddb08886dc48584f97833b3bd47" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::coordinates_3d&lt; T &gt;::coordinates_3d</definition>
        <argsstring>(const point_3d&lt; T &gt; &amp;x_point)</argsstring>
        <name>coordinates_3d</name>
        <qualifiedname>scifir::coordinates_3d::coordinates_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1point__3d" kindref="compound">point_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="48" column="10" bodyfile="coordinates/coordinates_3d.hpp" bodystart="48" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1ae08a3507a6c31c1affe64f0680bcc27b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::coordinates_3d&lt; T &gt;::coordinates_3d</definition>
        <argsstring>(string init_coordinates_3d)</argsstring>
        <name>coordinates_3d</name>
        <qualifiedname>scifir::coordinates_3d::coordinates_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
          <declname>init_coordinates_3d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="51" column="10" bodyfile="coordinates/coordinates_3d.hpp" bodystart="51" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a75a96a2c8207f85bdb1dbb2f0a921cba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__3d" kindref="compound">coordinates_3d</ref>&lt; T &gt; &amp;</type>
        <definition>coordinates_3d&lt; T &gt; &amp; scifir::coordinates_3d&lt; T &gt;::operator=</definition>
        <argsstring>(const coordinates_3d&lt; T &gt; &amp;x_coordinates)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::coordinates_3d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__3d" kindref="compound">coordinates_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x_coordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="99" column="16" bodyfile="coordinates/coordinates_3d.hpp" bodystart="99" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a3f1de0b8e6b4e13e17f9402d8f92841e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__3d" kindref="compound">coordinates_3d</ref>&lt; T &gt; &amp;</type>
        <definition>coordinates_3d&lt; T &gt; &amp; scifir::coordinates_3d&lt; T &gt;::operator=</definition>
        <argsstring>(coordinates_3d&lt; T &gt; &amp;&amp;x_coordinates)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::coordinates_3d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__3d" kindref="compound">coordinates_3d</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x_coordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="107" column="16" bodyfile="coordinates/coordinates_3d.hpp" bodystart="107" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a31b6e2f3c371f64af063b150bf064e31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__3d" kindref="compound">coordinates_3d</ref>&lt; T &gt; &amp;</type>
        <definition>coordinates_3d&lt; T &gt; &amp; scifir::coordinates_3d&lt; T &gt;::operator=</definition>
        <argsstring>(const point_3d&lt; T &gt; &amp;x_point)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::coordinates_3d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1point__3d" kindref="compound">point_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="115" column="16" bodyfile="coordinates/coordinates_3d.hpp" bodystart="115" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1aba7cadca5f9d65c61f545ff39c56d96d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T scifir::coordinates_3d&lt; T &gt;::get_p</definition>
        <argsstring>() const</argsstring>
        <name>get_p</name>
        <qualifiedname>scifir::coordinates_3d::get_p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="123" column="3" bodyfile="coordinates/coordinates_3d.hpp" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a4a4bdd32eb57ce9170fe73bd97efe294" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::coordinates_3d&lt; T &gt;::get_theta</definition>
        <argsstring>() const</argsstring>
        <name>get_theta</name>
        <qualifiedname>scifir::coordinates_3d::get_theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="128" column="7" bodyfile="coordinates/coordinates_3d.hpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a7f71bae5a890deacb51bbf50f1096ded" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T scifir::coordinates_3d&lt; T &gt;::get_r</definition>
        <argsstring>() const</argsstring>
        <name>get_r</name>
        <qualifiedname>scifir::coordinates_3d::get_r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="133" column="3" bodyfile="coordinates/coordinates_3d.hpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1af505d14b0c4b0e58183bbb5068f2ba99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::coordinates_3d&lt; T &gt;::get_phi</definition>
        <argsstring>() const</argsstring>
        <name>get_phi</name>
        <qualifiedname>scifir::coordinates_3d::get_phi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="138" column="7" bodyfile="coordinates/coordinates_3d.hpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a519426dc94b18e5796a53140f7701448" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::coordinates_3d&lt; T &gt;::get_latitude</definition>
        <argsstring>() const</argsstring>
        <name>get_latitude</name>
        <qualifiedname>scifir::coordinates_3d::get_latitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="143" column="7" bodyfile="coordinates/coordinates_3d.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a1278c227af1174aa68eb6b7f55970ad0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::coordinates_3d&lt; T &gt;::get_longitude</definition>
        <argsstring>() const</argsstring>
        <name>get_longitude</name>
        <qualifiedname>scifir::coordinates_3d::get_longitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="148" column="7" bodyfile="coordinates/coordinates_3d.hpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1ab6cf74db709b672d5cd5309aa040dd49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T scifir::coordinates_3d&lt; T &gt;::get_altitude</definition>
        <argsstring>() const</argsstring>
        <name>get_altitude</name>
        <qualifiedname>scifir::coordinates_3d::get_altitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="153" column="3" bodyfile="coordinates/coordinates_3d.hpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1aac8686b504e68601aa7494f516e99d2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::coordinates_3d&lt; T &gt;::set_position</definition>
        <argsstring>(const T &amp;new_x, const T &amp;new_y, const T &amp;new_z)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::coordinates_3d::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="158" column="6" bodyfile="coordinates/coordinates_3d.hpp" bodystart="158" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a5020eed82f64659002b888ed13d1d108" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::coordinates_3d&lt; T &gt;::set_position</definition>
        <argsstring>(const T &amp;new_p, const angle &amp;new_theta, T new_z)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::coordinates_3d::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type>T</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="165" column="6" bodyfile="coordinates/coordinates_3d.hpp" bodystart="165" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a542dd29c266bb0b9f6119e17b316412a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::coordinates_3d&lt; T &gt;::set_position</definition>
        <argsstring>(const T &amp;new_r, const angle &amp;new_theta, const angle &amp;new_phi)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::coordinates_3d::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="173" column="6" bodyfile="coordinates/coordinates_3d.hpp" bodystart="173" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1adf363dfacbb7a3074929bc7fc02a40ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::coordinates_3d&lt; T &gt;::set_position</definition>
        <argsstring>(const angle &amp;new_latitude, const angle &amp;new_longitude, const T &amp;new_altitude)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::coordinates_3d::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_latitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_longitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_altitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="180" column="6" bodyfile="coordinates/coordinates_3d.hpp" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a8d4ba606499911f700da4bd723e9b5ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::coordinates_3d&lt; T &gt;::rotate_in_x</definition>
        <argsstring>(const angle &amp;x_angle)</argsstring>
        <name>rotate_in_x</name>
        <qualifiedname>scifir::coordinates_3d::rotate_in_x</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>x_angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="187" column="6" bodyfile="coordinates/coordinates_3d.hpp" bodystart="187" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a1b46c0fd55ec4adfb675c5b77f40ba44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::coordinates_3d&lt; T &gt;::rotate_in_y</definition>
        <argsstring>(const angle &amp;x_angle)</argsstring>
        <name>rotate_in_y</name>
        <qualifiedname>scifir::coordinates_3d::rotate_in_y</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>x_angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="195" column="6" bodyfile="coordinates/coordinates_3d.hpp" bodystart="195" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a61e9d44103d9f1e856cb6218e7f4dcc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::coordinates_3d&lt; T &gt;::rotate_in_z</definition>
        <argsstring>(const angle &amp;x_angle)</argsstring>
        <name>rotate_in_z</name>
        <qualifiedname>scifir::coordinates_3d::rotate_in_z</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>x_angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="203" column="6" bodyfile="coordinates/coordinates_3d.hpp" bodystart="203" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a486187394268168f31b503a757273d3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::coordinates_3d&lt; T &gt;::move</definition>
        <argsstring>(const displacement_3d &amp;x_displacement)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::coordinates_3d::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">displacement_3d</ref> &amp;</type>
          <declname>x_displacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="211" column="6" bodyfile="coordinates/coordinates_3d.hpp" bodystart="211" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a273225016df85106aa4a672b613342de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::coordinates_3d&lt; T &gt;::move</definition>
        <argsstring>(const T &amp;new_x, const T &amp;new_y, const T &amp;new_z)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::coordinates_3d::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="218" column="6" bodyfile="coordinates/coordinates_3d.hpp" bodystart="218" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1aa48a3646ff90d2a819cacb1262483e48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::coordinates_3d&lt; T &gt;::move</definition>
        <argsstring>(const T &amp;new_p, const angle &amp;new_theta, T new_z)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::coordinates_3d::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type>T</type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="225" column="6" bodyfile="coordinates/coordinates_3d.hpp" bodystart="225" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1ace36055527a3e63140c493db4a102173" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::coordinates_3d&lt; T &gt;::move</definition>
        <argsstring>(const T &amp;new_r, const angle &amp;new_theta, const angle &amp;new_phi)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::coordinates_3d::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="233" column="6" bodyfile="coordinates/coordinates_3d.hpp" bodystart="233" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a999e85bef595d969cb546d23f2f08b7f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T scifir::coordinates_3d&lt; T &gt;::distance_to_origin</definition>
        <argsstring>() const</argsstring>
        <name>distance_to_origin</name>
        <qualifiedname>scifir::coordinates_3d::distance_to_origin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="240" column="3" bodyfile="coordinates/coordinates_3d.hpp" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a3d382e6b966debeeb38679bc7e24e6f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::coordinates_3d&lt; T &gt;::display_cylindrical</definition>
        <argsstring>() const</argsstring>
        <name>display_cylindrical</name>
        <qualifiedname>scifir::coordinates_3d::display_cylindrical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="245" column="8" bodyfile="coordinates/coordinates_3d.hpp" bodystart="245" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1a46e5222aafa36ee1530624cd2a24685b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::coordinates_3d&lt; T &gt;::display_spherical</definition>
        <argsstring>() const</argsstring>
        <name>display_spherical</name>
        <qualifiedname>scifir::coordinates_3d::display_spherical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="252" column="8" bodyfile="coordinates/coordinates_3d.hpp" bodystart="252" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1coordinates__3d_1aefe733415bb4e4080a717bcdfe702be6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::coordinates_3d&lt; T &gt;::display_geographical</definition>
        <argsstring>() const</argsstring>
        <name>display_geographical</name>
        <qualifiedname>scifir::coordinates_3d::display_geographical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="coordinates/coordinates_3d.hpp" line="259" column="8" bodyfile="coordinates/coordinates_3d.hpp" bodystart="259" bodyend="264"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="coordinates/coordinates_3d.hpp" line="18" column="1" bodyfile="coordinates/coordinates_3d.hpp" bodystart="19" bodyend="269"/>
    <listofallmembers>
      <member refid="classscifir_1_1coordinates__3d_1a132e624074a54707a6b98bec13d2af16" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>coordinates_3d</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a2104f7d87d637191c72d9b0fab607092" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>coordinates_3d</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a0f95a820628e019f28b5d43fb9306779" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>coordinates_3d</name></member>
      <member refid="classscifir_1_1coordinates__3d_1ad9c12c8e0f9a5f60a13a805298ccedb0" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>coordinates_3d</name></member>
      <member refid="classscifir_1_1coordinates__3d_1af30594a9d2f31c2c5bba1fcb1694c4fd" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>coordinates_3d</name></member>
      <member refid="classscifir_1_1coordinates__3d_1adf20aee1f9e3af4230b3a5185b7d6212" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>coordinates_3d</name></member>
      <member refid="classscifir_1_1coordinates__3d_1ad0b17a4c7a899473062bae4100029546" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>coordinates_3d</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a76092ddb08886dc48584f97833b3bd47" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>coordinates_3d</name></member>
      <member refid="classscifir_1_1coordinates__3d_1ae08a3507a6c31c1affe64f0680bcc27b" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>coordinates_3d</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a3d382e6b966debeeb38679bc7e24e6f2" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>display_cylindrical</name></member>
      <member refid="classscifir_1_1coordinates__3d_1aefe733415bb4e4080a717bcdfe702be6" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>display_geographical</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a46e5222aafa36ee1530624cd2a24685b" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>display_spherical</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a999e85bef595d969cb546d23f2f08b7f" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>distance_to_origin</name></member>
      <member refid="classscifir_1_1coordinates__3d_1ab6cf74db709b672d5cd5309aa040dd49" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>get_altitude</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a519426dc94b18e5796a53140f7701448" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>get_latitude</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a1278c227af1174aa68eb6b7f55970ad0" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>get_longitude</name></member>
      <member refid="classscifir_1_1coordinates__3d_1aba7cadca5f9d65c61f545ff39c56d96d" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>get_p</name></member>
      <member refid="classscifir_1_1coordinates__3d_1af505d14b0c4b0e58183bbb5068f2ba99" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>get_phi</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a7f71bae5a890deacb51bbf50f1096ded" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>get_r</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a4a4bdd32eb57ce9170fe73bd97efe294" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>get_theta</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a486187394268168f31b503a757273d3f" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>move</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a273225016df85106aa4a672b613342de" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>move</name></member>
      <member refid="classscifir_1_1coordinates__3d_1aa48a3646ff90d2a819cacb1262483e48" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>move</name></member>
      <member refid="classscifir_1_1coordinates__3d_1ace36055527a3e63140c493db4a102173" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>move</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a75a96a2c8207f85bdb1dbb2f0a921cba" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a3f1de0b8e6b4e13e17f9402d8f92841e" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a31b6e2f3c371f64af063b150bf064e31" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a8d4ba606499911f700da4bd723e9b5ba" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>rotate_in_x</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a1b46c0fd55ec4adfb675c5b77f40ba44" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>rotate_in_y</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a61e9d44103d9f1e856cb6218e7f4dcc0" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>rotate_in_z</name></member>
      <member refid="classscifir_1_1coordinates__3d_1aac8686b504e68601aa7494f516e99d2e" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>set_position</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a5020eed82f64659002b888ed13d1d108" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>set_position</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a542dd29c266bb0b9f6119e17b316412a" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>set_position</name></member>
      <member refid="classscifir_1_1coordinates__3d_1adf363dfacbb7a3074929bc7fc02a40ea" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>set_position</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a241a2364bcc034c3caa09fff95584a2b" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>x</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a87b7c2a83a9f7ba5733e4a76127e201b" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>y</name></member>
      <member refid="classscifir_1_1coordinates__3d_1a410c7cfcf3dc47e5594373ff23518af8" prot="public" virt="non-virtual"><scope>scifir::coordinates_3d</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
