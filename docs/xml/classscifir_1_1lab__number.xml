<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1lab__number" kind="class" language="C++" prot="public">
    <compoundname>scifir::lab_number</compoundname>
    <includes refid="lab__number_8hpp" local="no">lab_number.hpp</includes>
    <templateparamlist>
      <param>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::lab_number&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>scifir::lab_number::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="105" column="3" bodyfile="meca_number/lab_number.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::lab_number&lt; T &gt;::error_value</definition>
        <argsstring></argsstring>
        <name>error_value</name>
        <qualifiedname>scifir::lab_number::error_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="106" column="3" bodyfile="meca_number/lab_number.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1lab__number_1a7a9a83ef6d51f55e30477f1101b73037" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::lab_number&lt; T &gt;::lab_number</definition>
        <argsstring>()</argsstring>
        <name>lab_number</name>
        <qualifiedname>scifir::lab_number::lab_number</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="22" column="1" bodyfile="meca_number/lab_number.hpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a3253ee657dbe92a1d1ef86cc04a3db86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::lab_number&lt; T &gt;::lab_number</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>lab_number</name>
        <qualifiedname>scifir::lab_number::lab_number</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="25" column="1" bodyfile="meca_number/lab_number.hpp" bodystart="25" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1aa3c6996e9a044e34d835e41829ee6648" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::lab_number&lt; T &gt;::lab_number</definition>
        <argsstring>(lab_number&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>lab_number</name>
        <qualifiedname>scifir::lab_number::lab_number</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="28" column="1" bodyfile="meca_number/lab_number.hpp" bodystart="28" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a8684fac1201417ca1f6d09d27df967ee" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::lab_number&lt; T &gt;::lab_number</definition>
        <argsstring>(const T &amp;x, const T &amp;y)</argsstring>
        <name>lab_number</name>
        <qualifiedname>scifir::lab_number::lab_number</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="31" column="10" bodyfile="meca_number/lab_number.hpp" bodystart="31" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a28b2ad50f1b21c5025370a51a42af5c1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::lab_number&lt; T &gt;::lab_number</definition>
        <argsstring>(const string &amp;x, const string &amp;y)</argsstring>
        <name>lab_number</name>
        <qualifiedname>scifir::lab_number::lab_number</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="34" column="10" bodyfile="meca_number/lab_number.hpp" bodystart="34" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1aa8cfcfa3ae0d44c0bbe51ea80fa01798" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::lab_number&lt; T &gt;::lab_number</definition>
        <argsstring>(const string &amp;init_lab_number)</argsstring>
        <name>lab_number</name>
        <qualifiedname>scifir::lab_number::lab_number</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_lab_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="37" column="10" bodyfile="meca_number/lab_number.hpp" bodystart="37" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a4e3a41a878e76f15af9ade9222aa7e7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
        <definition>lab_number&lt; T &gt; &amp; scifir::lab_number&lt; T &gt;::operator=</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::lab_number::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="50" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a6aa1e6a3966a68901866f32905129721" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
        <definition>lab_number&lt; T &gt; &amp; scifir::lab_number&lt; T &gt;::operator=</definition>
        <argsstring>(lab_number&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::lab_number::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="57" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1ab37ace1c12a3e65c0bf99d80bbefd48a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt;</type>
        <definition>lab_number&lt; T &gt; scifir::lab_number&lt; T &gt;::operator+</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::lab_number::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="64" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1ade0ff6438633e1880834176ccf03395f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt;</type>
        <definition>lab_number&lt; T &gt; scifir::lab_number&lt; T &gt;::operator-</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::lab_number::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="69" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1ad9d090252280d25efa25f68804901f7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &gt;</type>
        <definition>lab_number&lt; scalar_unit &gt; scifir::lab_number&lt; T &gt;::operator*</definition>
        <argsstring>(const lab_number&lt; U &gt; &amp;x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::lab_number::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="75" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a6597e839f8dae6eb2a7dae750e28cbea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &gt;</type>
        <definition>lab_number&lt; scalar_unit &gt; scifir::lab_number&lt; T &gt;::operator/</definition>
        <argsstring>(const lab_number&lt; U &gt; &amp;x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::lab_number::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="81" column="12" bodyfile="meca_number/lab_number.hpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1aae4742986e4c70e2daa51893394676a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::lab_number&lt; T &gt;::operator+=</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::lab_number::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="86" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a141dc7aae4d797da45426dcf4d289f4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::lab_number&lt; T &gt;::operator-=</definition>
        <argsstring>(const lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::lab_number::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="92" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1lab__number_1a5cac4667258cf23700b45ea6f7f0e87a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::lab_number&lt; T &gt;::display</definition>
        <argsstring>(int number_of_decimals=2) const</argsstring>
        <name>display</name>
        <qualifiedname>scifir::lab_number::display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="98" column="8" bodyfile="meca_number/lab_number.hpp" bodystart="98" bodyend="103"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="meca_number/lab_number.hpp" line="19" column="1" bodyfile="meca_number/lab_number.hpp" bodystart="20" bodyend="107"/>
    <listofallmembers>
      <member refid="classscifir_1_1lab__number_1a5cac4667258cf23700b45ea6f7f0e87a" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>display</name></member>
      <member refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>error_value</name></member>
      <member refid="classscifir_1_1lab__number_1a7a9a83ef6d51f55e30477f1101b73037" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>lab_number</name></member>
      <member refid="classscifir_1_1lab__number_1a3253ee657dbe92a1d1ef86cc04a3db86" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>lab_number</name></member>
      <member refid="classscifir_1_1lab__number_1aa3c6996e9a044e34d835e41829ee6648" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>lab_number</name></member>
      <member refid="classscifir_1_1lab__number_1a8684fac1201417ca1f6d09d27df967ee" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>lab_number</name></member>
      <member refid="classscifir_1_1lab__number_1a28b2ad50f1b21c5025370a51a42af5c1" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>lab_number</name></member>
      <member refid="classscifir_1_1lab__number_1aa8cfcfa3ae0d44c0bbe51ea80fa01798" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>lab_number</name></member>
      <member refid="classscifir_1_1lab__number_1ad9d090252280d25efa25f68804901f7a" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator*</name></member>
      <member refid="classscifir_1_1lab__number_1ab37ace1c12a3e65c0bf99d80bbefd48a" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator+</name></member>
      <member refid="classscifir_1_1lab__number_1aae4742986e4c70e2daa51893394676a3" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1lab__number_1ade0ff6438633e1880834176ccf03395f" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator-</name></member>
      <member refid="classscifir_1_1lab__number_1a141dc7aae4d797da45426dcf4d289f4b" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1lab__number_1a6597e839f8dae6eb2a7dae750e28cbea" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator/</name></member>
      <member refid="classscifir_1_1lab__number_1a4e3a41a878e76f15af9ade9222aa7e7a" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator=</name></member>
      <member refid="classscifir_1_1lab__number_1a6aa1e6a3966a68901866f32905129721" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>operator=</name></member>
      <member refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" prot="public" virt="non-virtual"><scope>scifir::lab_number</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
