<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classscifir_1_1pH" kind="class" language="C++" prot="public">
    <compoundname>scifir::pH</compoundname>
    <includes refid="pH_8hpp" local="no">pH.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classscifir_1_1pH_1a63db97e87ac75044a4f181b6e32c59e5" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float scifir::pH::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="92" column="7" bodyfile="special_units/pH.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1pH_1a6c57298df0c721837fc60bc01bee6279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pH::pH</definition>
        <argsstring>()</argsstring>
        <name>pH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="22" column="1" bodyfile="special_units/pH.cpp" bodystart="17" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a98da091d91d595582c31945f4973614b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pH::pH</definition>
        <argsstring>(const pH &amp;x)</argsstring>
        <name>pH</name>
        <param>
          <type>const <ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="23" column="1" bodyfile="special_units/pH.cpp" bodystart="20" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1ad7fbd8162ddfcbb296e7506592c548f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pH::pH</definition>
        <argsstring>(pH &amp;&amp;x)</argsstring>
        <name>pH</name>
        <param>
          <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="24" column="1" bodyfile="special_units/pH.cpp" bodystart="23" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1ae8ec91e41746b538720fc13fbbdf7102" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pH::pH</definition>
        <argsstring>(float new_value)</argsstring>
        <name>pH</name>
        <param>
          <type>float</type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="25" column="10" bodyfile="special_units/pH.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a2c2638da675319ea47da776f3d62aab4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pH::pH</definition>
        <argsstring>(const string &amp;init_pH)</argsstring>
        <name>pH</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_pH</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="26" column="10" bodyfile="special_units/pH.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1afedc36f2f10edb7be6d12046738dfd18" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pH::pH</definition>
        <argsstring>(const scalar_unit &amp;x)</argsstring>
        <name>pH</name>
        <param>
          <type>const <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="27" column="10" bodyfile="special_units/pH.cpp" bodystart="37" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a2ee3383ce8b343906d8b40896eb8a7c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
        <definition>pH &amp; scifir::pH::operator=</definition>
        <argsstring>(const pH &amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="29" column="4" bodyfile="special_units/pH.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a0ae8a701e2ef6742b08ec783fe32114d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
        <definition>pH &amp; scifir::pH::operator=</definition>
        <argsstring>(pH &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="30" column="4" bodyfile="special_units/pH.cpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a81817cd0364fbc6b468f3d6d6e3089dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
        <definition>pH &amp; scifir::pH::operator=</definition>
        <argsstring>(float new_value)</argsstring>
        <name>operator=</name>
        <param>
          <type>float</type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="31" column="4" bodyfile="special_units/pH.cpp" bodystart="63" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a64ba286687f229b8b36bc80d967c912b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
        <definition>pH &amp; scifir::pH::operator=</definition>
        <argsstring>(const string &amp;init_pH)</argsstring>
        <name>operator=</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_pH</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="32" column="4" bodyfile="special_units/pH.cpp" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a89f60c16ed3bcfece5c3374507554bae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
        <definition>pH &amp; scifir::pH::operator=</definition>
        <argsstring>(const scalar_unit &amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="33" column="4" bodyfile="special_units/pH.cpp" bodystart="77" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a53b9d87387bba2528cd5747fd2514b04" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::pH::operator float</definition>
        <argsstring>() const</argsstring>
        <name>operator float</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="35" column="10" bodyfile="special_units/pH.hpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1aeb09c6bb743f7e904999ba0fe26884a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float&amp; scifir::pH::get_value</definition>
        <argsstring>() const</argsstring>
        <name>get_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="40" column="20" bodyfile="special_units/pH.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a9be0afb7892856fba00424309c257e7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref></type>
        <definition>pH scifir::pH::operator+</definition>
        <argsstring>(const pH &amp;x) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="45" column="4" bodyfile="special_units/pH.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a429e15759ad4d263ed0f8f0d2f18cbdc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref></type>
        <definition>pH scifir::pH::operator-</definition>
        <argsstring>(const pH &amp;x) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="46" column="4" bodyfile="special_units/pH.cpp" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a98cf166bd57411d5b022bf0e73a2c56c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::pH::operator+=</definition>
        <argsstring>(const pH &amp;x)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="47" column="6" bodyfile="special_units/pH.cpp" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a6fbc4903944772b621a85a67a5efc792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::pH::operator-=</definition>
        <argsstring>(const pH &amp;x)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="48" column="6" bodyfile="special_units/pH.cpp" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1ae3bd82bd4143478c91277d66da967536" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename enable_if&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::<ref refid="classscifir_1_1pH_1a63db97e87ac75044a4f181b6e32c59e5" kindref="member">value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref></type>
        <definition>pH scifir::pH::operator+</definition>
        <argsstring>(T x) const</argsstring>
        <name>operator+</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="51" column="4" bodyfile="special_units/pH.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a4094debb6810b43fb2f4ab873a832e2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename enable_if&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::<ref refid="classscifir_1_1pH_1a63db97e87ac75044a4f181b6e32c59e5" kindref="member">value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref></type>
        <definition>pH scifir::pH::operator-</definition>
        <argsstring>(T x) const</argsstring>
        <name>operator-</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="57" column="4" bodyfile="special_units/pH.hpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a904c978aa9e17bcf630ed841746cf959" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename enable_if&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::<ref refid="classscifir_1_1pH_1a63db97e87ac75044a4f181b6e32c59e5" kindref="member">value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void scifir::pH::operator+=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator+=</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="63" column="6" bodyfile="special_units/pH.hpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1aa0238e9ebbc8f6b8b257c4f243cf3d98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename enable_if&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::<ref refid="classscifir_1_1pH_1a63db97e87ac75044a4f181b6e32c59e5" kindref="member">value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void scifir::pH::operator-=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator-=</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="70" column="6" bodyfile="special_units/pH.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a8e5f5c985c77daccae119e58e09c0480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
        <definition>pH &amp; scifir::pH::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="76" column="4" bodyfile="special_units/pH.cpp" bodystart="114" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a303f11101e36ed504f8fa60fa2f2b57e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref></type>
        <definition>pH scifir::pH::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="77" column="4" bodyfile="special_units/pH.cpp" bodystart="120" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a00cd18812a6ceee80689753077b0c613" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref> &amp;</type>
        <definition>pH &amp; scifir::pH::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="78" column="4" bodyfile="special_units/pH.cpp" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a6639f6941edcf67463b358ee0d7adbd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pH" kindref="compound">pH</ref></type>
        <definition>pH scifir::pH::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="79" column="4" bodyfile="special_units/pH.cpp" bodystart="133" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a673ff40dd773e8afa4ce92f169cd8c59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>molarity</type>
        <definition>molarity scifir::pH::get_H</definition>
        <argsstring>() const</argsstring>
        <name>get_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="81" column="10" bodyfile="special_units/pH.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1abda4e9edb0c5abcdc5008f9bd916b325" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>molarity</type>
        <definition>molarity scifir::pH::get_OH</definition>
        <argsstring>() const</argsstring>
        <name>get_OH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="82" column="10" bodyfile="special_units/pH.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a45e403ca031215503b36f36a305f75c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pOH" kindref="compound">pOH</ref></type>
        <definition>pOH scifir::pH::get_pOH</definition>
        <argsstring>() const</argsstring>
        <name>get_pOH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="83" column="5" bodyfile="special_units/pH.cpp" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a6ad94fa16c6d465e001326af208ea941" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool scifir::pH::is_acidic</definition>
        <argsstring>() const</argsstring>
        <name>is_acidic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="85" column="6" bodyfile="special_units/pH.cpp" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1ac0f8a4483cce06cf42098cc89440c3c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool scifir::pH::is_basic</definition>
        <argsstring>() const</argsstring>
        <name>is_basic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="86" column="6" bodyfile="special_units/pH.cpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a4735637ac5dfac274b3a8064882a9947" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool scifir::pH::is_neutral</definition>
        <argsstring>() const</argsstring>
        <name>is_neutral</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="87" column="6" bodyfile="special_units/pH.cpp" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pH_1a2258df7b945d443a8faf741604943700" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string scifir::pH::display</definition>
        <argsstring>(int number_of_decimals=2) const</argsstring>
        <name>display</name>
        <param>
          <type>int</type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="89" column="8" bodyfile="special_units/pH.cpp" bodystart="171" bodyend="183"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classscifir_1_1pH_1a82a04cbd68d19c39b08c9920504ff36d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::pH::normalize_value</definition>
        <argsstring>()</argsstring>
        <name>normalize_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pH.hpp" line="94" column="6" bodyfile="special_units/pH.cpp" bodystart="185" bodyend="198"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="special_units/pH.hpp" line="19" column="1" bodyfile="special_units/pH.hpp" bodystart="20" bodyend="95"/>
    <listofallmembers>
      <member refid="classscifir_1_1pH_1a2258df7b945d443a8faf741604943700" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>display</name></member>
      <member refid="classscifir_1_1pH_1a673ff40dd773e8afa4ce92f169cd8c59" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>get_H</name></member>
      <member refid="classscifir_1_1pH_1abda4e9edb0c5abcdc5008f9bd916b325" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>get_OH</name></member>
      <member refid="classscifir_1_1pH_1a45e403ca031215503b36f36a305f75c4" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>get_pOH</name></member>
      <member refid="classscifir_1_1pH_1aeb09c6bb743f7e904999ba0fe26884a9" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>get_value</name></member>
      <member refid="classscifir_1_1pH_1a6ad94fa16c6d465e001326af208ea941" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>is_acidic</name></member>
      <member refid="classscifir_1_1pH_1ac0f8a4483cce06cf42098cc89440c3c3" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>is_basic</name></member>
      <member refid="classscifir_1_1pH_1a4735637ac5dfac274b3a8064882a9947" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>is_neutral</name></member>
      <member refid="classscifir_1_1pH_1a82a04cbd68d19c39b08c9920504ff36d" prot="private" virt="non-virtual"><scope>scifir::pH</scope><name>normalize_value</name></member>
      <member refid="classscifir_1_1pH_1a53b9d87387bba2528cd5747fd2514b04" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator float</name></member>
      <member refid="classscifir_1_1pH_1a9be0afb7892856fba00424309c257e7c" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator+</name></member>
      <member refid="classscifir_1_1pH_1ae3bd82bd4143478c91277d66da967536" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator+</name></member>
      <member refid="classscifir_1_1pH_1a8e5f5c985c77daccae119e58e09c0480" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator++</name></member>
      <member refid="classscifir_1_1pH_1a303f11101e36ed504f8fa60fa2f2b57e" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator++</name></member>
      <member refid="classscifir_1_1pH_1a98cf166bd57411d5b022bf0e73a2c56c" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1pH_1a904c978aa9e17bcf630ed841746cf959" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1pH_1a429e15759ad4d263ed0f8f0d2f18cbdc" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator-</name></member>
      <member refid="classscifir_1_1pH_1a4094debb6810b43fb2f4ab873a832e2e" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator-</name></member>
      <member refid="classscifir_1_1pH_1a00cd18812a6ceee80689753077b0c613" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator--</name></member>
      <member refid="classscifir_1_1pH_1a6639f6941edcf67463b358ee0d7adbd0" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator--</name></member>
      <member refid="classscifir_1_1pH_1a6fbc4903944772b621a85a67a5efc792" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1pH_1aa0238e9ebbc8f6b8b257c4f243cf3d98" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1pH_1a2ee3383ce8b343906d8b40896eb8a7c9" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pH_1a0ae8a701e2ef6742b08ec783fe32114d" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pH_1a81817cd0364fbc6b468f3d6d6e3089dd" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pH_1a64ba286687f229b8b36bc80d967c912b" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pH_1a89f60c16ed3bcfece5c3374507554bae" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pH_1a6c57298df0c721837fc60bc01bee6279" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>pH</name></member>
      <member refid="classscifir_1_1pH_1a98da091d91d595582c31945f4973614b" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>pH</name></member>
      <member refid="classscifir_1_1pH_1ad7fbd8162ddfcbb296e7506592c548f1" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>pH</name></member>
      <member refid="classscifir_1_1pH_1ae8ec91e41746b538720fc13fbbdf7102" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>pH</name></member>
      <member refid="classscifir_1_1pH_1a2c2638da675319ea47da776f3d62aab4" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>pH</name></member>
      <member refid="classscifir_1_1pH_1afedc36f2f10edb7be6d12046738dfd18" prot="public" virt="non-virtual"><scope>scifir::pH</scope><name>pH</name></member>
      <member refid="classscifir_1_1pH_1a63db97e87ac75044a4f181b6e32c59e5" prot="private" virt="non-virtual"><scope>scifir::pH</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
