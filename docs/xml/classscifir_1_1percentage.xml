<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1percentage" kind="class" language="C++" prot="public">
    <compoundname>scifir::percentage</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classscifir_1_1percentage_1a8a6359416b116e57affb296949c11b21" prot="private" static="no" mutable="no">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>scifir::percentage::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="138" column="7" bodyfile="special_units/percentage.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1percentage_1a18948f7da73b52f27daa92954c3234ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>()</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="20" column="1" bodyfile="special_units/percentage.cpp" bodystart="16" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a2c01f02d4b74d48fba8bd27bd4976ce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(const percentage &amp;x)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="21" column="1" bodyfile="special_units/percentage.cpp" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a1710685f83c6dfb22cf0027590d47090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(percentage &amp;&amp;x)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="22" column="1" bodyfile="special_units/percentage.cpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1aca3d6e3ba0960825b161cc8dddf91db9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(float new_value)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="23" column="10" bodyfile="special_units/percentage.cpp" bodystart="25" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1af1ca132169724c44756948e65c4eb7fa" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(double new_value)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="24" column="10" bodyfile="special_units/percentage.cpp" bodystart="28" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1aa1e8fca665495f8383a647d333954275" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(long double new_value)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="25" column="10" bodyfile="special_units/percentage.cpp" bodystart="31" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a8f83b25ea8c690d92bc8e25deef77bba" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(int new_value)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="26" column="10" bodyfile="special_units/percentage.cpp" bodystart="34" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a0e557b96be6e32d2d7adf39a03cf57cf" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(float new_value, const string &amp;init_dimensions)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="27" column="10" bodyfile="special_units/percentage.cpp" bodystart="37" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a37056f1da6c4ccafc426aa3b1676c6ea" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(double new_value, const string &amp;init_dimensions)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="28" column="10" bodyfile="special_units/percentage.cpp" bodystart="65" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a36876d08e5d4ff4b01bacaa2ece7c632" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(long double new_value, const string &amp;init_dimensions)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="29" column="10" bodyfile="special_units/percentage.cpp" bodystart="93" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1ae637c964c5674c6cc33c5e26e8bfa452" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(int new_value, const string &amp;init_dimensions)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="30" column="10" bodyfile="special_units/percentage.cpp" bodystart="121" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a3c5f810ae0131c660db073954a6722cd" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(const string &amp;init_percentage)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_percentage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="31" column="10" bodyfile="special_units/percentage.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a2a28cc4a3b5a788b37133fd25d5ee7da" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::percentage</definition>
        <argsstring>(const scalar_unit &amp;x)</argsstring>
        <name>percentage</name>
        <qualifiedname>scifir::percentage::percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="32" column="10" bodyfile="special_units/percentage.cpp" bodystart="154" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1ac3da7fdb1b7df99c912b8fef1a7ae572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(const percentage &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="34" column="12" bodyfile="special_units/percentage.cpp" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a5d784189257cbd105ec47dfaeb7c06c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(percentage &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="35" column="12" bodyfile="special_units/percentage.cpp" bodystart="173" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1af0535ce3870fb035058cfdccd1d6816c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(float new_value)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="36" column="12" bodyfile="special_units/percentage.cpp" bodystart="179" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a67043cb05dd2934f15eaa090cee61c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(double new_value)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="37" column="12" bodyfile="special_units/percentage.cpp" bodystart="185" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1abec5befaa64c16f466e9b542421fbef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(long double new_value)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="38" column="12" bodyfile="special_units/percentage.cpp" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a456f383883f9b9db1270009f66e5dc9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(int new_value)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="39" column="12" bodyfile="special_units/percentage.cpp" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1acad958cf807bfe6eda3868f6842f089d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(const string &amp;init_percentage)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_percentage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="40" column="12" bodyfile="special_units/percentage.cpp" bodystart="203" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1af429a976f5083bb40726479f4b8dff2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator=</definition>
        <argsstring>(const scalar_unit &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="41" column="12" bodyfile="special_units/percentage.cpp" bodystart="209" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a64ba3202f386c17dde5605465857ed75" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::percentage::operator float</definition>
        <argsstring>() const</argsstring>
        <name>operator float</name>
        <qualifiedname>scifir::percentage::operator float</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="43" column="10" bodyfile="special_units/percentage.hpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a3bff25faccd76a10dd9d24e0d9448e8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
        <definition>const float &amp; scifir::percentage::get_value</definition>
        <argsstring>() const</argsstring>
        <name>get_value</name>
        <qualifiedname>scifir::percentage::get_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="48" column="20" bodyfile="special_units/percentage.hpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a997703d062db4bd8372c8f42b38ab0db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator+</definition>
        <argsstring>(const percentage &amp;x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::percentage::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="53" column="12" bodyfile="special_units/percentage.cpp" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a0063f46fae523dde05a08ff773aa0759" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator-</definition>
        <argsstring>(const percentage &amp;x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::percentage::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="54" column="12" bodyfile="special_units/percentage.cpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1ae1299386921e23b131a480c60313075c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator*</definition>
        <argsstring>(const percentage &amp;x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::percentage::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="55" column="12" bodyfile="special_units/percentage.cpp" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a2e068414854cad2217c5629c1136ebe2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator/</definition>
        <argsstring>(const percentage &amp;x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::percentage::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="56" column="12" bodyfile="special_units/percentage.cpp" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a415833910907612760930697acb7cabf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator+=</definition>
        <argsstring>(const percentage &amp;x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::percentage::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="57" column="6" bodyfile="special_units/percentage.cpp" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1aed6d83ca9b41e280179470adbf729842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator-=</definition>
        <argsstring>(const percentage &amp;x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::percentage::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="58" column="6" bodyfile="special_units/percentage.cpp" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a154bffef5ed6e8cb63bcb39c9be4bcfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator*=</definition>
        <argsstring>(const percentage &amp;x)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::percentage::operator*=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="59" column="6" bodyfile="special_units/percentage.cpp" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a6c10cbe35b0236c4b549ac5bc4585212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator/=</definition>
        <argsstring>(const percentage &amp;x)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::percentage::operator/=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="60" column="6" bodyfile="special_units/percentage.cpp" bodystart="258" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1ae618bce66176de9d3fe1e957a0caeaa9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::percentage::operator=</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="63" column="6" bodyfile="special_units/percentage.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a8226163901e8cc0938e65275aa1bd866" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator+</definition>
        <argsstring>(T x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::percentage::operator+</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="69" column="12" bodyfile="special_units/percentage.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1aa2c7b90ae7a2c8e13455d58b629c9437" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator-</definition>
        <argsstring>(T x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::percentage::operator-</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="75" column="12" bodyfile="special_units/percentage.hpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a44bc5cb70594fa5c455ba2a1d95f8ff6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::operator*</definition>
        <argsstring>(T x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::percentage::operator*</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="81" column="7" bodyfile="special_units/percentage.hpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1acf02cbac75ad3b05102da26e4658b951" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::operator/</definition>
        <argsstring>(T x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::percentage::operator/</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="87" column="7" bodyfile="special_units/percentage.hpp" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a32ec16c589336fda397e779f421d863e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator+=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::percentage::operator+=</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="93" column="6" bodyfile="special_units/percentage.hpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a5899f233d6c7bb9d364bec5bab09bdb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator-=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::percentage::operator-=</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="99" column="6" bodyfile="special_units/percentage.hpp" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a050f53ae43b117fec94385ddcfcaafac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator*=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::percentage::operator*=</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="105" column="6" bodyfile="special_units/percentage.hpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a4f2549463e30f02b2ffc70a624ec7cfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::operator/=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::percentage::operator/=</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="111" column="6" bodyfile="special_units/percentage.hpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1addccf7ec453b14abc08f41c0c749b2c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <qualifiedname>scifir::percentage::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="116" column="12" bodyfile="special_units/percentage.cpp" bodystart="263" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a650475402efd37dfeaaafd4339eae577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <qualifiedname>scifir::percentage::operator++</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="117" column="12" bodyfile="special_units/percentage.cpp" bodystart="269" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1aecbfdd6b63d0dd993056347042063f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref> &amp;</type>
        <definition>percentage &amp; scifir::percentage::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <qualifiedname>scifir::percentage::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="118" column="12" bodyfile="special_units/percentage.cpp" bodystart="276" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a994b72fe7e2e4f8d620c1046dd55f693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1percentage" kindref="compound">percentage</ref></type>
        <definition>percentage scifir::percentage::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <qualifiedname>scifir::percentage::operator--</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="119" column="12" bodyfile="special_units/percentage.cpp" bodystart="282" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1ad02e3d967e0188ff8012f37c9403e1ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::percentage::operator*</definition>
        <argsstring>(const scalar_unit &amp;x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::percentage::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="121" column="13" bodyfile="special_units/percentage.cpp" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1aa3489f063b146327995e69721d8b9d6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::percentage::operator/</definition>
        <argsstring>(const scalar_unit &amp;x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::percentage::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="122" column="13" bodyfile="special_units/percentage.cpp" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1aff54f2d08cc05e3f5fd3aa5b374b3ed8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::get_factor</definition>
        <argsstring>() const</argsstring>
        <name>get_factor</name>
        <qualifiedname>scifir::percentage::get_factor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="124" column="7" bodyfile="special_units/percentage.cpp" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a295c00367e72dc3e70800da792086373" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::percentage::get_ppm</definition>
        <argsstring>() const</argsstring>
        <name>get_ppm</name>
        <qualifiedname>scifir::percentage::get_ppm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="126" column="7" bodyfile="special_units/percentage.cpp" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1adbea0c300e66fdf2d82721583de0f7a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::percentage::display_percentage</definition>
        <argsstring>(int number_of_decimals=2) const</argsstring>
        <name>display_percentage</name>
        <qualifiedname>scifir::percentage::display_percentage</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="131" column="8" bodyfile="special_units/percentage.cpp" bodystart="324" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1percentage_1a28516c470ce03a0c3a4c7c384480fc85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::percentage::display_ppm</definition>
        <argsstring>() const</argsstring>
        <name>display_ppm</name>
        <qualifiedname>scifir::percentage::display_ppm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="132" column="8" bodyfile="special_units/percentage.cpp" bodystart="331" bodyend="336"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classscifir_1_1percentage_1ae59bbcaab856dd15c9918e26aadecb43" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::percentage::initialize_from_string</definition>
        <argsstring>(const string &amp;init_percentage)</argsstring>
        <name>initialize_from_string</name>
        <qualifiedname>scifir::percentage::initialize_from_string</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_percentage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/percentage.hpp" line="140" column="6" bodyfile="special_units/percentage.cpp" bodystart="359" bodyend="417"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="special_units/percentage.hpp" line="17" column="1" bodyfile="special_units/percentage.hpp" bodystart="18" bodyend="142"/>
    <listofallmembers>
      <member refid="classscifir_1_1percentage_1adbea0c300e66fdf2d82721583de0f7a1" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>display_percentage</name></member>
      <member refid="classscifir_1_1percentage_1a28516c470ce03a0c3a4c7c384480fc85" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>display_ppm</name></member>
      <member refid="classscifir_1_1percentage_1aff54f2d08cc05e3f5fd3aa5b374b3ed8" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>get_factor</name></member>
      <member refid="classscifir_1_1percentage_1a295c00367e72dc3e70800da792086373" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>get_ppm</name></member>
      <member refid="classscifir_1_1percentage_1a3bff25faccd76a10dd9d24e0d9448e8c" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>get_value</name></member>
      <member refid="classscifir_1_1percentage_1ae59bbcaab856dd15c9918e26aadecb43" prot="private" virt="non-virtual"><scope>scifir::percentage</scope><name>initialize_from_string</name></member>
      <member refid="classscifir_1_1percentage_1a64ba3202f386c17dde5605465857ed75" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator float</name></member>
      <member refid="classscifir_1_1percentage_1ae1299386921e23b131a480c60313075c" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator*</name></member>
      <member refid="classscifir_1_1percentage_1a44bc5cb70594fa5c455ba2a1d95f8ff6" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator*</name></member>
      <member refid="classscifir_1_1percentage_1ad02e3d967e0188ff8012f37c9403e1ca" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator*</name></member>
      <member refid="classscifir_1_1percentage_1a154bffef5ed6e8cb63bcb39c9be4bcfe" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1percentage_1a050f53ae43b117fec94385ddcfcaafac" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1percentage_1a997703d062db4bd8372c8f42b38ab0db" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator+</name></member>
      <member refid="classscifir_1_1percentage_1a8226163901e8cc0938e65275aa1bd866" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator+</name></member>
      <member refid="classscifir_1_1percentage_1addccf7ec453b14abc08f41c0c749b2c4" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator++</name></member>
      <member refid="classscifir_1_1percentage_1a650475402efd37dfeaaafd4339eae577" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator++</name></member>
      <member refid="classscifir_1_1percentage_1a415833910907612760930697acb7cabf" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1percentage_1a32ec16c589336fda397e779f421d863e" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1percentage_1a0063f46fae523dde05a08ff773aa0759" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator-</name></member>
      <member refid="classscifir_1_1percentage_1aa2c7b90ae7a2c8e13455d58b629c9437" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator-</name></member>
      <member refid="classscifir_1_1percentage_1aecbfdd6b63d0dd993056347042063f85" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator--</name></member>
      <member refid="classscifir_1_1percentage_1a994b72fe7e2e4f8d620c1046dd55f693" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator--</name></member>
      <member refid="classscifir_1_1percentage_1aed6d83ca9b41e280179470adbf729842" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1percentage_1a5899f233d6c7bb9d364bec5bab09bdb5" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1percentage_1a2e068414854cad2217c5629c1136ebe2" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator/</name></member>
      <member refid="classscifir_1_1percentage_1acf02cbac75ad3b05102da26e4658b951" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator/</name></member>
      <member refid="classscifir_1_1percentage_1aa3489f063b146327995e69721d8b9d6b" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator/</name></member>
      <member refid="classscifir_1_1percentage_1a6c10cbe35b0236c4b549ac5bc4585212" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1percentage_1a4f2549463e30f02b2ffc70a624ec7cfa" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1percentage_1ac3da7fdb1b7df99c912b8fef1a7ae572" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1a5d784189257cbd105ec47dfaeb7c06c2" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1af0535ce3870fb035058cfdccd1d6816c" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1a67043cb05dd2934f15eaa090cee61c21" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1abec5befaa64c16f466e9b542421fbef7" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1a456f383883f9b9db1270009f66e5dc9a" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1acad958cf807bfe6eda3868f6842f089d" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1af429a976f5083bb40726479f4b8dff2d" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1ae618bce66176de9d3fe1e957a0caeaa9" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>operator=</name></member>
      <member refid="classscifir_1_1percentage_1a18948f7da73b52f27daa92954c3234ef" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a2c01f02d4b74d48fba8bd27bd4976ce5" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a1710685f83c6dfb22cf0027590d47090" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1aca3d6e3ba0960825b161cc8dddf91db9" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1af1ca132169724c44756948e65c4eb7fa" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1aa1e8fca665495f8383a647d333954275" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a8f83b25ea8c690d92bc8e25deef77bba" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a0e557b96be6e32d2d7adf39a03cf57cf" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a37056f1da6c4ccafc426aa3b1676c6ea" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a36876d08e5d4ff4b01bacaa2ece7c632" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1ae637c964c5674c6cc33c5e26e8bfa452" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a3c5f810ae0131c660db073954a6722cd" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a2a28cc4a3b5a788b37133fd25d5ee7da" prot="public" virt="non-virtual"><scope>scifir::percentage</scope><name>percentage</name></member>
      <member refid="classscifir_1_1percentage_1a8a6359416b116e57affb296949c11b21" prot="private" virt="non-virtual"><scope>scifir::percentage</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
