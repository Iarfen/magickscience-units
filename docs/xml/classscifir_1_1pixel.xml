<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1pixel" kind="class" language="C++" prot="public">
    <compoundname>scifir::pixel</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classscifir_1_1pixel_1a1e79500c250b2efae9f1ba0933f85a84" prot="private" static="no" mutable="no">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::pixel::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>scifir::pixel::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="129" column="7" bodyfile="special_units/pixel.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1pixel_1ac37a8dcc1c1e3f39fcc671463b5cc527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>()</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="20" column="1" bodyfile="special_units/pixel.cpp" bodystart="16" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a237d927c3f9a32269495ce206222cece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(const pixel &amp;x)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="21" column="1" bodyfile="special_units/pixel.cpp" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1ac0b2df2ff134be12a9c186cdb36382e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(pixel &amp;&amp;x)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="22" column="1" bodyfile="special_units/pixel.cpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1ad897870cd8e12c77256cb6e613da6065" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(float new_value)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="23" column="10" bodyfile="special_units/pixel.cpp" bodystart="25" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a8ceed76c6e41a4ec82e6eedf819fc873" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(double new_value)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="24" column="10" bodyfile="special_units/pixel.cpp" bodystart="28" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1ae0b71519b739cc9d8805296e50d772a3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(long double new_value)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="25" column="10" bodyfile="special_units/pixel.cpp" bodystart="31" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a0084a9947ffe4460bca9d687108dda4e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(int new_value)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="26" column="10" bodyfile="special_units/pixel.cpp" bodystart="34" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a51ec15da6e62b572ad12f244ef1ea4a3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(const string &amp;init_pixel)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_pixel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="27" column="10" bodyfile="special_units/pixel.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1acc15e0d66004566ac8f7a1cc8f82b1f2" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::pixel</definition>
        <argsstring>(const scalar_unit &amp;x)</argsstring>
        <name>pixel</name>
        <qualifiedname>scifir::pixel::pixel</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="28" column="10" bodyfile="special_units/pixel.cpp" bodystart="42" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a6dce4d29e8ce1fbf3736eab9f2066a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator=</definition>
        <argsstring>(const pixel &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::pixel::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="30" column="7" bodyfile="special_units/pixel.cpp" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1ada3926e43e82bedb6b23d587cc4c7cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator=</definition>
        <argsstring>(pixel &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::pixel::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="31" column="7" bodyfile="special_units/pixel.cpp" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1acf904cf2d57a63c78bd861012b87e641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator=</definition>
        <argsstring>(float new_value)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::pixel::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="32" column="7" bodyfile="special_units/pixel.cpp" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1af5a3d441a33908a5085684be08734c51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator=</definition>
        <argsstring>(const string &amp;init_pixel)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::pixel::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_pixel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="33" column="7" bodyfile="special_units/pixel.cpp" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1aba76514d36be08ecd1e3975946b93815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator=</definition>
        <argsstring>(const scalar_unit &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::pixel::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="34" column="7" bodyfile="special_units/pixel.cpp" bodystart="79" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1af31f373bcd06b57379209b717865af2a" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::pixel::operator float</definition>
        <argsstring>() const</argsstring>
        <name>operator float</name>
        <qualifiedname>scifir::pixel::operator float</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="36" column="10" bodyfile="special_units/pixel.hpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a787b708456c79b02f869a394a24ed41c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
        <definition>const float &amp; scifir::pixel::get_value</definition>
        <argsstring>() const</argsstring>
        <name>get_value</name>
        <qualifiedname>scifir::pixel::get_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="41" column="20" bodyfile="special_units/pixel.hpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a84fda0e8c640bd82b4bed9e667389c5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator+</definition>
        <argsstring>(const pixel &amp;x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::pixel::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="46" column="7" bodyfile="special_units/pixel.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a5c466e43f8e9577d426032c1cb8e6bb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator-</definition>
        <argsstring>(const pixel &amp;x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::pixel::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="47" column="7" bodyfile="special_units/pixel.cpp" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a7bdb977977b49b98641803bfc474fc90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator*</definition>
        <argsstring>(const pixel &amp;x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::pixel::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="48" column="7" bodyfile="special_units/pixel.cpp" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1ae6ba4add2460ee98bd78bae5cfe9e4f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator/</definition>
        <argsstring>(const pixel &amp;x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::pixel::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="49" column="7" bodyfile="special_units/pixel.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a4cf650acdbb369026f3f9719a788b022" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator^</definition>
        <argsstring>(const pixel &amp;x) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::pixel::operator^</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="50" column="7" bodyfile="special_units/pixel.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a312914abb3a3b6d9335d62de77d88671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator+=</definition>
        <argsstring>(const pixel &amp;x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::pixel::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="51" column="6" bodyfile="special_units/pixel.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a81f7c10a478473e2e5eecce7b903e4c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator-=</definition>
        <argsstring>(const pixel &amp;x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::pixel::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="52" column="6" bodyfile="special_units/pixel.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1ace97481b414b7afaebd71fe11745d565" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator*=</definition>
        <argsstring>(const pixel &amp;x)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::pixel::operator*=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="53" column="6" bodyfile="special_units/pixel.cpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1ad96bb7b4799ffae91706ffda7252f3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator/=</definition>
        <argsstring>(const pixel &amp;x)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::pixel::operator/=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="54" column="6" bodyfile="special_units/pixel.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a0e39299acb673f7fa48d741260030d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator^=</definition>
        <argsstring>(const pixel &amp;x)</argsstring>
        <name>operator^=</name>
        <qualifiedname>scifir::pixel::operator^=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="55" column="6" bodyfile="special_units/pixel.cpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a9397fb4e2cea946f1473c7c33f0c6979" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::pixel::operator=</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="58" column="6" bodyfile="special_units/pixel.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1af0b0b0f77443358713ca5caff1ae5e36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator+</definition>
        <argsstring>(T x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::pixel::operator+</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="64" column="7" bodyfile="special_units/pixel.hpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a8d0bc5f7e3476695136a51c32e975217" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator-</definition>
        <argsstring>(T x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::pixel::operator-</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="70" column="7" bodyfile="special_units/pixel.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a580b4e571e9889b86eae1f3f0d0a5a37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator*</definition>
        <argsstring>(T x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::pixel::operator*</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="76" column="7" bodyfile="special_units/pixel.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1abe385f8b70533e92650e2e6edcac2c97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator/</definition>
        <argsstring>(T x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::pixel::operator/</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="82" column="7" bodyfile="special_units/pixel.hpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a59a0cd976bf02506c32a40fe3b8cf477" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator^</definition>
        <argsstring>(T x) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::pixel::operator^</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="88" column="7" bodyfile="special_units/pixel.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a37b2d2515a364e601020c06bb2dfe28a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator+=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::pixel::operator+=</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="94" column="6" bodyfile="special_units/pixel.hpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a58cf3c5c9e22dbe91d125e1066bb79ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator-=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::pixel::operator-=</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="100" column="6" bodyfile="special_units/pixel.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a49b7b37296b834fc7dff47a6e3234d57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator*=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::pixel::operator*=</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="106" column="6" bodyfile="special_units/pixel.hpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1aa6662fd9a26a9c3a21109b1cfea99ff1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator/=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::pixel::operator/=</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="112" column="6" bodyfile="special_units/pixel.hpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a2b7a78f168372bea43a23dd0c540a2b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::operator^=</definition>
        <argsstring>(T x)</argsstring>
        <name>operator^=</name>
        <qualifiedname>scifir::pixel::operator^=</qualifiedname>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="118" column="6" bodyfile="special_units/pixel.hpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a4198e76869b1042d0e0cc89446efcd11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <qualifiedname>scifir::pixel::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="123" column="7" bodyfile="special_units/pixel.cpp" bodystart="142" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a2c1d225502fa1f31fb35ddbe1ef6303a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <qualifiedname>scifir::pixel::operator++</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="124" column="7" bodyfile="special_units/pixel.cpp" bodystart="148" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1aa54be4b2c5933306414806b0b0c1ac74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref> &amp;</type>
        <definition>pixel &amp; scifir::pixel::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <qualifiedname>scifir::pixel::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="125" column="7" bodyfile="special_units/pixel.cpp" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1pixel_1a06913d78fccaefdcad33d71e502b954e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1pixel" kindref="compound">pixel</ref></type>
        <definition>pixel scifir::pixel::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <qualifiedname>scifir::pixel::operator--</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="126" column="7" bodyfile="special_units/pixel.cpp" bodystart="161" bodyend="166"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classscifir_1_1pixel_1aed5d65834bd7b28963950784fd60d534" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::pixel::initialize_from_string</definition>
        <argsstring>(const string &amp;init_pixel)</argsstring>
        <name>initialize_from_string</name>
        <qualifiedname>scifir::pixel::initialize_from_string</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_pixel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/pixel.hpp" line="131" column="6" bodyfile="special_units/pixel.cpp" bodystart="168" bodyend="182"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="special_units/pixel.hpp" line="17" column="1" bodyfile="special_units/pixel.hpp" bodystart="18" bodyend="133"/>
    <listofallmembers>
      <member refid="classscifir_1_1pixel_1a787b708456c79b02f869a394a24ed41c" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>get_value</name></member>
      <member refid="classscifir_1_1pixel_1aed5d65834bd7b28963950784fd60d534" prot="private" virt="non-virtual"><scope>scifir::pixel</scope><name>initialize_from_string</name></member>
      <member refid="classscifir_1_1pixel_1af31f373bcd06b57379209b717865af2a" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator float</name></member>
      <member refid="classscifir_1_1pixel_1a7bdb977977b49b98641803bfc474fc90" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator*</name></member>
      <member refid="classscifir_1_1pixel_1a580b4e571e9889b86eae1f3f0d0a5a37" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator*</name></member>
      <member refid="classscifir_1_1pixel_1ace97481b414b7afaebd71fe11745d565" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1pixel_1a49b7b37296b834fc7dff47a6e3234d57" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1pixel_1a84fda0e8c640bd82b4bed9e667389c5b" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator+</name></member>
      <member refid="classscifir_1_1pixel_1af0b0b0f77443358713ca5caff1ae5e36" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator+</name></member>
      <member refid="classscifir_1_1pixel_1a4198e76869b1042d0e0cc89446efcd11" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator++</name></member>
      <member refid="classscifir_1_1pixel_1a2c1d225502fa1f31fb35ddbe1ef6303a" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator++</name></member>
      <member refid="classscifir_1_1pixel_1a312914abb3a3b6d9335d62de77d88671" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1pixel_1a37b2d2515a364e601020c06bb2dfe28a" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1pixel_1a5c466e43f8e9577d426032c1cb8e6bb8" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator-</name></member>
      <member refid="classscifir_1_1pixel_1a8d0bc5f7e3476695136a51c32e975217" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator-</name></member>
      <member refid="classscifir_1_1pixel_1aa54be4b2c5933306414806b0b0c1ac74" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator--</name></member>
      <member refid="classscifir_1_1pixel_1a06913d78fccaefdcad33d71e502b954e" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator--</name></member>
      <member refid="classscifir_1_1pixel_1a81f7c10a478473e2e5eecce7b903e4c3" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1pixel_1a58cf3c5c9e22dbe91d125e1066bb79ab" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1pixel_1ae6ba4add2460ee98bd78bae5cfe9e4f1" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator/</name></member>
      <member refid="classscifir_1_1pixel_1abe385f8b70533e92650e2e6edcac2c97" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator/</name></member>
      <member refid="classscifir_1_1pixel_1ad96bb7b4799ffae91706ffda7252f3eb" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1pixel_1aa6662fd9a26a9c3a21109b1cfea99ff1" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1pixel_1a6dce4d29e8ce1fbf3736eab9f2066a58" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pixel_1ada3926e43e82bedb6b23d587cc4c7cf1" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pixel_1acf904cf2d57a63c78bd861012b87e641" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pixel_1af5a3d441a33908a5085684be08734c51" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pixel_1aba76514d36be08ecd1e3975946b93815" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pixel_1a9397fb4e2cea946f1473c7c33f0c6979" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator=</name></member>
      <member refid="classscifir_1_1pixel_1a4cf650acdbb369026f3f9719a788b022" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator^</name></member>
      <member refid="classscifir_1_1pixel_1a59a0cd976bf02506c32a40fe3b8cf477" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator^</name></member>
      <member refid="classscifir_1_1pixel_1a0e39299acb673f7fa48d741260030d18" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator^=</name></member>
      <member refid="classscifir_1_1pixel_1a2b7a78f168372bea43a23dd0c540a2b9" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>operator^=</name></member>
      <member refid="classscifir_1_1pixel_1ac37a8dcc1c1e3f39fcc671463b5cc527" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1a237d927c3f9a32269495ce206222cece" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1ac0b2df2ff134be12a9c186cdb36382e9" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1ad897870cd8e12c77256cb6e613da6065" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1a8ceed76c6e41a4ec82e6eedf819fc873" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1ae0b71519b739cc9d8805296e50d772a3" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1a0084a9947ffe4460bca9d687108dda4e" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1a51ec15da6e62b572ad12f244ef1ea4a3" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1acc15e0d66004566ac8f7a1cc8f82b1f2" prot="public" virt="non-virtual"><scope>scifir::pixel</scope><name>pixel</name></member>
      <member refid="classscifir_1_1pixel_1a1e79500c250b2efae9f1ba0933f85a84" prot="private" virt="non-virtual"><scope>scifir::pixel</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
