<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classscifir_1_1point__2d_3_01float_01_4" kind="class" language="C++" prot="public">
    <compoundname>scifir::point_2d&lt; float &gt;</compoundname>
    <includes refid="point__2d_8hpp" local="no">point_2d.hpp</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1point__2d_3_01float_01_4_1ad962dac24836d45d0d25b1a21c0b291d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float scifir::point_2d&lt; float &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="289" column="7" bodyfile="topology/point_2d.hpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1point__2d_3_01float_01_4_1a71dcc61ed749c4378035419cfcd5372d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float scifir::point_2d&lt; float &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="290" column="7" bodyfile="topology/point_2d.hpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a91bb0cd3cad43dc98f4720b917b39df9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_2d&lt; float &gt;::point_2d</definition>
        <argsstring>()</argsstring>
        <name>point_2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="172" column="1" bodyfile="topology/point_2d.hpp" bodystart="172" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a9f21a18da7967689cdeb5da3f0beebd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_2d&lt; float &gt;::point_2d</definition>
        <argsstring>(const point_2d&lt; float &gt; &amp;x_point)</argsstring>
        <name>point_2d</name>
        <param>
          <type>const <ref refid="classscifir_1_1point__2d" kindref="compound">point_2d</ref>&lt; float &gt; &amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="175" column="1" bodyfile="topology/point_2d.hpp" bodystart="175" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a283ec210d401ce646f5e31a6f3218046" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_2d&lt; float &gt;::point_2d</definition>
        <argsstring>(point_2d&lt; float &gt; &amp;&amp;x_point)</argsstring>
        <name>point_2d</name>
        <param>
          <type><ref refid="classscifir_1_1point__2d" kindref="compound">point_2d</ref>&lt; float &gt; &amp;&amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="178" column="1" bodyfile="topology/point_2d.hpp" bodystart="178" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a9ddfc564a8acaeb443122f62bdfebcc9" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_2d&lt; float &gt;::point_2d</definition>
        <argsstring>(float new_x, float new_y)</argsstring>
        <name>point_2d</name>
        <param>
          <type>float</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="181" column="10" bodyfile="topology/point_2d.hpp" bodystart="181" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a7f1348e3369d1c7ed1ca55b0bfa7e9c4" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_2d&lt; float &gt;::point_2d</definition>
        <argsstring>(float new_p, const angle &amp;new_theta)</argsstring>
        <name>point_2d</name>
        <param>
          <type>float</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="184" column="10" bodyfile="topology/point_2d.hpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a1df8c9843d3b36b315033496aee9e0af" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::point_2d&lt; float &gt;::point_2d</definition>
        <argsstring>(const coordinates_2d&lt; float &gt; &amp;x_coordinates)</argsstring>
        <name>point_2d</name>
        <param>
          <type>const <ref refid="classscifir_1_1coordinates__2d" kindref="compound">coordinates_2d</ref>&lt; float &gt; &amp;</type>
          <declname>x_coordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="189" column="10" bodyfile="topology/point_2d.cpp" bodystart="10" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a500cff42381b14130300ed92755d81d7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::point_2d&lt; float &gt;::point_2d</definition>
        <argsstring>(coordinates_2d&lt; float &gt; &amp;&amp;x_coordinates)</argsstring>
        <name>point_2d</name>
        <param>
          <type><ref refid="classscifir_1_1coordinates__2d" kindref="compound">coordinates_2d</ref>&lt; float &gt; &amp;&amp;</type>
          <declname>x_coordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="191" column="10" bodyfile="topology/point_2d.cpp" bodystart="13" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1ad6c5f1ca57f66b4733ba7596b3bcf648" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_2d&lt; float &gt;::point_2d</definition>
        <argsstring>(const string &amp;init_point_2d)</argsstring>
        <name>point_2d</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_point_2d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="193" column="10" bodyfile="topology/point_2d.hpp" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a4ecaabf7209cc59ebe3a8fe5447c181b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__2d" kindref="compound">point_2d</ref>&lt; float &gt; &amp;</type>
        <definition>point_2d&lt;float&gt;&amp; scifir::point_2d&lt; float &gt;::operator=</definition>
        <argsstring>(const point_2d&lt; float &gt; &amp;x_point)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classscifir_1_1point__2d" kindref="compound">point_2d</ref>&lt; float &gt; &amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="198" column="10" bodyfile="topology/point_2d.hpp" bodystart="198" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a5f06fe0dba1314cc8b229a4e3f25c36f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__2d" kindref="compound">point_2d</ref>&lt; float &gt; &amp;</type>
        <definition>point_2d&lt;float&gt;&amp; scifir::point_2d&lt; float &gt;::operator=</definition>
        <argsstring>(point_2d&lt; float &gt; &amp;&amp;x_point)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classscifir_1_1point__2d" kindref="compound">point_2d</ref>&lt; float &gt; &amp;&amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="205" column="10" bodyfile="topology/point_2d.hpp" bodystart="205" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1ae5bda2200af402ac8ab19619d3a391ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__2d" kindref="compound">point_2d</ref>&lt; float &gt; &amp;</type>
        <definition>point_2d&lt; float &gt; &amp; scifir::point_2d&lt; float &gt;::operator=</definition>
        <argsstring>(const coordinates_2d&lt; float &gt; &amp;x_coordinates)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classscifir_1_1coordinates__2d" kindref="compound">coordinates_2d</ref>&lt; float &gt; &amp;</type>
          <declname>x_coordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="212" column="10" bodyfile="topology/point_2d.cpp" bodystart="16" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1acfd5870e2431dbbfe3e0dc4e6180e665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__2d" kindref="compound">point_2d</ref>&lt; float &gt; &amp;</type>
        <definition>point_2d&lt; float &gt; &amp; scifir::point_2d&lt; float &gt;::operator=</definition>
        <argsstring>(coordinates_2d&lt; float &gt; &amp;&amp;x_coordinates)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classscifir_1_1coordinates__2d" kindref="compound">coordinates_2d</ref>&lt; float &gt; &amp;&amp;</type>
          <declname>x_coordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="214" column="10" bodyfile="topology/point_2d.cpp" bodystart="23" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a5b35d806b7f647c01eb9bc0ad9304c48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__2d" kindref="compound">point_2d</ref>&lt; float &gt; &amp;</type>
        <definition>point_2d&lt;float&gt;&amp; scifir::point_2d&lt; float &gt;::operator=</definition>
        <argsstring>(const string &amp;init_point_2d)</argsstring>
        <name>operator=</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_point_2d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="216" column="10" bodyfile="topology/point_2d.hpp" bodystart="216" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a9e70a185bb29e4b43d5bd7d749253587" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float scifir::point_2d&lt; float &gt;::get_p</definition>
        <argsstring>() const</argsstring>
        <name>get_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="222" column="7" bodyfile="topology/point_2d.hpp" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1ae16cff1c0cf34016ce1ca7c9ad183b71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_2d&lt; float &gt;::get_theta</definition>
        <argsstring>() const</argsstring>
        <name>get_theta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="227" column="7" bodyfile="topology/point_2d.hpp" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a692086ec3e8ad0c6af266d02a6978ea3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::point_2d&lt; float &gt;::set_position</definition>
        <argsstring>(float new_x, float new_y)</argsstring>
        <name>set_position</name>
        <param>
          <type>float</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="232" column="6" bodyfile="topology/point_2d.hpp" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a44d783f03b84cee39668f3ee2f0e1af6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::point_2d&lt; float &gt;::set_position</definition>
        <argsstring>(float new_p, const angle &amp;new_theta)</argsstring>
        <name>set_position</name>
        <param>
          <type>float</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="238" column="6" bodyfile="topology/point_2d.hpp" bodystart="238" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a46e738972a79fa50f52880f1f3f84adb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::point_2d&lt; float &gt;::rotate</definition>
        <argsstring>(const angle &amp;x_angle)</argsstring>
        <name>rotate</name>
        <param>
          <type>const <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>x_angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="244" column="6" bodyfile="topology/point_2d.hpp" bodystart="244" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a5c4d41d69220e7529e2a42ea17f7c206" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::point_2d&lt; float &gt;::move</definition>
        <argsstring>(const displacement_2d &amp;x_displacement)</argsstring>
        <name>move</name>
        <param>
          <type>const displacement_2d &amp;</type>
          <declname>x_displacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="252" column="6" bodyfile="topology/point_2d.hpp" bodystart="252" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a7b0ed972b697298391ea4147f9cecd91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::point_2d&lt; float &gt;::move</definition>
        <argsstring>(float new_x, float new_y)</argsstring>
        <name>move</name>
        <param>
          <type>float</type>
          <declname>new_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="258" column="6" bodyfile="topology/point_2d.hpp" bodystart="258" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a813ebec82d3119c75342b4473f6e1876" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::point_2d&lt; float &gt;::move</definition>
        <argsstring>(float new_p, const angle &amp;new_theta)</argsstring>
        <name>move</name>
        <param>
          <type>float</type>
          <declname>new_p</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="264" column="6" bodyfile="topology/point_2d.hpp" bodystart="264" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a75f0b4581743118243cea0645b508c9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float scifir::point_2d&lt; float &gt;::distance_to_origin</definition>
        <argsstring>() const</argsstring>
        <name>distance_to_origin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="270" column="7" bodyfile="topology/point_2d.hpp" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a16f8ed56b83fbb63ec094978b8e93994" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string scifir::point_2d&lt; float &gt;::display_cartesian</definition>
        <argsstring>() const</argsstring>
        <name>display_cartesian</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="275" column="8" bodyfile="topology/point_2d.hpp" bodystart="275" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1add91f15b53f14253a3bb0984b5e76c32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string scifir::point_2d&lt; float &gt;::display_polar</definition>
        <argsstring>() const</argsstring>
        <name>display_polar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="282" column="8" bodyfile="topology/point_2d.hpp" bodystart="282" bodyend="287"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classscifir_1_1point__2d_3_01float_01_4_1a0be923ae3e445431aac38eb7a49f2677" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::point_2d&lt; float &gt;::initialize_from_string</definition>
        <argsstring>(string init_point_2d)</argsstring>
        <name>initialize_from_string</name>
        <param>
          <type>string</type>
          <declname>init_point_2d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_2d.hpp" line="293" column="6" bodyfile="topology/point_2d.hpp" bodystart="293" bodyend="316"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="topology/point_2d.hpp" line="169" column="1" bodyfile="topology/point_2d.hpp" bodystart="170" bodyend="317"/>
    <listofallmembers>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a16f8ed56b83fbb63ec094978b8e93994" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>display_cartesian</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1add91f15b53f14253a3bb0984b5e76c32" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>display_polar</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a75f0b4581743118243cea0645b508c9f" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>distance_to_origin</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a9e70a185bb29e4b43d5bd7d749253587" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>get_p</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1ae16cff1c0cf34016ce1ca7c9ad183b71" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>get_theta</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a0be923ae3e445431aac38eb7a49f2677" prot="private" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>initialize_from_string</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a5c4d41d69220e7529e2a42ea17f7c206" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a7b0ed972b697298391ea4147f9cecd91" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a813ebec82d3119c75342b4473f6e1876" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a4ecaabf7209cc59ebe3a8fe5447c181b" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a5f06fe0dba1314cc8b229a4e3f25c36f" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1ae5bda2200af402ac8ab19619d3a391ab" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1acfd5870e2431dbbfe3e0dc4e6180e665" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a5b35d806b7f647c01eb9bc0ad9304c48" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a91bb0cd3cad43dc98f4720b917b39df9" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>point_2d</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a9f21a18da7967689cdeb5da3f0beebd3" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>point_2d</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a283ec210d401ce646f5e31a6f3218046" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>point_2d</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a9ddfc564a8acaeb443122f62bdfebcc9" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>point_2d</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a7f1348e3369d1c7ed1ca55b0bfa7e9c4" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>point_2d</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a1df8c9843d3b36b315033496aee9e0af" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>point_2d</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a500cff42381b14130300ed92755d81d7" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>point_2d</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1ad6c5f1ca57f66b4733ba7596b3bcf648" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>point_2d</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a46e738972a79fa50f52880f1f3f84adb" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>rotate</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a692086ec3e8ad0c6af266d02a6978ea3" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a44d783f03b84cee39668f3ee2f0e1af6" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1ad962dac24836d45d0d25b1a21c0b291d" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>x</name></member>
      <member refid="classscifir_1_1point__2d_3_01float_01_4_1a71dcc61ed749c4378035419cfcd5372d" prot="public" virt="non-virtual"><scope>scifir::point_2d&lt; float &gt;</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
