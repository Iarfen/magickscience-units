<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1point__nd_3_01float_01_4" kind="class" language="C++" prot="public">
    <compoundname>scifir::point_nd&lt; float &gt;</compoundname>
    <includes refid="point__nd_8hpp" local="no">point_nd.hpp</includes>
    <templateparamlist>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1point__nd_3_01float_01_4_1aa3425d85abe531524fced08184ebf68e" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt;</type>
        <definition>vector&lt;float&gt; scifir::point_nd&lt; float &gt;::values</definition>
        <argsstring></argsstring>
        <name>values</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::values</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="975" column="8" bodyfile="topology/point_nd.hpp" bodystart="975" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a4175ebb374f18f140bd012bf54a83996" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>()</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="538" column="1" bodyfile="topology/point_nd.hpp" bodystart="538" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ac76056b05c3791ed0e1a766aea4246d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const point_nd&lt; float &gt; &amp;x)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="541" column="1" bodyfile="topology/point_nd.hpp" bodystart="541" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a603a4c6f4ee12c45a4102ced4bc76bd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(point_nd&lt; float &gt; &amp;&amp;x)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="544" column="1" bodyfile="topology/point_nd.hpp" bodystart="544" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1aa801352acb1925e01fc118313d3ee28c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const vector&lt; float &gt; &amp;new_values)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="547" column="10" bodyfile="topology/point_nd.hpp" bodystart="547" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ad79ec9b37eda55f482dd383c30750468" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(float new_x)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="550" column="10" bodyfile="topology/point_nd.hpp" bodystart="550" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a293b8cde04fad535eb44ad93aac32cf2" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(float new_x, float new_y)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="555" column="10" bodyfile="topology/point_nd.hpp" bodystart="555" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a21db9ff40ddd13bbd3ef1f2b1d96561d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(float new_p, const angle &amp;new_theta)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="561" column="10" bodyfile="topology/point_nd.hpp" bodystart="561" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ae2041e8a18d6c3c049858c5778254cbb" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(float new_x, float new_y, float new_z)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="566" column="10" bodyfile="topology/point_nd.hpp" bodystart="566" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a58262a2abf38cf995e6766d12fe0d229" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(float new_p, const angle &amp;new_theta, float new_z)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="573" column="10" bodyfile="topology/point_nd.hpp" bodystart="573" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a55cd4b983d6fcf316edb65317ac6b100" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(float new_r, const angle &amp;new_theta, const angle &amp;new_phi)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="578" column="10" bodyfile="topology/point_nd.hpp" bodystart="578" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1aaa9484f8a15b604e06175be06911fe2b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const angle &amp;new_latitude, const angle &amp;new_longitude, float new_altitude)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_latitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_longitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_altitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="583" column="10" bodyfile="topology/point_nd.hpp" bodystart="583" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a003fa136928f7c3746d6bae5604d4487" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const coordinates_nd&lt; float &gt; &amp;x_coordinates)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__nd" kindref="compound">coordinates_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>x_coordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="588" column="10" bodyfile="topology/point_nd.cpp" bodystart="10" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a1c0a1aedefba0f91a44b1ff29924fdd8" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(coordinates_nd&lt; float &gt; &amp;&amp;x_coordinates)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__nd" kindref="compound">coordinates_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;&amp;</type>
          <declname>x_coordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="590" column="10" bodyfile="topology/point_nd.cpp" bodystart="13" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1af62f817f8259984c5a8e5a4500c18a3f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::point_nd&lt; float &gt;::point_nd</definition>
        <argsstring>(const string &amp;init_point_nd)</argsstring>
        <name>point_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::point_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_point_nd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="592" column="10" bodyfile="topology/point_nd.hpp" bodystart="592" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a4992c0884858486c0117d47ada803750" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
        <definition>point_nd&lt; float &gt; &amp; scifir::point_nd&lt; float &gt;::operator=</definition>
        <argsstring>(const point_nd&lt; float &gt; &amp;x_point)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="597" column="10" bodyfile="topology/point_nd.hpp" bodystart="597" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a4c2ec609453dd18763afab72c2ae9904" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
        <definition>point_nd&lt; float &gt; &amp; scifir::point_nd&lt; float &gt;::operator=</definition>
        <argsstring>(point_nd&lt; float &gt; &amp;&amp;x_point)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;&amp;</type>
          <declname>x_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="603" column="10" bodyfile="topology/point_nd.hpp" bodystart="603" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a4b2b9d7ff779443dd72b099ca5449cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
        <definition>point_nd&lt; float &gt; &amp; scifir::point_nd&lt; float &gt;::operator=</definition>
        <argsstring>(const coordinates_nd&lt; float &gt; &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__nd" kindref="compound">coordinates_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <defname>x_coordinates</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="609" column="10" bodyfile="topology/point_nd.cpp" bodystart="16" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a3630d8ee16dafbbf7118c4b80839c85c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
        <definition>point_nd&lt; float &gt; &amp; scifir::point_nd&lt; float &gt;::operator=</definition>
        <argsstring>(coordinates_nd&lt; float &gt; &amp;&amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__nd" kindref="compound">coordinates_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;&amp;</type>
          <defname>x_coordinates</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="611" column="10" bodyfile="topology/point_nd.cpp" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ae29352534dcf669333c3863e64311d11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1point__nd" kindref="compound">point_nd</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
        <definition>point_nd&lt; float &gt; &amp; scifir::point_nd&lt; float &gt;::operator=</definition>
        <argsstring>(const string &amp;init_point_nd)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_point_nd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="613" column="10" bodyfile="topology/point_nd.hpp" bodystart="613" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a71cee233ce28f41a9fc48a29f6ffefa1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
        <definition>bool scifir::point_nd&lt; float &gt;::is_nd</definition>
        <argsstring>(unsigned int i) const</argsstring>
        <name>is_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::is_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">unsigned</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="619" column="6" bodyfile="topology/point_nd.hpp" bodystart="619" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a31c237773c49d6a7e0b0a074e0d52b6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        <definition>int scifir::point_nd&lt; float &gt;::get_nd</definition>
        <argsstring>() const</argsstring>
        <name>get_nd</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_nd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="624" column="5" bodyfile="topology/point_nd.hpp" bodystart="624" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1acd569732895b62b793eb1923fb4c2145" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::point_nd&lt; float &gt;::get_p</definition>
        <argsstring>() const</argsstring>
        <name>get_p</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="629" column="7" bodyfile="topology/point_nd.hpp" bodystart="629" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1aee94aa49237b23182999763bc5146b76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_nd&lt; float &gt;::get_theta</definition>
        <argsstring>() const</argsstring>
        <name>get_theta</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="641" column="7" bodyfile="topology/point_nd.hpp" bodystart="641" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a16bd2b100d528b149ccb9c512f42a20a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::point_nd&lt; float &gt;::get_r</definition>
        <argsstring>() const</argsstring>
        <name>get_r</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="653" column="7" bodyfile="topology/point_nd.hpp" bodystart="653" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a30aab62b886029f37f0e9d111db2527f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_nd&lt; float &gt;::get_phi</definition>
        <argsstring>() const</argsstring>
        <name>get_phi</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_phi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="665" column="7" bodyfile="topology/point_nd.hpp" bodystart="665" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1acdc3f24fa8ba50f8305a3ed193a80fd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_nd&lt; float &gt;::get_latitude</definition>
        <argsstring>() const</argsstring>
        <name>get_latitude</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_latitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="677" column="7" bodyfile="topology/point_nd.hpp" bodystart="677" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a74a22877f701f4d2ffe673fe35343212" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::point_nd&lt; float &gt;::get_longitude</definition>
        <argsstring>() const</argsstring>
        <name>get_longitude</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_longitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="682" column="7" bodyfile="topology/point_nd.hpp" bodystart="682" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a41b22ee4a45424044d1f7d1c02ce89ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::point_nd&lt; float &gt;::get_altitude</definition>
        <argsstring>() const</argsstring>
        <name>get_altitude</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::get_altitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="687" column="7" bodyfile="topology/point_nd.hpp" bodystart="687" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a7af5c82a254f875099a9ff3dfe82423a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(float new_x)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="692" column="6" bodyfile="topology/point_nd.hpp" bodystart="692" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a08bd867d9984a0b4ee1647e6fb31bb11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(float new_x, float new_y)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="698" column="6" bodyfile="topology/point_nd.hpp" bodystart="698" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a279bc490ff77b8791a8116c8f0c137d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(float new_p, const angle &amp;new_theta)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="705" column="6" bodyfile="topology/point_nd.hpp" bodystart="705" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a3e4bcf018878a9d0705e9b13acaa3072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(float new_x, float new_y, float new_z)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="712" column="6" bodyfile="topology/point_nd.hpp" bodystart="712" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a460fbc26ad0c19c9011a5ace89caa954" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(float new_p, const angle &amp;new_theta, float new_z)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="720" column="6" bodyfile="topology/point_nd.hpp" bodystart="720" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a72a6f2c2a18b0d205ae417b77155796c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(float new_r, const angle &amp;new_theta, const angle &amp;new_phi)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="728" column="6" bodyfile="topology/point_nd.hpp" bodystart="728" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1aebb0b2210e7bacf69b6ec0f6a3d29cc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(const angle &amp;new_latitude, const angle &amp;new_longitude, float new_altitude)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_latitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_longitude</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_altitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="736" column="6" bodyfile="topology/point_nd.hpp" bodystart="736" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1aec4d7cdb5ca2d4a535a4fccc91fe1b94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::set_position</definition>
        <argsstring>(const vector&lt; float &gt; &amp;new_values)</argsstring>
        <name>set_position</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::set_position</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="744" column="6" bodyfile="topology/point_nd.hpp" bodystart="744" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a510d5f3770750a8c27b1edc293ede168" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::rotate_in_2d</definition>
        <argsstring>(const angle &amp;new_theta)</argsstring>
        <name>rotate_in_2d</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::rotate_in_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="750" column="6" bodyfile="topology/point_nd.hpp" bodystart="750" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a6900b6c1393e0c31d27252461ad331cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::rotate_in_3d</definition>
        <argsstring>(int axis, const angle &amp;new_theta)</argsstring>
        <name>rotate_in_3d</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::rotate_in_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>axis</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="761" column="6" bodyfile="topology/point_nd.hpp" bodystart="761" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a7e468a43e7e07d5637c40f5f443677a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(float new_x)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="789" column="6" bodyfile="topology/point_nd.hpp" bodystart="789" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a61cba4672a4a83dcd8526f547407d64b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const displacement_2d &amp;x_displacement)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">displacement_2d</ref> &amp;</type>
          <declname>x_displacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="797" column="6" bodyfile="topology/point_nd.hpp" bodystart="797" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a16bc1edb6b4062f4cddbadddeb3967e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(float new_x, float new_y)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="806" column="6" bodyfile="topology/point_nd.hpp" bodystart="806" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1adebdbe6a8b22895ec4d62b4918215bab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(float new_p, const angle &amp;new_theta)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="815" column="6" bodyfile="topology/point_nd.hpp" bodystart="815" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a7dab374ffca0ac8e1d8bc3779b4c29e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const displacement_3d &amp;x_displacement)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">displacement_3d</ref> &amp;</type>
          <declname>x_displacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="824" column="6" bodyfile="topology/point_nd.hpp" bodystart="824" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a3e7cf994b8c9afdf8f6985188ea8dfb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(float new_x, float new_y, float new_z)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="834" column="6" bodyfile="topology/point_nd.hpp" bodystart="834" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a7a819b1ac9d4c13e1b82e29d36c4f46e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(float new_p, const angle &amp;new_theta, float new_z)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="844" column="6" bodyfile="topology/point_nd.hpp" bodystart="844" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a901c2361e1a845e25b3c533fd35528b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(float new_r, const angle &amp;new_theta, const angle &amp;new_phi)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="854" column="6" bodyfile="topology/point_nd.hpp" bodystart="854" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ac151973b85a78d0286efcc484af4c1c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(const displacement_nd &amp;x_displacement)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">displacement_nd</ref> &amp;</type>
          <declname>x_displacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="864" column="6" bodyfile="topology/point_nd.hpp" bodystart="864" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a5dbe90175fddf5df1f652a2f46ead32a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::move</definition>
        <argsstring>(float new_r, const vector&lt; angle &gt; &amp;new_angles)</argsstring>
        <name>move</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::move</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_r</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="875" column="6" bodyfile="topology/point_nd.hpp" bodystart="875" bodyend="879"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a9e0a2df9bd04cfcb893a565ab9df7042" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::point_nd&lt; float &gt;::distance_to_origin</definition>
        <argsstring>() const</argsstring>
        <name>distance_to_origin</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::distance_to_origin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="881" column="7" bodyfile="topology/point_nd.hpp" bodystart="881" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a75cdcdb35f91af7ca0a3ed2127c8de96" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_nd&lt; float &gt;::display_cartesian_2d</definition>
        <argsstring>() const</argsstring>
        <name>display_cartesian_2d</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::display_cartesian_2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="891" column="8" bodyfile="topology/point_nd.hpp" bodystart="891" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a9ee69e0456f2bbd2423a4430cfb43d41" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_nd&lt; float &gt;::display_polar</definition>
        <argsstring>() const</argsstring>
        <name>display_polar</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::display_polar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="905" column="8" bodyfile="topology/point_nd.hpp" bodystart="905" bodyend="917"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ab6f46dd899b606911a2c9ebab244f307" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_nd&lt; float &gt;::display_cartesian_3d</definition>
        <argsstring>() const</argsstring>
        <name>display_cartesian_3d</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::display_cartesian_3d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="919" column="8" bodyfile="topology/point_nd.hpp" bodystart="919" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1aceb98e6b28ffc12f0e1edb7da478948a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_nd&lt; float &gt;::display_cylindrical</definition>
        <argsstring>() const</argsstring>
        <name>display_cylindrical</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::display_cylindrical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="933" column="8" bodyfile="topology/point_nd.hpp" bodystart="933" bodyend="945"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ad5ffb2a9d55f525c6e17e37c4c75a13e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_nd&lt; float &gt;::display_spherical</definition>
        <argsstring>() const</argsstring>
        <name>display_spherical</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::display_spherical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="947" column="8" bodyfile="topology/point_nd.hpp" bodystart="947" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1ac7287fa939b9a640f082326e42bf0900" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::point_nd&lt; float &gt;::display_geographical</definition>
        <argsstring>() const</argsstring>
        <name>display_geographical</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::display_geographical</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="961" column="8" bodyfile="topology/point_nd.hpp" bodystart="961" bodyend="973"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classscifir_1_1point__nd_3_01float_01_4_1a6a37390a132b27c3704b13a81d611280" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::point_nd&lt; float &gt;::initialize_from_string</definition>
        <argsstring>(string init_point_nd)</argsstring>
        <name>initialize_from_string</name>
        <qualifiedname>scifir::point_nd&lt; float &gt;::initialize_from_string</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
          <declname>init_point_nd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="topology/point_nd.hpp" line="978" column="6" bodyfile="topology/point_nd.hpp" bodystart="978" bodyend="1042"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="topology/point_nd.hpp" line="535" column="1" bodyfile="topology/point_nd.hpp" bodystart="536" bodyend="1043"/>
    <listofallmembers>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a75cdcdb35f91af7ca0a3ed2127c8de96" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>display_cartesian_2d</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ab6f46dd899b606911a2c9ebab244f307" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>display_cartesian_3d</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aceb98e6b28ffc12f0e1edb7da478948a" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>display_cylindrical</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ac7287fa939b9a640f082326e42bf0900" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>display_geographical</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a9ee69e0456f2bbd2423a4430cfb43d41" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>display_polar</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ad5ffb2a9d55f525c6e17e37c4c75a13e" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>display_spherical</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a9e0a2df9bd04cfcb893a565ab9df7042" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>distance_to_origin</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a41b22ee4a45424044d1f7d1c02ce89ef" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_altitude</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1acdc3f24fa8ba50f8305a3ed193a80fd8" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_latitude</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a74a22877f701f4d2ffe673fe35343212" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_longitude</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a31c237773c49d6a7e0b0a074e0d52b6b" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1acd569732895b62b793eb1923fb4c2145" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_p</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a30aab62b886029f37f0e9d111db2527f" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_phi</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a16bd2b100d528b149ccb9c512f42a20a" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_r</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aee94aa49237b23182999763bc5146b76" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>get_theta</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a6a37390a132b27c3704b13a81d611280" prot="private" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>initialize_from_string</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a71cee233ce28f41a9fc48a29f6ffefa1" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>is_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a7e468a43e7e07d5637c40f5f443677a8" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a61cba4672a4a83dcd8526f547407d64b" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a16bc1edb6b4062f4cddbadddeb3967e5" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1adebdbe6a8b22895ec4d62b4918215bab" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a7dab374ffca0ac8e1d8bc3779b4c29e5" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a3e7cf994b8c9afdf8f6985188ea8dfb3" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a7a819b1ac9d4c13e1b82e29d36c4f46e" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a901c2361e1a845e25b3c533fd35528b6" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ac151973b85a78d0286efcc484af4c1c6" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a5dbe90175fddf5df1f652a2f46ead32a" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>move</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a4992c0884858486c0117d47ada803750" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a4c2ec609453dd18763afab72c2ae9904" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a4b2b9d7ff779443dd72b099ca5449cd7" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a3630d8ee16dafbbf7118c4b80839c85c" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ae29352534dcf669333c3863e64311d11" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a4175ebb374f18f140bd012bf54a83996" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ac76056b05c3791ed0e1a766aea4246d9" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a603a4c6f4ee12c45a4102ced4bc76bd4" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aa801352acb1925e01fc118313d3ee28c" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ad79ec9b37eda55f482dd383c30750468" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a293b8cde04fad535eb44ad93aac32cf2" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a21db9ff40ddd13bbd3ef1f2b1d96561d" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1ae2041e8a18d6c3c049858c5778254cbb" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a58262a2abf38cf995e6766d12fe0d229" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a55cd4b983d6fcf316edb65317ac6b100" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aaa9484f8a15b604e06175be06911fe2b" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a003fa136928f7c3746d6bae5604d4487" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a1c0a1aedefba0f91a44b1ff29924fdd8" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1af62f817f8259984c5a8e5a4500c18a3f" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>point_nd</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a510d5f3770750a8c27b1edc293ede168" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>rotate_in_2d</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a6900b6c1393e0c31d27252461ad331cc" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>rotate_in_3d</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a7af5c82a254f875099a9ff3dfe82423a" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a08bd867d9984a0b4ee1647e6fb31bb11" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a279bc490ff77b8791a8116c8f0c137d4" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a3e4bcf018878a9d0705e9b13acaa3072" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a460fbc26ad0c19c9011a5ace89caa954" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1a72a6f2c2a18b0d205ae417b77155796c" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aebb0b2210e7bacf69b6ec0f6a3d29cc4" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aec4d7cdb5ca2d4a535a4fccc91fe1b94" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>set_position</name></member>
      <member refid="classscifir_1_1point__nd_3_01float_01_4_1aa3425d85abe531524fced08184ebf68e" prot="public" virt="non-virtual"><scope>scifir::point_nd&lt; float &gt;</scope><name>values</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
