<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1scalar__unit" kind="class" language="C++" prot="public">
    <compoundname>scifir::scalar_unit</compoundname>
    <derivedcompoundref refid="classscifir_1_1vector__unit__2d" prot="public" virt="non-virtual">scifir::vector_unit_2d</derivedcompoundref>
    <derivedcompoundref refid="classscifir_1_1vector__unit__3d" prot="public" virt="non-virtual">scifir::vector_unit_3d</derivedcompoundref>
    <derivedcompoundref refid="classscifir_1_1vector__unit__nd" prot="public" virt="non-virtual">scifir::vector_unit_nd</derivedcompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classscifir_1_1scalar__unit_1a47854a88ee4cacf7099c756e111b198d" prot="protected" static="no" mutable="no">
        <type>vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt;</type>
        <definition>vector&lt;dimension&gt; scifir::scalar_unit::dimensions</definition>
        <argsstring></argsstring>
        <name>dimensions</name>
        <qualifiedname>scifir::scalar_unit::dimensions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="203" column="8" bodyfile="units/scalar_unit.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1scalar__unit_1af1e3a220f55d66f5bb27ab6dfa84c632" prot="protected" static="no" mutable="no">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::scalar_unit::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>scifir::scalar_unit::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="204" column="7" bodyfile="units/scalar_unit.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a8ecd0310f82a51bfcc87b2aa892375b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::scalar_unit</definition>
        <argsstring>()</argsstring>
        <name>scalar_unit</name>
        <qualifiedname>scifir::scalar_unit::scalar_unit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="81" column="1" bodyfile="units/scalar_unit.cpp" bodystart="23" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1ab89b028a2e344c1cd62b1cb49ff7a92c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::scalar_unit</definition>
        <argsstring>(const scalar_unit &amp;x)</argsstring>
        <name>scalar_unit</name>
        <qualifiedname>scifir::scalar_unit::scalar_unit</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="82" column="1" bodyfile="units/scalar_unit.cpp" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a2c60c79ed8b911b51f1b3431a102cda5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::scalar_unit</definition>
        <argsstring>(scalar_unit &amp;&amp;x)</argsstring>
        <name>scalar_unit</name>
        <qualifiedname>scifir::scalar_unit::scalar_unit</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="83" column="1" bodyfile="units/scalar_unit.cpp" bodystart="29" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a6534c793900bb3d3ec7d7df6c6e620b6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::scalar_unit</definition>
        <argsstring>(float new_value, const string &amp;init_dimensions)</argsstring>
        <name>scalar_unit</name>
        <qualifiedname>scifir::scalar_unit::scalar_unit</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="84" column="10" bodyfile="units/scalar_unit.cpp" bodystart="32" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a3ec66e006930ee8ecf3510fed0ced5f5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::scalar_unit</definition>
        <argsstring>(double new_value, const string &amp;init_dimensions)</argsstring>
        <name>scalar_unit</name>
        <qualifiedname>scifir::scalar_unit::scalar_unit</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="85" column="10" bodyfile="units/scalar_unit.cpp" bodystart="35" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a04e818cc54fc33342d62aba88da198c2" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::scalar_unit</definition>
        <argsstring>(long double new_value, const string &amp;init_dimensions)</argsstring>
        <name>scalar_unit</name>
        <qualifiedname>scifir::scalar_unit::scalar_unit</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="86" column="10" bodyfile="units/scalar_unit.cpp" bodystart="38" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a91f7f7d47084e468fdee9440ab51cf1e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::scalar_unit</definition>
        <argsstring>(int new_value, const string &amp;init_dimensions)</argsstring>
        <name>scalar_unit</name>
        <qualifiedname>scifir::scalar_unit::scalar_unit</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="87" column="10" bodyfile="units/scalar_unit.cpp" bodystart="41" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a7859b5685704328c9e876fba89c69c20" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::scalar_unit</definition>
        <argsstring>(float new_value, const vector&lt; dimension &gt; &amp;new_dimensions)</argsstring>
        <name>scalar_unit</name>
        <qualifiedname>scifir::scalar_unit::scalar_unit</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="88" column="10" bodyfile="units/scalar_unit.cpp" bodystart="44" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a22622caa696487e08ccb2fa9e0f64107" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::scalar_unit</definition>
        <argsstring>(double new_value, const vector&lt; dimension &gt; &amp;new_dimensions)</argsstring>
        <name>scalar_unit</name>
        <qualifiedname>scifir::scalar_unit::scalar_unit</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="89" column="10" bodyfile="units/scalar_unit.cpp" bodystart="47" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a7487c672fd9d31f08abb3d7d7c2b3f18" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::scalar_unit</definition>
        <argsstring>(long double new_value, const vector&lt; dimension &gt; &amp;new_dimensions)</argsstring>
        <name>scalar_unit</name>
        <qualifiedname>scifir::scalar_unit::scalar_unit</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="90" column="10" bodyfile="units/scalar_unit.cpp" bodystart="50" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a8a22b2fe2afa56d71d72cfd6f462f343" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::scalar_unit</definition>
        <argsstring>(int new_value, const vector&lt; dimension &gt; &amp;new_dimensions)</argsstring>
        <name>scalar_unit</name>
        <qualifiedname>scifir::scalar_unit::scalar_unit</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="91" column="10" bodyfile="units/scalar_unit.cpp" bodystart="53" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a8805acbb0e474f299ae077862cc312e7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::scalar_unit</definition>
        <argsstring>(const string &amp;init_scalar)</argsstring>
        <name>scalar_unit</name>
        <qualifiedname>scifir::scalar_unit::scalar_unit</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="92" column="10" bodyfile="units/scalar_unit.cpp" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1ae804368b4e6c4940e39f170dfe2a5c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
        <definition>scalar_unit &amp; scifir::scalar_unit::operator=</definition>
        <argsstring>(const scalar_unit &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::scalar_unit::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="94" column="13" bodyfile="units/scalar_unit.cpp" bodystart="62" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1ad2bc7e9f7e79b73a76431a36ba71e306" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
        <definition>scalar_unit &amp; scifir::scalar_unit::operator=</definition>
        <argsstring>(scalar_unit &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::scalar_unit::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="95" column="13" bodyfile="units/scalar_unit.cpp" bodystart="76" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1aca18144b1b0f365519f09fb4ae49f4dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
        <definition>scalar_unit &amp; scifir::scalar_unit::operator=</definition>
        <argsstring>(const string &amp;init_scalar)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::scalar_unit::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="96" column="13" bodyfile="units/scalar_unit.cpp" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1acab38ee2d23c051283285f08b9cac2c1" prot="public" static="no" const="yes" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::scalar_unit::operator float</definition>
        <argsstring>() const</argsstring>
        <name>operator float</name>
        <qualifiedname>scifir::scalar_unit::operator float</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="98" column="10" bodyfile="units/scalar_unit.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a77abc5702f3e6a0df005a4a12d281b05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
        <definition>bool scifir::scalar_unit::operator==</definition>
        <argsstring>(scalar_unit x) const</argsstring>
        <name>operator==</name>
        <qualifiedname>scifir::scalar_unit::operator==</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="100" column="6" bodyfile="units/scalar_unit.cpp" bodystart="101" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1af34f5d9608d82039cb118a45c7adbdd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::scalar_unit::operator+</definition>
        <argsstring>(scalar_unit x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::scalar_unit::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="102" column="13" bodyfile="units/scalar_unit.cpp" bodystart="114" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1aaa86f3d182021b17b880b404e075ff4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::scalar_unit::operator-</definition>
        <argsstring>(scalar_unit x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::scalar_unit::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="103" column="13" bodyfile="units/scalar_unit.cpp" bodystart="130" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a329d34994d4acf60210c6d794f70653e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::scalar_unit::operator*</definition>
        <argsstring>(scalar_unit x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::scalar_unit::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="104" column="13" bodyfile="units/scalar_unit.cpp" bodystart="146" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a0f5687f5407c49376f8139286fb8108c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::scalar_unit::operator/</definition>
        <argsstring>(scalar_unit x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::scalar_unit::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="105" column="13" bodyfile="units/scalar_unit.cpp" bodystart="154" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a1b7f556e2280f4dda3de379c46a7db5a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::scalar_unit::operator^</definition>
        <argsstring>(const scalar_unit &amp;x) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::scalar_unit::operator^</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="106" column="13" bodyfile="units/scalar_unit.cpp" bodystart="162" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a3c5b90d093e8cd6c15fe32fd6f9aa77f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::scalar_unit::operator+=</definition>
        <argsstring>(scalar_unit x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::scalar_unit::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="107" column="6" bodyfile="units/scalar_unit.cpp" bodystart="175" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1ae22b4b57bbb6ab2ac8173c1cf5f7a5e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::scalar_unit::operator-=</definition>
        <argsstring>(scalar_unit x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::scalar_unit::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="108" column="6" bodyfile="units/scalar_unit.cpp" bodystart="186" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a3a646369c40d046343636e69cac739fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::scalar_unit::operator+</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::scalar_unit::operator+</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="111" column="13" bodyfile="units/scalar_unit.hpp" bodystart="111" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a3b4775b30dd9e07d022dd691135e98ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::scalar_unit::operator-</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::scalar_unit::operator-</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="119" column="13" bodyfile="units/scalar_unit.hpp" bodystart="119" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a41d09ddac49e6c3c783468cc387681af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::scalar_unit::operator*</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::scalar_unit::operator*</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="127" column="13" bodyfile="units/scalar_unit.hpp" bodystart="127" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a6c7befde1f4bb1ed08817dff3adb13f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::scalar_unit::operator/</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::scalar_unit::operator/</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="135" column="13" bodyfile="units/scalar_unit.hpp" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a53c5f6d3f946b7361ff19b4aacad4b65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__integer__number" kindref="compound">is_integer_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::scalar_unit::operator^</definition>
        <argsstring>(T y) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::scalar_unit::operator^</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="143" column="13" bodyfile="units/scalar_unit.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1ab92fdf13cdd566edb88804d6abf4894c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::scalar_unit::operator+=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::scalar_unit::operator+=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="149" column="6" bodyfile="units/scalar_unit.hpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a337edf5896b9f05abde7fe8bcd71588c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::scalar_unit::operator-=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::scalar_unit::operator-=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="155" column="6" bodyfile="units/scalar_unit.hpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1aa3d5f3ab5a33da028a7a4ca6126ac018" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::scalar_unit::operator*=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::scalar_unit::operator*=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="161" column="6" bodyfile="units/scalar_unit.hpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1afa7f6d6fbb4f94882e976cc569b1d62b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::scalar_unit::operator/=</definition>
        <argsstring>(T y)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::scalar_unit::operator/=</qualifiedname>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="167" column="6" bodyfile="units/scalar_unit.hpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1af36b7d319844aad7f838a71aced338f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
        <definition>scalar_unit &amp; scifir::scalar_unit::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <qualifiedname>scifir::scalar_unit::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="172" column="13" bodyfile="units/scalar_unit.cpp" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1ad4a110c3c13cf37db7329e70266a4ed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
        <definition>scalar_unit &amp; scifir::scalar_unit::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <qualifiedname>scifir::scalar_unit::operator++</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="173" column="13" bodyfile="units/scalar_unit.cpp" bodystart="203" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a180b89f1bb61a2d38175f2ceb408632d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
        <definition>scalar_unit &amp; scifir::scalar_unit::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <qualifiedname>scifir::scalar_unit::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="174" column="13" bodyfile="units/scalar_unit.cpp" bodystart="210" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a1b069d8e8f353795ff9ea007ae7399eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
        <definition>scalar_unit &amp; scifir::scalar_unit::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <qualifiedname>scifir::scalar_unit::operator--</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="175" column="13" bodyfile="units/scalar_unit.cpp" bodystart="216" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a994687b147289403e4a993344f768e64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::scalar_unit::change_dimensions</definition>
        <argsstring>(const string &amp;init_dimensions)</argsstring>
        <name>change_dimensions</name>
        <qualifiedname>scifir::scalar_unit::change_dimensions</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="177" column="6" bodyfile="units/scalar_unit.cpp" bodystart="223" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1ae7d76f1d37b44e675d5ba313c9d95fb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::scalar_unit::change_dimensions</definition>
        <argsstring>(const scalar_unit &amp;x)</argsstring>
        <name>change_dimensions</name>
        <qualifiedname>scifir::scalar_unit::change_dimensions</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="178" column="6" bodyfile="units/scalar_unit.cpp" bodystart="265" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1ad65df774f292c9a466e6f44127c1485c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
        <definition>bool scifir::scalar_unit::has_dimensions</definition>
        <argsstring>(const string &amp;init_dimensions) const</argsstring>
        <name>has_dimensions</name>
        <qualifiedname>scifir::scalar_unit::has_dimensions</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="179" column="6" bodyfile="units/scalar_unit.cpp" bodystart="306" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a5d88ebeac2c66b3fbaff69a5a8aeb387" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
        <definition>bool scifir::scalar_unit::has_dimensions</definition>
        <argsstring>(const vector&lt; dimension &gt; &amp;x_dimensions) const</argsstring>
        <name>has_dimensions</name>
        <qualifiedname>scifir::scalar_unit::has_dimensions</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>x_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="180" column="6" bodyfile="units/scalar_unit.cpp" bodystart="312" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a7edbf723398b8acd1a84669b1c3be30c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
        <definition>bool scifir::scalar_unit::has_dimensions</definition>
        <argsstring>(const scalar_unit &amp;x) const</argsstring>
        <name>has_dimensions</name>
        <qualifiedname>scifir::scalar_unit::has_dimensions</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="181" column="6" bodyfile="units/scalar_unit.cpp" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1ae4b941ec3823e325a9d7290a56d4c226" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
        <definition>bool scifir::scalar_unit::has_empty_dimensions</definition>
        <argsstring>() const</argsstring>
        <name>has_empty_dimensions</name>
        <qualifiedname>scifir::scalar_unit::has_empty_dimensions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="182" column="6" bodyfile="units/scalar_unit.cpp" bodystart="322" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a8c84a2ee69d730d6667b7103396730bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::scalar_unit::display_dimensions</definition>
        <argsstring>() const</argsstring>
        <name>display_dimensions</name>
        <qualifiedname>scifir::scalar_unit::display_dimensions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="183" column="8" bodyfile="units/scalar_unit.cpp" bodystart="335" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a49a18cc0d9347e017f2d13f1ce97889b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt;</type>
        <definition>vector&lt; dimension &gt; scifir::scalar_unit::get_derived_dimensions</definition>
        <argsstring>() const</argsstring>
        <name>get_derived_dimensions</name>
        <qualifiedname>scifir::scalar_unit::get_derived_dimensions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="186" column="8" bodyfile="units/scalar_unit.cpp" bodystart="345" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1ac7a640edca2e933bc19a6194cb522204" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
        <definition>const vector&lt; dimension &gt; &amp; scifir::scalar_unit::get_dimensions</definition>
        <argsstring>() const</argsstring>
        <name>get_dimensions</name>
        <qualifiedname>scifir::scalar_unit::get_dimensions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="188" column="21" bodyfile="units/scalar_unit.hpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1aef86fe20676b9a14120270e6bb6c49b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
        <definition>const float &amp; scifir::scalar_unit::get_value</definition>
        <argsstring>() const</argsstring>
        <name>get_value</name>
        <qualifiedname>scifir::scalar_unit::get_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="193" column="20" bodyfile="units/scalar_unit.hpp" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a5da2eba7a064be5ac532d36e2aeb865d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::scalar_unit::display</definition>
        <argsstring>(int number_of_decimals=2, bool with_brackets=false, bool use_close_prefix=false) const</argsstring>
        <name>display</name>
        <qualifiedname>scifir::scalar_unit::display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
          <declname>with_brackets</declname>
          <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">false</ref></defval>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
          <declname>use_close_prefix</declname>
          <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">false</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="198" column="8" bodyfile="units/scalar_unit.cpp" bodystart="350" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1aa19d314f836ae7cc5a5d55611e56e01a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::scalar_unit::derived_display</definition>
        <argsstring>(int number_of_decimals=2, bool with_brackets=false, bool use_close_prefix=false) const</argsstring>
        <name>derived_display</name>
        <qualifiedname>scifir::scalar_unit::derived_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
          <declname>with_brackets</declname>
          <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">false</ref></defval>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
          <declname>use_close_prefix</declname>
          <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">false</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="199" column="8" bodyfile="units/scalar_unit.cpp" bodystart="379" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a8530221b5e65bda1fcd706c571de15f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::scalar_unit::custom_display</definition>
        <argsstring>(const string &amp;init_dimensions, int number_of_decimals=2, bool with_brackets=false) const</argsstring>
        <name>custom_display</name>
        <qualifiedname>scifir::scalar_unit::custom_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
          <declname>with_brackets</declname>
          <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">false</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="200" column="8" bodyfile="units/scalar_unit.cpp" bodystart="401" bodyend="472"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a0fe440745fb805824daf53e9ae66e810" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::scalar_unit::add_dimension</definition>
        <argsstring>(const dimension &amp;new_dimension)</argsstring>
        <name>add_dimension</name>
        <qualifiedname>scifir::scalar_unit::add_dimension</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &amp;</type>
          <declname>new_dimension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="206" column="6" bodyfile="units/scalar_unit.cpp" bodystart="474" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a1d9a11f3d4c951cb55917288767d3feb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::scalar_unit::remove_dimension</definition>
        <argsstring>(const dimension &amp;old_dimension)</argsstring>
        <name>remove_dimension</name>
        <qualifiedname>scifir::scalar_unit::remove_dimension</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &amp;</type>
          <declname>old_dimension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="207" column="6" bodyfile="units/scalar_unit.cpp" bodystart="488" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1scalar__unit_1a384a954bbef22c559d213179142cc687" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::scalar_unit::initialize_from_string</definition>
        <argsstring>(string init_scalar)</argsstring>
        <name>initialize_from_string</name>
        <qualifiedname>scifir::scalar_unit::initialize_from_string</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
          <declname>init_scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/scalar_unit.hpp" line="208" column="6" bodyfile="units/scalar_unit.cpp" bodystart="502" bodyend="535"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>scifir::scalar_unit</label>
        <link refid="classscifir_1_1scalar__unit"/>
      </node>
      <node id="2">
        <label>scifir::vector_unit_2d</label>
        <link refid="classscifir_1_1vector__unit__2d"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>scifir::vector_unit_3d</label>
        <link refid="classscifir_1_1vector__unit__3d"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>scifir::vector_unit_nd</label>
        <link refid="classscifir_1_1vector__unit__nd"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="units/scalar_unit.hpp" line="78" column="1" bodyfile="units/scalar_unit.hpp" bodystart="79" bodyend="209"/>
    <listofallmembers>
      <member refid="classscifir_1_1scalar__unit_1a0fe440745fb805824daf53e9ae66e810" prot="protected" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>add_dimension</name></member>
      <member refid="classscifir_1_1scalar__unit_1a994687b147289403e4a993344f768e64" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>change_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1ae7d76f1d37b44e675d5ba313c9d95fb8" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>change_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8530221b5e65bda1fcd706c571de15f5" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>custom_display</name></member>
      <member refid="classscifir_1_1scalar__unit_1aa19d314f836ae7cc5a5d55611e56e01a" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>derived_display</name></member>
      <member refid="classscifir_1_1scalar__unit_1a47854a88ee4cacf7099c756e111b198d" prot="protected" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a5da2eba7a064be5ac532d36e2aeb865d" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>display</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8c84a2ee69d730d6667b7103396730bd" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>display_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a49a18cc0d9347e017f2d13f1ce97889b" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>get_derived_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1ac7a640edca2e933bc19a6194cb522204" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>get_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1aef86fe20676b9a14120270e6bb6c49b1" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>get_value</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad65df774f292c9a466e6f44127c1485c" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a5d88ebeac2c66b3fbaff69a5a8aeb387" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a7edbf723398b8acd1a84669b1c3be30c" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1ae4b941ec3823e325a9d7290a56d4c226" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>has_empty_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a384a954bbef22c559d213179142cc687" prot="protected" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>initialize_from_string</name></member>
      <member refid="classscifir_1_1scalar__unit_1acab38ee2d23c051283285f08b9cac2c1" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator float</name></member>
      <member refid="classscifir_1_1scalar__unit_1a329d34994d4acf60210c6d794f70653e" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator*</name></member>
      <member refid="classscifir_1_1scalar__unit_1a41d09ddac49e6c3c783468cc387681af" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator*</name></member>
      <member refid="classscifir_1_1scalar__unit_1aa3d5f3ab5a33da028a7a4ca6126ac018" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1scalar__unit_1af34f5d9608d82039cb118a45c7adbdd4" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1a3a646369c40d046343636e69cac739fc" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1af36b7d319844aad7f838a71aced338f4" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator++</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad4a110c3c13cf37db7329e70266a4ed7" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator++</name></member>
      <member refid="classscifir_1_1scalar__unit_1a3c5b90d093e8cd6c15fe32fd6f9aa77f" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1scalar__unit_1ab92fdf13cdd566edb88804d6abf4894c" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1scalar__unit_1aaa86f3d182021b17b880b404e075ff4f" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a3b4775b30dd9e07d022dd691135e98ed" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a180b89f1bb61a2d38175f2ceb408632d" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator--</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1b069d8e8f353795ff9ea007ae7399eb" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator--</name></member>
      <member refid="classscifir_1_1scalar__unit_1ae22b4b57bbb6ab2ac8173c1cf5f7a5e1" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a337edf5896b9f05abde7fe8bcd71588c" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a0f5687f5407c49376f8139286fb8108c" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator/</name></member>
      <member refid="classscifir_1_1scalar__unit_1a6c7befde1f4bb1ed08817dff3adb13f7" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator/</name></member>
      <member refid="classscifir_1_1scalar__unit_1afa7f6d6fbb4f94882e976cc569b1d62b" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1scalar__unit_1ae804368b4e6c4940e39f170dfe2a5c52" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator=</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad2bc7e9f7e79b73a76431a36ba71e306" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator=</name></member>
      <member refid="classscifir_1_1scalar__unit_1aca18144b1b0f365519f09fb4ae49f4dc" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a77abc5702f3e6a0df005a4a12d281b05" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator==</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1b7f556e2280f4dda3de379c46a7db5a" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator^</name></member>
      <member refid="classscifir_1_1scalar__unit_1a53c5f6d3f946b7361ff19b4aacad4b65" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>operator^</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1d9a11f3d4c951cb55917288767d3feb" prot="protected" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>remove_dimension</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8ecd0310f82a51bfcc87b2aa892375b9" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1ab89b028a2e344c1cd62b1cb49ff7a92c" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a2c60c79ed8b911b51f1b3431a102cda5" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a6534c793900bb3d3ec7d7df6c6e620b6" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a3ec66e006930ee8ecf3510fed0ced5f5" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a04e818cc54fc33342d62aba88da198c2" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a91f7f7d47084e468fdee9440ab51cf1e" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a7859b5685704328c9e876fba89c69c20" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a22622caa696487e08ccb2fa9e0f64107" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a7487c672fd9d31f08abb3d7d7c2b3f18" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8a22b2fe2afa56d71d72cfd6f462f343" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8805acbb0e474f299ae077862cc312e7" prot="public" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1af1e3a220f55d66f5bb27ab6dfa84c632" prot="protected" virt="non-virtual"><scope>scifir::scalar_unit</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
