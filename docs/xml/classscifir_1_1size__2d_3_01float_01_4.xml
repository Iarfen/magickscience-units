<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classscifir_1_1size__2d_3_01float_01_4" kind="class" language="C++" prot="public">
    <compoundname>scifir::size_2d&lt; float &gt;</compoundname>
    <includes refid="size__2d_8hpp" local="no">size_2d.hpp</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1size__2d_3_01float_01_4_1a3299c67a6733aa8db5677db8bd32dbc5" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float scifir::size_2d&lt; float &gt;::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="189" column="7" bodyfile="special_units/size_2d.hpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1size__2d_3_01float_01_4_1aed2eff6718ded25e7f47a7c661e20cbe" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float scifir::size_2d&lt; float &gt;::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="190" column="7" bodyfile="special_units/size_2d.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1ad51a19ccdae89657f4878407ab943957" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_2d&lt; float &gt;::size_2d</definition>
        <argsstring>()</argsstring>
        <name>size_2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="115" column="1" bodyfile="special_units/size_2d.hpp" bodystart="115" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1ad3565a42058aa54124c2cb9c71ae0a78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_2d&lt; float &gt;::size_2d</definition>
        <argsstring>(const size_2d&lt; float &gt; &amp;x)</argsstring>
        <name>size_2d</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="118" column="1" bodyfile="special_units/size_2d.hpp" bodystart="118" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1afcd88351f402ad03813323f9c8e9dce1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_2d&lt; float &gt;::size_2d</definition>
        <argsstring>(size_2d&lt; float &gt; &amp;&amp;x)</argsstring>
        <name>size_2d</name>
        <param>
          <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="121" column="1" bodyfile="special_units/size_2d.hpp" bodystart="121" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1a0b2f9c5f62dd9019511bccf6bcb57e25" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_2d&lt; float &gt;::size_2d</definition>
        <argsstring>(const float &amp;new_width, const float &amp;new_height)</argsstring>
        <name>size_2d</name>
        <param>
          <type>const float &amp;</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>new_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="124" column="10" bodyfile="special_units/size_2d.hpp" bodystart="124" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1ad9cd9628c1d7920d0276b51b9c9db1d0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_2d&lt; float &gt;::size_2d</definition>
        <argsstring>(const string &amp;new_width, const string &amp;new_height)</argsstring>
        <name>size_2d</name>
        <param>
          <type>const string &amp;</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>new_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="127" column="10" bodyfile="special_units/size_2d.hpp" bodystart="127" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1af9c0e4c04034bbabda40ea360aa08e7d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_2d&lt; float &gt;::size_2d</definition>
        <argsstring>(const string &amp;init_size_2d)</argsstring>
        <name>size_2d</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_size_2d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="130" column="10" bodyfile="special_units/size_2d.hpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1a007c7757d12ab8729eaf11d6c634fb2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt; &amp;</type>
        <definition>size_2d&lt;float&gt;&amp; scifir::size_2d&lt; float &gt;::operator=</definition>
        <argsstring>(const size_2d&lt; float &gt; &amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="135" column="9" bodyfile="special_units/size_2d.hpp" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1a9ce7d7eeb783e957b69e380581b903b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt; &amp;</type>
        <definition>size_2d&lt;float&gt;&amp; scifir::size_2d&lt; float &gt;::operator=</definition>
        <argsstring>(size_2d&lt; float &gt; &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="142" column="9" bodyfile="special_units/size_2d.hpp" bodystart="142" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1abf5fc3427e8cd68fed29e2acf9b857d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt; &amp;</type>
        <definition>size_2d&lt;float&gt;&amp; scifir::size_2d&lt; float &gt;::operator=</definition>
        <argsstring>(const string &amp;init_size_2d)</argsstring>
        <name>operator=</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_size_2d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="149" column="9" bodyfile="special_units/size_2d.hpp" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1af4b9333f22815a0dfb49c08c468a36ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt;</type>
        <definition>size_2d&lt;float&gt; scifir::size_2d&lt; float &gt;::operator+</definition>
        <argsstring>(const size_2d&lt; float &gt; &amp;x) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="155" column="9" bodyfile="special_units/size_2d.hpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1a8af4f1d0b7a724b0717d8ea17b34e983" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt;</type>
        <definition>size_2d&lt;float&gt; scifir::size_2d&lt; float &gt;::operator-</definition>
        <argsstring>(const size_2d&lt; float &gt; &amp;x) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="160" column="9" bodyfile="special_units/size_2d.hpp" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1a12cfc533344e57993dce5bdf1f8eb7e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::size_2d&lt; float &gt;::operator+=</definition>
        <argsstring>(const size_2d&lt; float &gt; &amp;x)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="165" column="6" bodyfile="special_units/size_2d.hpp" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1a4e2499c76367aa3e1fd22841eba8a6ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::size_2d&lt; float &gt;::operator-=</definition>
        <argsstring>(const size_2d&lt; float &gt; &amp;x)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__2d" kindref="compound">size_2d</ref>&lt; float &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="171" column="6" bodyfile="special_units/size_2d.hpp" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1ad9eb3ae714ce65671070656c6cbe5d14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float scifir::size_2d&lt; float &gt;::get_area</definition>
        <argsstring>() const</argsstring>
        <name>get_area</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="177" column="7" bodyfile="special_units/size_2d.hpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1a1c43a9ad6a241b8df1a10c70d1ca9031" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string scifir::size_2d&lt; float &gt;::display</definition>
        <argsstring>() const</argsstring>
        <name>display</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="182" column="8" bodyfile="special_units/size_2d.hpp" bodystart="182" bodyend="187"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classscifir_1_1size__2d_3_01float_01_4_1a08c6bf183aed9cf06cbd5758d382e78b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::size_2d&lt; float &gt;::initialize_from_string</definition>
        <argsstring>(const string &amp;init_size_2d)</argsstring>
        <name>initialize_from_string</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_size_2d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_2d.hpp" line="193" column="6" bodyfile="special_units/size_2d.hpp" bodystart="193" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="special_units/size_2d.hpp" line="112" column="1" bodyfile="special_units/size_2d.hpp" bodystart="113" bodyend="205"/>
    <listofallmembers>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1a1c43a9ad6a241b8df1a10c70d1ca9031" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>display</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1ad9eb3ae714ce65671070656c6cbe5d14" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>get_area</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1aed2eff6718ded25e7f47a7c661e20cbe" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>height</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1a08c6bf183aed9cf06cbd5758d382e78b" prot="private" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>initialize_from_string</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1af4b9333f22815a0dfb49c08c468a36ae" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>operator+</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1a12cfc533344e57993dce5bdf1f8eb7e2" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1a8af4f1d0b7a724b0717d8ea17b34e983" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>operator-</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1a4e2499c76367aa3e1fd22841eba8a6ff" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1a007c7757d12ab8729eaf11d6c634fb2b" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1a9ce7d7eeb783e957b69e380581b903b7" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1abf5fc3427e8cd68fed29e2acf9b857d2" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1ad51a19ccdae89657f4878407ab943957" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>size_2d</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1ad3565a42058aa54124c2cb9c71ae0a78" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>size_2d</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1afcd88351f402ad03813323f9c8e9dce1" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>size_2d</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1a0b2f9c5f62dd9019511bccf6bcb57e25" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>size_2d</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1ad9cd9628c1d7920d0276b51b9c9db1d0" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>size_2d</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1af9c0e4c04034bbabda40ea360aa08e7d" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>size_2d</name></member>
      <member refid="classscifir_1_1size__2d_3_01float_01_4_1a3299c67a6733aa8db5677db8bd32dbc5" prot="public" virt="non-virtual"><scope>scifir::size_2d&lt; float &gt;</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
