<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classscifir_1_1size__3d" kind="class" language="C++" prot="public">
    <compoundname>scifir::size_3d</compoundname>
    <includes refid="size__3d_8hpp" local="no">size_3d.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
        <defval>length</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1size__3d_1a00374fdae1c845643e428ca3db9390eb" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::size_3d&lt; T &gt;::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="97" column="3" bodyfile="special_units/size_3d.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1size__3d_1a6b24e8c1c5d4b97028d83708a0236349" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::size_3d&lt; T &gt;::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="98" column="3" bodyfile="special_units/size_3d.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1size__3d_1adc948753e8017b454d878cc6b59466d7" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::size_3d&lt; T &gt;::depth</definition>
        <argsstring></argsstring>
        <name>depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="99" column="3" bodyfile="special_units/size_3d.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1size__3d_1a203226ede3f032f59fa077e3d62145ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; T &gt;::size_3d</definition>
        <argsstring>()</argsstring>
        <name>size_3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="19" column="1" bodyfile="special_units/size_3d.hpp" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a8b4d091f0e15f510c3542dbfe43a4b08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; T &gt;::size_3d</definition>
        <argsstring>(const size_3d&lt; T &gt; &amp;x)</argsstring>
        <name>size_3d</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="22" column="1" bodyfile="special_units/size_3d.hpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1ab7b5c855243567515aad306f0696d4c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; T &gt;::size_3d</definition>
        <argsstring>(size_3d&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>size_3d</name>
        <param>
          <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="25" column="1" bodyfile="special_units/size_3d.hpp" bodystart="25" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a342c29fa2eba3ff9769107bc2f9b7143" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; T &gt;::size_3d</definition>
        <argsstring>(const T &amp;new_width, const T &amp;new_height, const T &amp;new_depth)</argsstring>
        <name>size_3d</name>
        <param>
          <type>const T &amp;</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>new_height</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>new_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="28" column="10" bodyfile="special_units/size_3d.hpp" bodystart="28" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1aa2869e0ab5bf6135a0596582b7e2dbc9" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; T &gt;::size_3d</definition>
        <argsstring>(const string &amp;new_width, const string &amp;new_height, const string &amp;new_depth)</argsstring>
        <name>size_3d</name>
        <param>
          <type>const string &amp;</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>new_height</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>new_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="31" column="10" bodyfile="special_units/size_3d.hpp" bodystart="31" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a16c224393337c845db0cc897aeab4518" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; T &gt;::size_3d</definition>
        <argsstring>(const string &amp;init_size_3d)</argsstring>
        <name>size_3d</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_size_3d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="34" column="10" bodyfile="special_units/size_3d.hpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a46d0ddfccf708903e86c2451c3da0a69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
        <definition>size_3d&lt;T&gt;&amp; scifir::size_3d&lt; T &gt;::operator=</definition>
        <argsstring>(const size_3d&lt; T &gt; &amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="39" column="9" bodyfile="special_units/size_3d.hpp" bodystart="39" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a5556b70bf199a26cd02e5c172e5520d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
        <definition>size_3d&lt;T&gt;&amp; scifir::size_3d&lt; T &gt;::operator=</definition>
        <argsstring>(size_3d&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="47" column="9" bodyfile="special_units/size_3d.hpp" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a3df5f22dce67caa88cde8844663720c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
        <definition>size_3d&lt;T&gt;&amp; scifir::size_3d&lt; T &gt;::operator=</definition>
        <argsstring>(const string &amp;init_size_3d)</argsstring>
        <name>operator=</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_size_3d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="55" column="9" bodyfile="special_units/size_3d.hpp" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a4a21cf4cceed534f3f418fd6365fc0d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt;</type>
        <definition>size_3d&lt;T&gt; scifir::size_3d&lt; T &gt;::operator+</definition>
        <argsstring>(const size_3d&lt; T &gt; &amp;x) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="61" column="9" bodyfile="special_units/size_3d.hpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1ac7ebb7c805519069c42533d9c43cc435" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt;</type>
        <definition>size_3d&lt;T&gt; scifir::size_3d&lt; T &gt;::operator-</definition>
        <argsstring>(const size_3d&lt; T &gt; &amp;x) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="66" column="9" bodyfile="special_units/size_3d.hpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1ada390e320ba19c5fdad921ebb4240a06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::size_3d&lt; T &gt;::operator+=</definition>
        <argsstring>(const size_3d&lt; T &gt; &amp;x)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="71" column="6" bodyfile="special_units/size_3d.hpp" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a83e9e06987837b70e62dc5720a2956d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::size_3d&lt; T &gt;::operator-=</definition>
        <argsstring>(const size_3d&lt; T &gt; &amp;x)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="78" column="6" bodyfile="special_units/size_3d.hpp" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a29ff12f1198e9457bf02dbb848db6edb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::size_3d&lt; T &gt;::get_volume</definition>
        <argsstring>() const</argsstring>
        <name>get_volume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="85" column="13" bodyfile="special_units/size_3d.hpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a6a2ee372c452eb7ba4e7e5cbac1e0d50" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string scifir::size_3d&lt; T &gt;::display</definition>
        <argsstring>() const</argsstring>
        <name>display</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="90" column="8" bodyfile="special_units/size_3d.hpp" bodystart="90" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classscifir_1_1size__3d_1a51bd4f309b9af74e07d691a244a38c8f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::size_3d&lt; T &gt;::initialize_from_string</definition>
        <argsstring>(const string &amp;init_size_3d)</argsstring>
        <name>initialize_from_string</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_size_3d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="102" column="6" bodyfile="special_units/size_3d.hpp" bodystart="102" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="special_units/size_3d.hpp" line="16" column="1" bodyfile="special_units/size_3d.hpp" bodystart="17" bodyend="116"/>
    <listofallmembers>
      <member refid="classscifir_1_1size__3d_1adc948753e8017b454d878cc6b59466d7" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>depth</name></member>
      <member refid="classscifir_1_1size__3d_1a6a2ee372c452eb7ba4e7e5cbac1e0d50" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>display</name></member>
      <member refid="classscifir_1_1size__3d_1a29ff12f1198e9457bf02dbb848db6edb" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>get_volume</name></member>
      <member refid="classscifir_1_1size__3d_1a6b24e8c1c5d4b97028d83708a0236349" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>height</name></member>
      <member refid="classscifir_1_1size__3d_1a51bd4f309b9af74e07d691a244a38c8f" prot="private" virt="non-virtual"><scope>scifir::size_3d</scope><name>initialize_from_string</name></member>
      <member refid="classscifir_1_1size__3d_1a4a21cf4cceed534f3f418fd6365fc0d1" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator+</name></member>
      <member refid="classscifir_1_1size__3d_1ada390e320ba19c5fdad921ebb4240a06" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1size__3d_1ac7ebb7c805519069c42533d9c43cc435" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator-</name></member>
      <member refid="classscifir_1_1size__3d_1a83e9e06987837b70e62dc5720a2956d7" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1size__3d_1a46d0ddfccf708903e86c2451c3da0a69" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__3d_1a5556b70bf199a26cd02e5c172e5520d8" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__3d_1a3df5f22dce67caa88cde8844663720c6" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__3d_1a203226ede3f032f59fa077e3d62145ab" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_1a8b4d091f0e15f510c3542dbfe43a4b08" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_1ab7b5c855243567515aad306f0696d4c7" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_1a342c29fa2eba3ff9769107bc2f9b7143" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_1aa2869e0ab5bf6135a0596582b7e2dbc9" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_1a16c224393337c845db0cc897aeab4518" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_1a00374fdae1c845643e428ca3db9390eb" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
