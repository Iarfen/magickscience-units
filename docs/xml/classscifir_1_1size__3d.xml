<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1size__3d" kind="class" language="C++" prot="public">
    <compoundname>scifir::size_3d</compoundname>
    <templateparamlist>
      <param>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
        <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">length</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1size__3d_1a00374fdae1c845643e428ca3db9390eb" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::size_3d&lt; T &gt;::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <qualifiedname>scifir::size_3d::width</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="93" column="3" bodyfile="special_units/size_3d.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1size__3d_1a6b24e8c1c5d4b97028d83708a0236349" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::size_3d&lt; T &gt;::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <qualifiedname>scifir::size_3d::height</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="94" column="3" bodyfile="special_units/size_3d.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1size__3d_1adc948753e8017b454d878cc6b59466d7" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T scifir::size_3d&lt; T &gt;::depth</definition>
        <argsstring></argsstring>
        <name>depth</name>
        <qualifiedname>scifir::size_3d::depth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="95" column="3" bodyfile="special_units/size_3d.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1size__3d_1a203226ede3f032f59fa077e3d62145ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; T &gt;::size_3d</definition>
        <argsstring>()</argsstring>
        <name>size_3d</name>
        <qualifiedname>scifir::size_3d::size_3d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="18" column="1" bodyfile="special_units/size_3d.hpp" bodystart="18" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a8b4d091f0e15f510c3542dbfe43a4b08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; T &gt;::size_3d</definition>
        <argsstring>(const size_3d&lt; T &gt; &amp;x)</argsstring>
        <name>size_3d</name>
        <qualifiedname>scifir::size_3d::size_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="21" column="1" bodyfile="special_units/size_3d.hpp" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1ab7b5c855243567515aad306f0696d4c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; T &gt;::size_3d</definition>
        <argsstring>(size_3d&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>size_3d</name>
        <qualifiedname>scifir::size_3d::size_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="24" column="1" bodyfile="special_units/size_3d.hpp" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a342c29fa2eba3ff9769107bc2f9b7143" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; T &gt;::size_3d</definition>
        <argsstring>(const T &amp;new_width, const T &amp;new_height, const T &amp;new_depth)</argsstring>
        <name>size_3d</name>
        <qualifiedname>scifir::size_3d::size_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_height</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> T &amp;</type>
          <declname>new_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="27" column="10" bodyfile="special_units/size_3d.hpp" bodystart="27" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1aa2869e0ab5bf6135a0596582b7e2dbc9" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; T &gt;::size_3d</definition>
        <argsstring>(const string &amp;new_width, const string &amp;new_height, const string &amp;new_depth)</argsstring>
        <name>size_3d</name>
        <qualifiedname>scifir::size_3d::size_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_height</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="30" column="10" bodyfile="special_units/size_3d.hpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a16c224393337c845db0cc897aeab4518" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; T &gt;::size_3d</definition>
        <argsstring>(const string &amp;init_size_3d)</argsstring>
        <name>size_3d</name>
        <qualifiedname>scifir::size_3d::size_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_size_3d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="33" column="10" bodyfile="special_units/size_3d.hpp" bodystart="33" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a98f8bc0fa68dd84e1be98e72df756a9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
        <definition>size_3d&lt; T &gt; &amp; scifir::size_3d&lt; T &gt;::operator=</definition>
        <argsstring>(const size_3d&lt; T &gt; &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::size_3d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="48" column="9" bodyfile="special_units/size_3d.hpp" bodystart="48" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1ac6c6096261c81209145a8b304a98a563" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
        <definition>size_3d&lt; T &gt; &amp; scifir::size_3d&lt; T &gt;::operator=</definition>
        <argsstring>(size_3d&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::size_3d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="56" column="9" bodyfile="special_units/size_3d.hpp" bodystart="56" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1ab20ca4cf111fd6b684c92ba23389e50e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt;</type>
        <definition>size_3d&lt; T &gt; scifir::size_3d&lt; T &gt;::operator+</definition>
        <argsstring>(const size_3d&lt; T &gt; &amp;x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::size_3d::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="64" column="9" bodyfile="special_units/size_3d.hpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1ab9a7fc37a90e64c394bda2cce6bba10a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt;</type>
        <definition>size_3d&lt; T &gt; scifir::size_3d&lt; T &gt;::operator-</definition>
        <argsstring>(const size_3d&lt; T &gt; &amp;x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::size_3d::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="69" column="9" bodyfile="special_units/size_3d.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1ada390e320ba19c5fdad921ebb4240a06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::size_3d&lt; T &gt;::operator+=</definition>
        <argsstring>(const size_3d&lt; T &gt; &amp;x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::size_3d::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="74" column="6" bodyfile="special_units/size_3d.hpp" bodystart="74" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a83e9e06987837b70e62dc5720a2956d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::size_3d&lt; T &gt;::operator-=</definition>
        <argsstring>(const size_3d&lt; T &gt; &amp;x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::size_3d::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="81" column="6" bodyfile="special_units/size_3d.hpp" bodystart="81" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_1a29ff12f1198e9457bf02dbb848db6edb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::size_3d&lt; T &gt;::get_volume</definition>
        <argsstring>() const</argsstring>
        <name>get_volume</name>
        <qualifiedname>scifir::size_3d::get_volume</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="88" column="13" bodyfile="special_units/size_3d.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="special_units/size_3d.hpp" line="15" column="1" bodyfile="special_units/size_3d.hpp" bodystart="16" bodyend="96"/>
    <listofallmembers>
      <member refid="classscifir_1_1size__3d_1adc948753e8017b454d878cc6b59466d7" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>depth</name></member>
      <member refid="classscifir_1_1size__3d_1a29ff12f1198e9457bf02dbb848db6edb" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>get_volume</name></member>
      <member refid="classscifir_1_1size__3d_1a6b24e8c1c5d4b97028d83708a0236349" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>height</name></member>
      <member refid="classscifir_1_1size__3d_1ab20ca4cf111fd6b684c92ba23389e50e" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator+</name></member>
      <member refid="classscifir_1_1size__3d_1ada390e320ba19c5fdad921ebb4240a06" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1size__3d_1ab9a7fc37a90e64c394bda2cce6bba10a" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator-</name></member>
      <member refid="classscifir_1_1size__3d_1a83e9e06987837b70e62dc5720a2956d7" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1size__3d_1a98f8bc0fa68dd84e1be98e72df756a9a" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__3d_1ac6c6096261c81209145a8b304a98a563" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__3d_1a203226ede3f032f59fa077e3d62145ab" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_1a8b4d091f0e15f510c3542dbfe43a4b08" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_1ab7b5c855243567515aad306f0696d4c7" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_1a342c29fa2eba3ff9769107bc2f9b7143" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_1aa2869e0ab5bf6135a0596582b7e2dbc9" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_1a16c224393337c845db0cc897aeab4518" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_1a00374fdae1c845643e428ca3db9390eb" prot="public" virt="non-virtual"><scope>scifir::size_3d</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
