<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1size__3d_3_01float_01_4" kind="class" language="C++" prot="public">
    <compoundname>scifir::size_3d&lt; float &gt;</compoundname>
    <includes refid="size__3d_8hpp" local="no">size_3d.hpp</includes>
    <templateparamlist>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1size__3d_3_01float_01_4_1ad232bf592b2bbf6aaf2667763ea004c4" prot="public" static="no" mutable="no">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::size_3d&lt; float &gt;::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::width</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="200" column="7" bodyfile="special_units/size_3d.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1size__3d_3_01float_01_4_1a538e1ae810cc34f3b6ca5d3bc0aec34a" prot="public" static="no" mutable="no">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::size_3d&lt; float &gt;::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::height</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="201" column="7" bodyfile="special_units/size_3d.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classscifir_1_1size__3d_3_01float_01_4_1a10af10381c32c346530f4df50b6c0b1c" prot="public" static="no" mutable="no">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::size_3d&lt; float &gt;::depth</definition>
        <argsstring></argsstring>
        <name>depth</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::depth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="202" column="7" bodyfile="special_units/size_3d.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1a299413ba5435c392757c3df728d46047" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; float &gt;::size_3d</definition>
        <argsstring>()</argsstring>
        <name>size_3d</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::size_3d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="122" column="1" bodyfile="special_units/size_3d.hpp" bodystart="122" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1a32dff4f6e57b0239e39f92e5fb22743d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; float &gt;::size_3d</definition>
        <argsstring>(const size_3d&lt; float &gt; &amp;x)</argsstring>
        <name>size_3d</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::size_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="125" column="1" bodyfile="special_units/size_3d.hpp" bodystart="125" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1a8cbcc3e31964d19aa006e5c47f806b98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; float &gt;::size_3d</definition>
        <argsstring>(size_3d&lt; float &gt; &amp;&amp;x)</argsstring>
        <name>size_3d</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::size_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="128" column="1" bodyfile="special_units/size_3d.hpp" bodystart="128" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1a274d7930a6fd19a3f708d0fdc9453742" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; float &gt;::size_3d</definition>
        <argsstring>(const float &amp;new_width, const float &amp;new_height, const float &amp;new_depth)</argsstring>
        <name>size_3d</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::size_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_height</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &amp;</type>
          <declname>new_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="131" column="10" bodyfile="special_units/size_3d.hpp" bodystart="131" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1ad51ab6e61122bd93149646582d83d3dd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; float &gt;::size_3d</definition>
        <argsstring>(const string &amp;new_width, const string &amp;new_height, const string &amp;new_depth)</argsstring>
        <name>size_3d</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::size_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_height</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="134" column="10" bodyfile="special_units/size_3d.hpp" bodystart="134" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1a8fe981bbb48a995d36f2ad3ad2c19b62" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_3d&lt; float &gt;::size_3d</definition>
        <argsstring>(const string &amp;init_size_3d)</argsstring>
        <name>size_3d</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::size_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_size_3d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="137" column="10" bodyfile="special_units/size_3d.hpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1a93cd3b281bb3f2e0cb52d04c92eee60d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
        <definition>size_3d&lt; float &gt; &amp; scifir::size_3d&lt; float &gt;::operator=</definition>
        <argsstring>(const size_3d&lt; float &gt; &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="142" column="9" bodyfile="special_units/size_3d.hpp" bodystart="142" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1adc9c21ba8f73f39b7e971618785070f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
        <definition>size_3d&lt; float &gt; &amp; scifir::size_3d&lt; float &gt;::operator=</definition>
        <argsstring>(size_3d&lt; float &gt; &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="150" column="9" bodyfile="special_units/size_3d.hpp" bodystart="150" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1a2aeca509ba18b57703e6ef054d2191c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
        <definition>size_3d&lt; float &gt; &amp; scifir::size_3d&lt; float &gt;::operator=</definition>
        <argsstring>(const string &amp;init_size_3d)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_size_3d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="158" column="9" bodyfile="special_units/size_3d.hpp" bodystart="158" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1a019ba42cbd9b5c7b834d383c4710ec02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt;</type>
        <definition>size_3d&lt; float &gt; scifir::size_3d&lt; float &gt;::operator+</definition>
        <argsstring>(const size_3d&lt; float &gt; &amp;x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="164" column="9" bodyfile="special_units/size_3d.hpp" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1a2d1058b8d59b184c0a16ec28cf386509" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt;</type>
        <definition>size_3d&lt; float &gt; scifir::size_3d&lt; float &gt;::operator-</definition>
        <argsstring>(const size_3d&lt; float &gt; &amp;x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="169" column="9" bodyfile="special_units/size_3d.hpp" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1afc225edfff9ed52bfb59c9ef3d97687b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::size_3d&lt; float &gt;::operator+=</definition>
        <argsstring>(const size_3d&lt; float &gt; &amp;x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="174" column="6" bodyfile="special_units/size_3d.hpp" bodystart="174" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1a1a393c8a6dacd4b996062b94f4659618" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::size_3d&lt; float &gt;::operator-=</definition>
        <argsstring>(const size_3d&lt; float &gt; &amp;x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__3d" kindref="compound">size_3d</ref>&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="181" column="6" bodyfile="special_units/size_3d.hpp" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1aecb08c629179c69e20257cf82305fac5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
        <definition>float scifir::size_3d&lt; float &gt;::get_volume</definition>
        <argsstring>() const</argsstring>
        <name>get_volume</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::get_volume</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="188" column="7" bodyfile="special_units/size_3d.hpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1a0b946bb4370adcbe31465dcb2f4af95c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::size_3d&lt; float &gt;::display</definition>
        <argsstring>() const</argsstring>
        <name>display</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::display</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="193" column="8" bodyfile="special_units/size_3d.hpp" bodystart="193" bodyend="198"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classscifir_1_1size__3d_3_01float_01_4_1a75e367a3f2054870bb3c71c7822ea081" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::size_3d&lt; float &gt;::initialize_from_string</definition>
        <argsstring>(const string &amp;init_size_3d)</argsstring>
        <name>initialize_from_string</name>
        <qualifiedname>scifir::size_3d&lt; float &gt;::initialize_from_string</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_size_3d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_3d.hpp" line="205" column="6" bodyfile="special_units/size_3d.hpp" bodystart="205" bodyend="218"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="special_units/size_3d.hpp" line="119" column="1" bodyfile="special_units/size_3d.hpp" bodystart="120" bodyend="219"/>
    <listofallmembers>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a10af10381c32c346530f4df50b6c0b1c" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>depth</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a0b946bb4370adcbe31465dcb2f4af95c" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>display</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1aecb08c629179c69e20257cf82305fac5" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>get_volume</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a538e1ae810cc34f3b6ca5d3bc0aec34a" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>height</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a75e367a3f2054870bb3c71c7822ea081" prot="private" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>initialize_from_string</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a019ba42cbd9b5c7b834d383c4710ec02" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>operator+</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1afc225edfff9ed52bfb59c9ef3d97687b" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a2d1058b8d59b184c0a16ec28cf386509" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>operator-</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a1a393c8a6dacd4b996062b94f4659618" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a93cd3b281bb3f2e0cb52d04c92eee60d" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1adc9c21ba8f73f39b7e971618785070f7" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a2aeca509ba18b57703e6ef054d2191c8" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a299413ba5435c392757c3df728d46047" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a32dff4f6e57b0239e39f92e5fb22743d" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a8cbcc3e31964d19aa006e5c47f806b98" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a274d7930a6fd19a3f708d0fdc9453742" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1ad51ab6e61122bd93149646582d83d3dd" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1a8fe981bbb48a995d36f2ad3ad2c19b62" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>size_3d</name></member>
      <member refid="classscifir_1_1size__3d_3_01float_01_4_1ad232bf592b2bbf6aaf2667763ea004c4" prot="public" virt="non-virtual"><scope>scifir::size_3d&lt; float &gt;</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
