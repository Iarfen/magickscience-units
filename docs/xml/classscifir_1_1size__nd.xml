<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1size__nd" kind="class" language="C++" prot="public">
    <compoundname>scifir::size_nd</compoundname>
    <templateparamlist>
      <param>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> T</type>
        <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">length</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1size__nd_1a9a52bb88267d31a606c42ae464c8914f" prot="public" static="no" mutable="no">
        <type>vector&lt; T &gt;</type>
        <definition>vector&lt;T&gt; scifir::size_nd&lt; T &gt;::widths</definition>
        <argsstring></argsstring>
        <name>widths</name>
        <qualifiedname>scifir::size_nd::widths</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="139" column="8" bodyfile="special_units/size_nd.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1size__nd_1a2b903067cbb3b1a7fc7c664c7f8572bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_nd&lt; T &gt;::size_nd</definition>
        <argsstring>()</argsstring>
        <name>size_nd</name>
        <qualifiedname>scifir::size_nd::size_nd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="19" column="1" bodyfile="special_units/size_nd.hpp" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a2911d9726fbc7f1802bd3f7109bff013" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_nd&lt; T &gt;::size_nd</definition>
        <argsstring>(const size_nd&lt; T &gt; &amp;x)</argsstring>
        <name>size_nd</name>
        <qualifiedname>scifir::size_nd::size_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="22" column="1" bodyfile="special_units/size_nd.hpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a06de6ff23cb98ac3e16d0b0a443f0783" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_nd&lt; T &gt;::size_nd</definition>
        <argsstring>(size_nd&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>size_nd</name>
        <qualifiedname>scifir::size_nd::size_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="25" column="1" bodyfile="special_units/size_nd.hpp" bodystart="25" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a5c56dd7a9e03278fd074a56f4bd880cd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_nd&lt; T &gt;::size_nd</definition>
        <argsstring>(const vector&lt; T &gt; &amp;new_widths)</argsstring>
        <name>size_nd</name>
        <qualifiedname>scifir::size_nd::size_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; T &gt; &amp;</type>
          <declname>new_widths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="28" column="10" bodyfile="special_units/size_nd.hpp" bodystart="28" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a18e3b6ef07f1b40658dbc0fd906627f0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_nd&lt; T &gt;::size_nd</definition>
        <argsstring>(const vector&lt; string &gt; &amp;new_widths)</argsstring>
        <name>size_nd</name>
        <qualifiedname>scifir::size_nd::size_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &gt; &amp;</type>
          <declname>new_widths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="31" column="10" bodyfile="special_units/size_nd.hpp" bodystart="31" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a1455705cf0394fef17ed95834b2c1d98" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_nd&lt; T &gt;::size_nd</definition>
        <argsstring>(const string &amp;init_size_nd)</argsstring>
        <name>size_nd</name>
        <qualifiedname>scifir::size_nd::size_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_size_nd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="39" column="10" bodyfile="special_units/size_nd.hpp" bodystart="39" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a83b77977be46fe8e86599756489b899d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
        <definition>size_nd&lt; T &gt; &amp; scifir::size_nd&lt; T &gt;::operator=</definition>
        <argsstring>(const size_nd&lt; T &gt; &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::size_nd::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="50" column="9" bodyfile="special_units/size_nd.hpp" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1ac70d1a43cdcc35c7d4ea38468abdc397" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
        <definition>size_nd&lt; T &gt; &amp; scifir::size_nd&lt; T &gt;::operator=</definition>
        <argsstring>(size_nd&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::size_nd::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="56" column="9" bodyfile="special_units/size_nd.hpp" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a213082cb65501fae45f942c1ba0386cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
        <definition>bool scifir::size_nd&lt; T &gt;::is_nd</definition>
        <argsstring>(int i) const</argsstring>
        <name>is_nd</name>
        <qualifiedname>scifir::size_nd::is_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="62" column="6" bodyfile="special_units/size_nd.hpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a0cc2a441e1a6e68128ea12d3be72df0e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        <definition>int scifir::size_nd&lt; T &gt;::get_nd</definition>
        <argsstring>() const</argsstring>
        <name>get_nd</name>
        <qualifiedname>scifir::size_nd::get_nd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="67" column="5" bodyfile="special_units/size_nd.hpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a5fc338bd17d2417f786cd5b199dd354e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt;</type>
        <definition>size_nd&lt; T &gt; scifir::size_nd&lt; T &gt;::operator+</definition>
        <argsstring>(const size_nd&lt; T &gt; &amp;x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::size_nd::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="72" column="9" bodyfile="special_units/size_nd.hpp" bodystart="72" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a0ac313b978a7b8dacfc0efb85e391fe1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt;</type>
        <definition>size_nd&lt; T &gt; scifir::size_nd&lt; T &gt;::operator-</definition>
        <argsstring>(const size_nd&lt; T &gt; &amp;x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::size_nd::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="89" column="9" bodyfile="special_units/size_nd.hpp" bodystart="89" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1aa5d57f479f0947009c87e25dcb9b09c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::size_nd&lt; T &gt;::operator+=</definition>
        <argsstring>(const size_nd&lt; T &gt; &amp;x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::size_nd::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="106" column="6" bodyfile="special_units/size_nd.hpp" bodystart="106" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a9487e7c9926186b1bc23ea8783410e9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::size_nd&lt; T &gt;::operator-=</definition>
        <argsstring>(const size_nd&lt; T &gt; &amp;x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::size_nd::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="117" column="6" bodyfile="special_units/size_nd.hpp" bodystart="117" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1aadf9ce58d30d97fd039e0093d6bf2dbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::size_nd&lt; T &gt;::get_volume_nd</definition>
        <argsstring>() const</argsstring>
        <name>get_volume_nd</name>
        <qualifiedname>scifir::size_nd::get_volume_nd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="128" column="13" bodyfile="special_units/size_nd.hpp" bodystart="128" bodyend="137"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="special_units/size_nd.hpp" line="16" column="1" bodyfile="special_units/size_nd.hpp" bodystart="17" bodyend="140"/>
    <listofallmembers>
      <member refid="classscifir_1_1size__nd_1a0cc2a441e1a6e68128ea12d3be72df0e" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>get_nd</name></member>
      <member refid="classscifir_1_1size__nd_1aadf9ce58d30d97fd039e0093d6bf2dbe" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>get_volume_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a213082cb65501fae45f942c1ba0386cc" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>is_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a5fc338bd17d2417f786cd5b199dd354e" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator+</name></member>
      <member refid="classscifir_1_1size__nd_1aa5d57f479f0947009c87e25dcb9b09c9" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1size__nd_1a0ac313b978a7b8dacfc0efb85e391fe1" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator-</name></member>
      <member refid="classscifir_1_1size__nd_1a9487e7c9926186b1bc23ea8783410e9d" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1size__nd_1a83b77977be46fe8e86599756489b899d" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__nd_1ac70d1a43cdcc35c7d4ea38468abdc397" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__nd_1a2b903067cbb3b1a7fc7c664c7f8572bb" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>size_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a2911d9726fbc7f1802bd3f7109bff013" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>size_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a06de6ff23cb98ac3e16d0b0a443f0783" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>size_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a5c56dd7a9e03278fd074a56f4bd880cd" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>size_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a18e3b6ef07f1b40658dbc0fd906627f0" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>size_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a1455705cf0394fef17ed95834b2c1d98" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>size_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a9a52bb88267d31a606c42ae464c8914f" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>widths</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
