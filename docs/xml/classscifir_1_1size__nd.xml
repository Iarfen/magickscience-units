<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classscifir_1_1size__nd" kind="class" language="C++" prot="public">
    <compoundname>scifir::size_nd</compoundname>
    <includes refid="size__nd_8hpp" local="no">size_nd.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
        <defval>length</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1size__nd_1a9a52bb88267d31a606c42ae464c8914f" prot="public" static="no" mutable="no">
        <type>vector&lt; T &gt;</type>
        <definition>vector&lt;T&gt; scifir::size_nd&lt; T &gt;::widths</definition>
        <argsstring></argsstring>
        <name>widths</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="158" column="8" bodyfile="special_units/size_nd.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1size__nd_1a2b903067cbb3b1a7fc7c664c7f8572bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_nd&lt; T &gt;::size_nd</definition>
        <argsstring>()</argsstring>
        <name>size_nd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="20" column="1" bodyfile="special_units/size_nd.hpp" bodystart="20" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a2911d9726fbc7f1802bd3f7109bff013" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_nd&lt; T &gt;::size_nd</definition>
        <argsstring>(const size_nd&lt; T &gt; &amp;x)</argsstring>
        <name>size_nd</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="23" column="1" bodyfile="special_units/size_nd.hpp" bodystart="23" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a06de6ff23cb98ac3e16d0b0a443f0783" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_nd&lt; T &gt;::size_nd</definition>
        <argsstring>(size_nd&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>size_nd</name>
        <param>
          <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="26" column="1" bodyfile="special_units/size_nd.hpp" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a5c56dd7a9e03278fd074a56f4bd880cd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_nd&lt; T &gt;::size_nd</definition>
        <argsstring>(const vector&lt; T &gt; &amp;new_widths)</argsstring>
        <name>size_nd</name>
        <param>
          <type>const vector&lt; T &gt; &amp;</type>
          <declname>new_widths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="29" column="10" bodyfile="special_units/size_nd.hpp" bodystart="29" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a18e3b6ef07f1b40658dbc0fd906627f0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_nd&lt; T &gt;::size_nd</definition>
        <argsstring>(const vector&lt; string &gt; &amp;new_widths)</argsstring>
        <name>size_nd</name>
        <param>
          <type>const vector&lt; string &gt; &amp;</type>
          <declname>new_widths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="32" column="10" bodyfile="special_units/size_nd.hpp" bodystart="32" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a1455705cf0394fef17ed95834b2c1d98" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scifir::size_nd&lt; T &gt;::size_nd</definition>
        <argsstring>(const string &amp;init_size_nd)</argsstring>
        <name>size_nd</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_size_nd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="40" column="10" bodyfile="special_units/size_nd.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1ae2ed04ef92a63336d32807ad20a11f75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
        <definition>size_nd&lt;T&gt;&amp; scifir::size_nd&lt; T &gt;::operator=</definition>
        <argsstring>(const size_nd&lt; T &gt; &amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="45" column="9" bodyfile="special_units/size_nd.hpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a979dd34988ebd3de797b5643709322d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
        <definition>size_nd&lt;T&gt;&amp; scifir::size_nd&lt; T &gt;::operator=</definition>
        <argsstring>(size_nd&lt; T &gt; &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="51" column="9" bodyfile="special_units/size_nd.hpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a43b3927b9d27f0921cf8a2817492be2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
        <definition>size_nd&lt;T&gt;&amp; scifir::size_nd&lt; T &gt;::operator=</definition>
        <argsstring>(const string &amp;init_size_nd)</argsstring>
        <name>operator=</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_size_nd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="57" column="9" bodyfile="special_units/size_nd.hpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a213082cb65501fae45f942c1ba0386cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool scifir::size_nd&lt; T &gt;::is_nd</definition>
        <argsstring>(int i) const</argsstring>
        <name>is_nd</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="63" column="6" bodyfile="special_units/size_nd.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a0cc2a441e1a6e68128ea12d3be72df0e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int scifir::size_nd&lt; T &gt;::get_nd</definition>
        <argsstring>() const</argsstring>
        <name>get_nd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="68" column="5" bodyfile="special_units/size_nd.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1acd80b2bca6491de75d30f5796d2371a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt;</type>
        <definition>size_nd&lt;T&gt; scifir::size_nd&lt; T &gt;::operator+</definition>
        <argsstring>(const size_nd&lt; T &gt; &amp;x) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="73" column="9" bodyfile="special_units/size_nd.hpp" bodystart="73" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1aa100fbf70c19751b8983b129abc8375d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt;</type>
        <definition>size_nd&lt;T&gt; scifir::size_nd&lt; T &gt;::operator-</definition>
        <argsstring>(const size_nd&lt; T &gt; &amp;x) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="90" column="9" bodyfile="special_units/size_nd.hpp" bodystart="90" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1aa5d57f479f0947009c87e25dcb9b09c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::size_nd&lt; T &gt;::operator+=</definition>
        <argsstring>(const size_nd&lt; T &gt; &amp;x)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="107" column="6" bodyfile="special_units/size_nd.hpp" bodystart="107" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a9487e7c9926186b1bc23ea8783410e9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::size_nd&lt; T &gt;::operator-=</definition>
        <argsstring>(const size_nd&lt; T &gt; &amp;x)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classscifir_1_1size__nd" kindref="compound">size_nd</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="118" column="6" bodyfile="special_units/size_nd.hpp" bodystart="118" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1aadf9ce58d30d97fd039e0093d6bf2dbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::size_nd&lt; T &gt;::get_volume_nd</definition>
        <argsstring>() const</argsstring>
        <name>get_volume_nd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="129" column="13" bodyfile="special_units/size_nd.hpp" bodystart="129" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1size__nd_1a5b82392b2c7f2c8c31777cd0ea6bfd4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string scifir::size_nd&lt; T &gt;::display</definition>
        <argsstring>() const</argsstring>
        <name>display</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="140" column="8" bodyfile="special_units/size_nd.hpp" bodystart="140" bodyend="156"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classscifir_1_1size__nd_1ab9b899d4a1271fadb2a33a8a4cc5f265" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void scifir::size_nd&lt; T &gt;::initialize_from_string</definition>
        <argsstring>(const string &amp;init_size_nd)</argsstring>
        <name>initialize_from_string</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_size_nd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="special_units/size_nd.hpp" line="161" column="6" bodyfile="special_units/size_nd.hpp" bodystart="161" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="special_units/size_nd.hpp" line="17" column="1" bodyfile="special_units/size_nd.hpp" bodystart="18" bodyend="172"/>
    <listofallmembers>
      <member refid="classscifir_1_1size__nd_1a5b82392b2c7f2c8c31777cd0ea6bfd4a" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>display</name></member>
      <member refid="classscifir_1_1size__nd_1a0cc2a441e1a6e68128ea12d3be72df0e" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>get_nd</name></member>
      <member refid="classscifir_1_1size__nd_1aadf9ce58d30d97fd039e0093d6bf2dbe" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>get_volume_nd</name></member>
      <member refid="classscifir_1_1size__nd_1ab9b899d4a1271fadb2a33a8a4cc5f265" prot="private" virt="non-virtual"><scope>scifir::size_nd</scope><name>initialize_from_string</name></member>
      <member refid="classscifir_1_1size__nd_1a213082cb65501fae45f942c1ba0386cc" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>is_nd</name></member>
      <member refid="classscifir_1_1size__nd_1acd80b2bca6491de75d30f5796d2371a6" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator+</name></member>
      <member refid="classscifir_1_1size__nd_1aa5d57f479f0947009c87e25dcb9b09c9" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1size__nd_1aa100fbf70c19751b8983b129abc8375d" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator-</name></member>
      <member refid="classscifir_1_1size__nd_1a9487e7c9926186b1bc23ea8783410e9d" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1size__nd_1ae2ed04ef92a63336d32807ad20a11f75" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__nd_1a979dd34988ebd3de797b5643709322d9" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__nd_1a43b3927b9d27f0921cf8a2817492be2a" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1size__nd_1a2b903067cbb3b1a7fc7c664c7f8572bb" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>size_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a2911d9726fbc7f1802bd3f7109bff013" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>size_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a06de6ff23cb98ac3e16d0b0a443f0783" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>size_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a5c56dd7a9e03278fd074a56f4bd880cd" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>size_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a18e3b6ef07f1b40658dbc0fd906627f0" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>size_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a1455705cf0394fef17ed95834b2c1d98" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>size_nd</name></member>
      <member refid="classscifir_1_1size__nd_1a9a52bb88267d31a606c42ae464c8914f" prot="public" virt="non-virtual"><scope>scifir::size_nd</scope><name>widths</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
