<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1vector__unit__2d" kind="class" language="C++" prot="public">
    <compoundname>scifir::vector_unit_2d</compoundname>
    <basecompoundref refid="classscifir_1_1scalar__unit" prot="public" virt="non-virtual">scifir::scalar_unit</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1vector__unit__2d_1a30fe14e1861d1d49905e6bc07e941107" prot="public" static="no" mutable="no">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::vector_unit_2d::theta</definition>
        <argsstring></argsstring>
        <name>theta</name>
        <qualifiedname>scifir::vector_unit_2d::theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="193" column="7" bodyfile="units/vector_unit_2d.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ae6e0657b5f795ed9aec61a79438a26d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>()</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="59" column="1" bodyfile="units/vector_unit_2d.cpp" bodystart="12" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a3c4662c024e5725df779ee3a1e5ab9f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(const vector_unit_2d &amp;)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="60" column="1" bodyfile="units/vector_unit_2d.cpp" bodystart="15" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1af25c459dc4e84d15f19778b132e85945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(vector_unit_2d &amp;&amp;)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;&amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="61" column="1" bodyfile="units/vector_unit_2d.cpp" bodystart="18" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a959df5bf0c457d8314a02b4190f1a184" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(float, const string &amp;, float)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="62" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a38e3ea40d5a4e2572be39f1df254e052" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(float, const string &amp;, const angle &amp;)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="63" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a90284a1452034f356fd04ab664402a1e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(double, const string &amp;, float)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="64" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="27" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1abf24ecbf44e215fc20fdbb8bb17ac6d6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(double, const string &amp;, const angle &amp;)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="65" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a1cb5990bf06aabfab0e1f530459e2442" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(long double, const string &amp;, float)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="66" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="33" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a303c49edc73d43a41b8bf7ab09d7a83e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(long double, const string &amp;, const angle &amp;)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="67" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="36" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a17ae72f5361ee9509a2831b8fe3bed2c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(float, const vector&lt; dimension &gt; &amp;, float)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="68" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="39" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a3a86f24ee7eae529a4b900ede6b1cb2d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(float, const vector&lt; dimension &gt; &amp;, const angle &amp;)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="69" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="42" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ad8cd98e5347c8ccb45f16f591d3bec20" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(double, const vector&lt; dimension &gt; &amp;, float)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="70" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="45" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1aa85aed7184e4155103524468ddeb0de3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(double, const vector&lt; dimension &gt; &amp;, const angle &amp;)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="71" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="48" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a68322f8c5d1b2e11c6f141e27037b474" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(long double, const vector&lt; dimension &gt; &amp;, float)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="72" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="51" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ad846153330dcb3a7f7f2820b14c603f0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(long double, const vector&lt; dimension &gt; &amp;, const angle &amp;)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="73" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="54" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a5912f7e06194874c376020c8d0c3088e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(const scalar_unit &amp;, float)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="74" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="57" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a4ddd1127645ac16b0b1f48c24f4e118b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(const scalar_unit &amp;, const angle &amp;)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="75" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="60" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ae80b3133a43d546e2d50454913dd0875" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(const string &amp;, float)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_scalar</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="76" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="63" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a0b582eac04fc527e31fe22307ce61ff2" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(const string &amp;, const angle &amp;)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_scalar</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <defname>new_angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="77" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="66" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ab7c491dd9b8a65bb09003c7e7ab3deb4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(const string &amp;)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_vector_2d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="78" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="69" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a03e1ec7de3a970b79bef18e923fd1a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
        <definition>vector_unit_2d &amp; scifir::vector_unit_2d::operator=</definition>
        <argsstring>(const vector_unit_2d &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_2d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="87" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ab087f3361bff2c1bc99eb80429b1caf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
        <definition>vector_unit_2d &amp; scifir::vector_unit_2d::operator=</definition>
        <argsstring>(vector_unit_2d &amp;&amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_2d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;&amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="88" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ab85c2d67963f531cad5abd2eb6eb9aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
        <definition>vector_unit_2d &amp; scifir::vector_unit_2d::operator=</definition>
        <argsstring>(const scalar_unit &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_2d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="89" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="94" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a82f223f42ffd606c31896ffa7cfa333d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
        <definition>vector_unit_2d &amp; scifir::vector_unit_2d::operator=</definition>
        <argsstring>(scalar_unit &amp;&amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_2d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;&amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="90" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a4c6a71de5f862e9388ee8fd96e6844aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::point_to</definition>
        <argsstring>(direction::name)</argsstring>
        <name>point_to</name>
        <qualifiedname>scifir::vector_unit_2d::point_to</qualifiedname>
        <param>
          <type>direction::name</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="92" column="6" bodyfile="units/vector_unit_2d.cpp" bodystart="106" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a03c50288f0cf74367c24084e3c56022d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::operator+=</definition>
        <argsstring>(const vector_unit_2d &amp;)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::vector_unit_2d::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
          <defname>y</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="94" column="6" bodyfile="units/vector_unit_2d.cpp" bodystart="142" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a7a95bf15dd66a5f4417f11b3835e8d08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::operator-=</definition>
        <argsstring>(vector_unit_2d)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::vector_unit_2d::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
          <defname>y</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="95" column="6" bodyfile="units/vector_unit_2d.cpp" bodystart="157" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a890674507b764e105eb170bdbf737e7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator+</definition>
        <argsstring>(const vector_unit_2d &amp;) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::vector_unit_2d::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
          <defname>y</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="97" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="170" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a7890687625ff82a90563d018c73606c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator-</definition>
        <argsstring>(vector_unit_2d) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::vector_unit_2d::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
          <defname>y</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="98" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="186" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ac8c044cd7d528b2af21bffce74cee552" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator*</definition>
        <argsstring>(const scalar_unit &amp;) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::vector_unit_2d::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="100" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="203" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a94ba9a133b5f97b2d5adfcc9983e7fe9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator/</definition>
        <argsstring>(const scalar_unit &amp;) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::vector_unit_2d::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="101" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="210" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a8b02068ef0c1d2461250a8c3e9b28619" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator^</definition>
        <argsstring>(const scalar_unit &amp;) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::vector_unit_2d::operator^</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="102" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="217" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a7bb41cd99c3246ecca935e9a642345a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator+</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::vector_unit_2d::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="105" column="16" bodyfile="units/vector_unit_2d.hpp" bodystart="105" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a067b4fd5f457ed07a163594f0e3991f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator-</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::vector_unit_2d::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="113" column="16" bodyfile="units/vector_unit_2d.hpp" bodystart="113" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a9dbca5e97b2346831125117acc17d10e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator*</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::vector_unit_2d::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="121" column="16" bodyfile="units/vector_unit_2d.hpp" bodystart="121" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a48fb493c9a2c5990b0723c0a1ca34cfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator/</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::vector_unit_2d::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="129" column="16" bodyfile="units/vector_unit_2d.hpp" bodystart="129" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a8b8196d1e5fd01123eee9975faa30fbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__integer__number" kindref="compound">is_integer_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator^</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::vector_unit_2d::operator^</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="137" column="16" bodyfile="units/vector_unit_2d.hpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a3c508099f657b0ef89b1395ad599bf39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::operator+=</definition>
        <argsstring>(U y)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::vector_unit_2d::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="143" column="6" bodyfile="units/vector_unit_2d.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a1b5624ad5387a4240b90467d3a26d442" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::operator-=</definition>
        <argsstring>(U y)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::vector_unit_2d::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="149" column="6" bodyfile="units/vector_unit_2d.hpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a61a60a4df20df08dbc9835f7c894184b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::operator*=</definition>
        <argsstring>(U y)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::vector_unit_2d::operator*=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="155" column="6" bodyfile="units/vector_unit_2d.hpp" bodystart="155" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ae5fa36337c0ff911ecb3e71743225a78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::operator/=</definition>
        <argsstring>(U y)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::vector_unit_2d::operator/=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="165" column="6" bodyfile="units/vector_unit_2d.hpp" bodystart="165" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a6c322e23ba49e7b7bf7478dc51c2d36e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::vector_unit_2d::x_projection</definition>
        <argsstring>() const</argsstring>
        <name>x_projection</name>
        <qualifiedname>scifir::vector_unit_2d::x_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="174" column="20" bodyfile="units/vector_unit_2d.hpp" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1abf7fa4c19f437340a7c3a217fe624145" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::vector_unit_2d::y_projection</definition>
        <argsstring>() const</argsstring>
        <name>y_projection</name>
        <qualifiedname>scifir::vector_unit_2d::y_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="179" column="20" bodyfile="units/vector_unit_2d.hpp" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1afa0620bca6cb5609f6cb1d29440ffbf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::invert</definition>
        <argsstring>()</argsstring>
        <name>invert</name>
        <qualifiedname>scifir::vector_unit_2d::invert</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="184" column="13" bodyfile="units/vector_unit_2d.hpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ab55d88880b822ef8bc10e17a496e5368" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::vector_unit_2d::vectorial_display</definition>
        <argsstring>(int=2) const</argsstring>
        <name>vectorial_display</name>
        <qualifiedname>scifir::vector_unit_2d::vectorial_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="189" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1afc0ecfebe45136fe25142cc276b48114" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::vector_unit_2d::vectorial_derived_display</definition>
        <argsstring>(int=2) const</argsstring>
        <name>vectorial_derived_display</name>
        <qualifiedname>scifir::vector_unit_2d::vectorial_derived_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="190" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a660ad5a656beb1fd2fc30ef15f871f68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::vector_unit_2d::vectorial_custom_display</definition>
        <argsstring>(const string &amp;, int=2) const</argsstring>
        <name>vectorial_custom_display</name>
        <qualifiedname>scifir::vector_unit_2d::vectorial_custom_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="191" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a07e373b19dd644dd5f2a50b03c7af829" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>static vector_unit_2d scifir::vector_unit_2d::cartesian_2d</definition>
        <argsstring>(const string &amp;new_dimensions, float new_x, float new_y)</argsstring>
        <name>cartesian_2d</name>
        <qualifiedname>scifir::vector_unit_2d::cartesian_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="80" column="23" bodyfile="units/vector_unit_2d.hpp" bodystart="80" bodyend="85"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>scifir::scalar_unit</label>
        <link refid="classscifir_1_1scalar__unit"/>
      </node>
      <node id="1">
        <label>scifir::vector_unit_2d</label>
        <link refid="classscifir_1_1vector__unit__2d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>scifir::angle</label>
        <link refid="classscifir_1_1angle"/>
      </node>
      <node id="2">
        <label>scifir::scalar_unit</label>
        <link refid="classscifir_1_1scalar__unit"/>
      </node>
      <node id="1">
        <label>scifir::vector_unit_2d</label>
        <link refid="classscifir_1_1vector__unit__2d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>theta</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="units/vector_unit_2d.hpp" line="56" column="1" bodyfile="units/vector_unit_2d.hpp" bodystart="57" bodyend="194"/>
    <listofallmembers>
      <member refid="classscifir_1_1scalar__unit_1aadfdf56e7df6a99627fd468bd3c02ba1" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>add_dimension</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a07e373b19dd644dd5f2a50b03c7af829" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>cartesian_2d</name></member>
      <member refid="classscifir_1_1scalar__unit_1ab58286c5045e63e2ca90571306626724" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>change_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1ac64621e7969dfc9aea0c12dd6ee048b8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>change_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1acfcf1821b6b0dbb4a05915d66f610833" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>custom_display</name></member>
      <member refid="classscifir_1_1scalar__unit_1ab6c6f9368db3f6b066c7aae5d7d1245f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>derived_display</name></member>
      <member refid="classscifir_1_1scalar__unit_1a47854a88ee4cacf7099c756e111b198d" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad160d04f5ea534a9c81142a5efd652a0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>display</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8c84a2ee69d730d6667b7103396730bd" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>display_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a49a18cc0d9347e017f2d13f1ce97889b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>get_derived_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1ac7a640edca2e933bc19a6194cb522204" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>get_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1aef86fe20676b9a14120270e6bb6c49b1" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>get_value</name></member>
      <member refid="classscifir_1_1scalar__unit_1a04899eed4d05a6267b1b44e832cc4d57" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1a2a12f475dc032f277bd577fd9b975d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a7edbf723398b8acd1a84669b1c3be30c" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1ae4b941ec3823e325a9d7290a56d4c226" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>has_empty_dimensions</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1afa0620bca6cb5609f6cb1d29440ffbf1" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>invert</name></member>
      <member refid="classscifir_1_1scalar__unit_1acab38ee2d23c051283285f08b9cac2c1" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator float</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ac8c044cd7d528b2af21bffce74cee552" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator*</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a9dbca5e97b2346831125117acc17d10e" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator*</name></member>
      <member refid="classscifir_1_1scalar__unit_1ada6156aec98a6c56065f0cc774e8a7a7" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator*</name></member>
      <member refid="classscifir_1_1scalar__unit_1a76638cb2e1edb72efe75e985fcf8b923" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator*</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a61a60a4df20df08dbc9835f7c894184b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1scalar__unit_1af82ffc4bfd5f62118ea38ed5376ba093" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a890674507b764e105eb170bdbf737e7f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator+</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a7bb41cd99c3246ecca935e9a642345a8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1a0ac0f8c43b2dea473b9e74b9ec510aa0" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1a05b93fe8c1ae6b47f457c5bfd7a65e60" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1af36b7d319844aad7f838a71aced338f4" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator++</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad4a110c3c13cf37db7329e70266a4ed7" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator++</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a03c50288f0cf74367c24084e3c56022d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a3c508099f657b0ef89b1395ad599bf39" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a5abaecf2a19c1d5a0bca214f0c1b55f2" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a118fcc15617a867f55e5b05a301e687c" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a7890687625ff82a90563d018c73606c9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator-</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a067b4fd5f457ed07a163594f0e3991f4" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a6c5f227e788c24feb0f82a0041a3ff91" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a020d08f5344018f5f17dd86e59b33ac2" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a180b89f1bb61a2d38175f2ceb408632d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator--</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1b069d8e8f353795ff9ea007ae7399eb" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator--</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a7a95bf15dd66a5f4417f11b3835e8d08" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a1b5624ad5387a4240b90467d3a26d442" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1scalar__unit_1aa38e580247e28f32f744094e3a3ddf95" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a2f9328b2e6bd1114c144eb6267651dad" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a94ba9a133b5f97b2d5adfcc9983e7fe9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator/</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a48fb493c9a2c5990b0723c0a1ca34cfa" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator/</name></member>
      <member refid="classscifir_1_1scalar__unit_1a2de981aa756ea61334717a4b290446d2" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator/</name></member>
      <member refid="classscifir_1_1scalar__unit_1a186c0df0fe96b3da6e45cb4e580cf455" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator/</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ae5fa36337c0ff911ecb3e71743225a78" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a156e0918dadd06776e73c4fcf3b16576" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a03e1ec7de3a970b79bef18e923fd1a64" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ab087f3361bff2c1bc99eb80429b1caf0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ab85c2d67963f531cad5abd2eb6eb9aca" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a82f223f42ffd606c31896ffa7cfa333d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a8b02068ef0c1d2461250a8c3e9b28619" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator^</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a8b8196d1e5fd01123eee9975faa30fbd" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator^</name></member>
      <member refid="classscifir_1_1scalar__unit_1a871cfaa2684c085ca2dcc75acc8f3fdc" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator^</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a4c6a71de5f862e9388ee8fd96e6844aa" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>point_to</name></member>
      <member refid="classscifir_1_1scalar__unit_1a2fec577682ea5238f05e1927fb92cb33" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>remove_dimension</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8ecd0310f82a51bfcc87b2aa892375b9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1af5216813417816260ebe01e51195d74f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a926fad376793fefcfda09c71a43c7b0b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad6c7d0c43bd2113048e3515719c32164" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a166ba9531851b6017f45798246e984c9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a5a666567f8c0783b0be278911a8da435" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a53864997d7b4e251260069eac6ffb3ca" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8019338691279bf0d0b9a3887d3fdb5c" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1ab8e7a7df3619e3d74ab1991c2ee0e2ea" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a46cf27440aa4714d68076ede0ae1a1fd" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a00a73942f2517b827e9df38e870f138c" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>set_from_string</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a30fe14e1861d1d49905e6bc07e941107" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>theta</name></member>
      <member refid="classscifir_1_1scalar__unit_1af1e3a220f55d66f5bb27ab6dfa84c632" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>value</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ae6e0657b5f795ed9aec61a79438a26d8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a3c4662c024e5725df779ee3a1e5ab9f9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1af25c459dc4e84d15f19778b132e85945" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a959df5bf0c457d8314a02b4190f1a184" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a38e3ea40d5a4e2572be39f1df254e052" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a90284a1452034f356fd04ab664402a1e" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1abf24ecbf44e215fc20fdbb8bb17ac6d6" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a1cb5990bf06aabfab0e1f530459e2442" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a303c49edc73d43a41b8bf7ab09d7a83e" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a17ae72f5361ee9509a2831b8fe3bed2c" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a3a86f24ee7eae529a4b900ede6b1cb2d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ad8cd98e5347c8ccb45f16f591d3bec20" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1aa85aed7184e4155103524468ddeb0de3" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a68322f8c5d1b2e11c6f141e27037b474" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ad846153330dcb3a7f7f2820b14c603f0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a5912f7e06194874c376020c8d0c3088e" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a4ddd1127645ac16b0b1f48c24f4e118b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ae80b3133a43d546e2d50454913dd0875" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a0b582eac04fc527e31fe22307ce61ff2" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ab7c491dd9b8a65bb09003c7e7ab3deb4" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a660ad5a656beb1fd2fc30ef15f871f68" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vectorial_custom_display</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1afc0ecfebe45136fe25142cc276b48114" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vectorial_derived_display</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ab55d88880b822ef8bc10e17a496e5368" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vectorial_display</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a6c322e23ba49e7b7bf7478dc51c2d36e" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>x_projection</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1abf7fa4c19f437340a7c3a217fe624145" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>y_projection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
