<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1vector__unit__2d" kind="class" language="C++" prot="public">
    <compoundname>scifir::vector_unit_2d</compoundname>
    <basecompoundref refid="classscifir_1_1scalar__unit" prot="public" virt="non-virtual">scifir::scalar_unit</basecompoundref>
    <includes refid="vector__unit__2d_8hpp" local="no">vector_unit_2d.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1vector__unit__2d_1a30fe14e1861d1d49905e6bc07e941107" prot="public" static="no" mutable="no">
        <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
        <definition>angle scifir::vector_unit_2d::theta</definition>
        <argsstring></argsstring>
        <name>theta</name>
        <qualifiedname>scifir::vector_unit_2d::theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="199" column="7" bodyfile="units/vector_unit_2d.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ae6e0657b5f795ed9aec61a79438a26d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>()</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="58" column="1" bodyfile="units/vector_unit_2d.cpp" bodystart="12" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a98d8063078f684a4266a885a153348d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(const vector_unit_2d &amp;x)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="59" column="1" bodyfile="units/vector_unit_2d.cpp" bodystart="15" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1acbb7e94692094b6e319b36e40bf6b442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(vector_unit_2d &amp;&amp;x)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="60" column="1" bodyfile="units/vector_unit_2d.cpp" bodystart="18" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1aff3365ebb3e0e5fec344c4cbdb44dfd9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(float new_value, const string &amp;init_dimensions, float new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="61" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1acaf2a88bb5a785eb9f6e636dd369ed85" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(float new_value, const string &amp;init_dimensions, const angle &amp;new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="62" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a3ca5095c8bf1c30cb3a72ef8732d90c5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(double new_value, const string &amp;init_dimensions, float new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="63" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="27" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ab51cac957eb6860cd7b35185526c1742" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(double new_value, const string &amp;init_dimensions, const angle &amp;new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="64" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a9daea76963960dc221154c70f79babb9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(long double new_value, const string &amp;init_dimensions, float new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="65" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="33" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a8bc4a4829d37d04c4f334d5de31fb85c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(long double new_value, const string &amp;init_dimensions, const angle &amp;new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="66" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="36" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1abacf5e188060d339cc20e6d8761fb8bc" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(int new_value, const string &amp;init_dimensions, float new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="67" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="39" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1afea55898df669c84724743e4b3e76847" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(int new_value, const string &amp;init_dimensions, const angle &amp;new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="68" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="42" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a8002dbe48a045dfe7a797b3d58db31ba" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(float new_value, const vector&lt; dimension &gt; &amp;new_dimensions, float new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="69" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="45" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1acbcc77a4bd353c69533cf6159bebf1d7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(float new_value, const vector&lt; dimension &gt; &amp;new_dimensions, const angle &amp;new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="70" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="48" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a3a6fd763d78bc4a1eff0448fb09c7e71" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(double new_value, const vector&lt; dimension &gt; &amp;new_dimensions, float new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="71" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="51" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ae9efa387fd50a7a5c7ab5109277804c3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(double new_value, const vector&lt; dimension &gt; &amp;new_dimensions, const angle &amp;new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="72" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="54" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ac54eccbbb7bc6dc65a333e3761819288" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(long double new_value, const vector&lt; dimension &gt; &amp;new_dimensions, float new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="73" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="57" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1aea3465e2d64f856439705a817f63f589" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(long double new_value, const vector&lt; dimension &gt; &amp;new_dimensions, const angle &amp;new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="74" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="60" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1adea40dcc846a553b835dcf81f6919dc8" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(int new_value, const vector&lt; dimension &gt; &amp;new_dimensions, float new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="75" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="63" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a0baeaf1acd00e295df6ca0dd128b714b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(int new_value, const vector&lt; dimension &gt; &amp;new_dimensions, const angle &amp;new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="76" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="66" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a709462a78482659ad8499e650b8ec5f1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(const scalar_unit &amp;x, float new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="77" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="69" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ad1af5e0a75a65167ac34cda8ffd5f0f2" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(const scalar_unit &amp;x, const angle &amp;new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="78" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="72" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a1525ea51add768e5ced7d08a17a942b9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(const string &amp;init_scalar, float new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_scalar</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="79" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="75" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a4c8b8973c28016bd216ceeb4fd5eab9e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(const string &amp;init_scalar, const angle &amp;new_theta)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_scalar</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>new_theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="80" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="78" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1acc9a28aa07196adb4d95c52249ee3e72" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_2d::vector_unit_2d</definition>
        <argsstring>(const string &amp;init_vector_2d)</argsstring>
        <name>vector_unit_2d</name>
        <qualifiedname>scifir::vector_unit_2d::vector_unit_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_vector_2d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="81" column="10" bodyfile="units/vector_unit_2d.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a168ab49d6dedb5bd399a7ac7537deb5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
        <definition>vector_unit_2d &amp; scifir::vector_unit_2d::operator=</definition>
        <argsstring>(const vector_unit_2d &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_2d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="90" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a5c0fccfc2c496d289af8379e1fcd9016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
        <definition>vector_unit_2d &amp; scifir::vector_unit_2d::operator=</definition>
        <argsstring>(vector_unit_2d &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_2d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="91" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ae055d53c6f42f93727b5a5db35066408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
        <definition>vector_unit_2d &amp; scifir::vector_unit_2d::operator=</definition>
        <argsstring>(const scalar_unit &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_2d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="92" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a9baeb5ba563890c2e8fbef7baad77b08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
        <definition>vector_unit_2d &amp; scifir::vector_unit_2d::operator=</definition>
        <argsstring>(scalar_unit &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_2d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="93" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a1aaaed9dedb58ce3d4de495820b91a30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
        <definition>vector_unit_2d &amp; scifir::vector_unit_2d::operator=</definition>
        <argsstring>(const string &amp;init_vector_2d)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_2d::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_vector_2d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="94" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="112" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a8911a8ef8ca2186381b5f2eb8934f0ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
        <definition>bool scifir::vector_unit_2d::operator==</definition>
        <argsstring>(vector_unit_2d x) const</argsstring>
        <name>operator==</name>
        <qualifiedname>scifir::vector_unit_2d::operator==</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="96" column="6" bodyfile="units/vector_unit_2d.cpp" bodystart="118" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a202d405ec4efe8e105b2e1eabb050ed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::point_to</definition>
        <argsstring>(direction::name x)</argsstring>
        <name>point_to</name>
        <qualifiedname>scifir::vector_unit_2d::point_to</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319" kindref="member">direction::name</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="98" column="6" bodyfile="units/vector_unit_2d.cpp" bodystart="131" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a040180b3b18ed8778e00d08f28a091bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::operator+=</definition>
        <argsstring>(const vector_unit_2d &amp;x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::vector_unit_2d::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="100" column="6" bodyfile="units/vector_unit_2d.cpp" bodystart="167" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1aa729124b53b6f5850bcf5f8fe2c6e567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::operator-=</definition>
        <argsstring>(vector_unit_2d x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::vector_unit_2d::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="101" column="6" bodyfile="units/vector_unit_2d.cpp" bodystart="182" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a48087760b026954027ae46a1a09b63a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator+</definition>
        <argsstring>(const vector_unit_2d &amp;x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::vector_unit_2d::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="103" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="195" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a93e5d91920b06e7ba9c0caedb850cd3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator-</definition>
        <argsstring>(vector_unit_2d x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::vector_unit_2d::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="104" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="211" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a305dbbc4e9609ed938c7b87a5d2af63b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator*</definition>
        <argsstring>(const scalar_unit &amp;x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::vector_unit_2d::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="106" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="228" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a679d2f2546db4fc1359a8d190e6d5b97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator/</definition>
        <argsstring>(const scalar_unit &amp;x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::vector_unit_2d::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="107" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="235" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1ab8c695aa4d45964dcdb51aab249c4b79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator^</definition>
        <argsstring>(const scalar_unit &amp;x) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::vector_unit_2d::operator^</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="108" column="16" bodyfile="units/vector_unit_2d.cpp" bodystart="242" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a7bb41cd99c3246ecca935e9a642345a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator+</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::vector_unit_2d::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="111" column="16" bodyfile="units/vector_unit_2d.hpp" bodystart="111" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a067b4fd5f457ed07a163594f0e3991f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator-</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::vector_unit_2d::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="119" column="16" bodyfile="units/vector_unit_2d.hpp" bodystart="119" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a9dbca5e97b2346831125117acc17d10e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator*</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::vector_unit_2d::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="127" column="16" bodyfile="units/vector_unit_2d.hpp" bodystart="127" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a48fb493c9a2c5990b0723c0a1ca34cfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator/</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::vector_unit_2d::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="135" column="16" bodyfile="units/vector_unit_2d.hpp" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a8b8196d1e5fd01123eee9975faa30fbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__integer__number" kindref="compound">is_integer_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>vector_unit_2d scifir::vector_unit_2d::operator^</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::vector_unit_2d::operator^</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="143" column="16" bodyfile="units/vector_unit_2d.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1aea8def22d2fdd0f93e05d2e2cfa77c02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::operator+=</definition>
        <argsstring>(U x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::vector_unit_2d::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="149" column="6" bodyfile="units/vector_unit_2d.hpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1adcb875c10ef45aa8795f02fd03035593" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::operator-=</definition>
        <argsstring>(U x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::vector_unit_2d::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="155" column="6" bodyfile="units/vector_unit_2d.hpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a59d046f3120a7e1db975fee1c8b2eae1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::operator*=</definition>
        <argsstring>(U x)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::vector_unit_2d::operator*=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="161" column="6" bodyfile="units/vector_unit_2d.hpp" bodystart="161" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a1d21a03998ad0ee9061d8331aff6f8c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::operator/=</definition>
        <argsstring>(U x)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::vector_unit_2d::operator/=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="171" column="6" bodyfile="units/vector_unit_2d.hpp" bodystart="171" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a6c322e23ba49e7b7bf7478dc51c2d36e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::vector_unit_2d::x_projection</definition>
        <argsstring>() const</argsstring>
        <name>x_projection</name>
        <qualifiedname>scifir::vector_unit_2d::x_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="180" column="20" bodyfile="units/vector_unit_2d.hpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1abf7fa4c19f437340a7c3a217fe624145" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::vector_unit_2d::y_projection</definition>
        <argsstring>() const</argsstring>
        <name>y_projection</name>
        <qualifiedname>scifir::vector_unit_2d::y_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="185" column="20" bodyfile="units/vector_unit_2d.hpp" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1afa0620bca6cb5609f6cb1d29440ffbf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::invert</definition>
        <argsstring>()</argsstring>
        <name>invert</name>
        <qualifiedname>scifir::vector_unit_2d::invert</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="190" column="13" bodyfile="units/vector_unit_2d.hpp" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1abb4b20585631cd1059a68898e872450e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::vector_unit_2d::vectorial_display</definition>
        <argsstring>(int number_of_decimals=2) const</argsstring>
        <name>vectorial_display</name>
        <qualifiedname>scifir::vector_unit_2d::vectorial_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="195" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1aaa396df0414ce3deebb0997cb964ba04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::vector_unit_2d::vectorial_derived_display</definition>
        <argsstring>(int number_of_decimals=2) const</argsstring>
        <name>vectorial_derived_display</name>
        <qualifiedname>scifir::vector_unit_2d::vectorial_derived_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="196" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a3d8adb9eabc0513690bb6c4ade13e0f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::vector_unit_2d::vectorial_custom_display</definition>
        <argsstring>(const string &amp;init_dimensions, int number_of_decimals=2) const</argsstring>
        <name>vectorial_custom_display</name>
        <qualifiedname>scifir::vector_unit_2d::vectorial_custom_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="197" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a07e373b19dd644dd5f2a50b03c7af829" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__2d" kindref="compound">vector_unit_2d</ref></type>
        <definition>static vector_unit_2d scifir::vector_unit_2d::cartesian_2d</definition>
        <argsstring>(const string &amp;new_dimensions, float new_x, float new_y)</argsstring>
        <name>cartesian_2d</name>
        <qualifiedname>scifir::vector_unit_2d::cartesian_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="83" column="23" bodyfile="units/vector_unit_2d.hpp" bodystart="83" bodyend="88"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classscifir_1_1vector__unit__2d_1a0c4710dd288e49874da5ab054fe7f431" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_2d::initialize_from_string</definition>
        <argsstring>(string init_vector_2d)</argsstring>
        <name>initialize_from_string</name>
        <qualifiedname>scifir::vector_unit_2d::initialize_from_string</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
          <declname>init_vector_2d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_2d.hpp" line="202" column="6" bodyfile="units/vector_unit_2d.cpp" bodystart="310" bodyend="319"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>scifir::scalar_unit</label>
        <link refid="classscifir_1_1scalar__unit"/>
      </node>
      <node id="1">
        <label>scifir::vector_unit_2d</label>
        <link refid="classscifir_1_1vector__unit__2d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>scifir::angle</label>
        <link refid="classscifir_1_1angle"/>
      </node>
      <node id="2">
        <label>scifir::scalar_unit</label>
        <link refid="classscifir_1_1scalar__unit"/>
      </node>
      <node id="1">
        <label>scifir::vector_unit_2d</label>
        <link refid="classscifir_1_1vector__unit__2d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>theta</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="units/vector_unit_2d.hpp" line="55" column="1" bodyfile="units/vector_unit_2d.hpp" bodystart="56" bodyend="203"/>
    <listofallmembers>
      <member refid="classscifir_1_1scalar__unit_1a28dc39e25122213c5d61cd56a260ef7b" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>add_dimension</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a07e373b19dd644dd5f2a50b03c7af829" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>cartesian_2d</name></member>
      <member refid="classscifir_1_1scalar__unit_1aaf48aa357423e1f65044190c27053657" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>change_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1adda2fd58d0782bb244251760978c853d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>change_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1acc46b7f3e73c08b61e4528bc3331fc60" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>custom_display</name></member>
      <member refid="classscifir_1_1scalar__unit_1aacf2082b3224a8ded5798a0f1727b8a9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>derived_display</name></member>
      <member refid="classscifir_1_1scalar__unit_1a31051a01340ebcb0d2616491a41e3857" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a5cec374081c39d864a7c3267b6edad09" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>display</name></member>
      <member refid="classscifir_1_1scalar__unit_1a14efad80e22f77b77b3b82de4c0c72ca" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>display_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a266c61f83787ad59fbd8fe9741c522c6" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>get_derived_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>get_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1aeb2d34ea9de078b70babda80182e677a" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>get_value</name></member>
      <member refid="classscifir_1_1scalar__unit_1a4c076490a43430ad72b9443bb2d68fb7" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a08e62ce3092e91269286dda5b8178869" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a83084c8cac8d4a018891588d2eded5fa" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a0b736b31c71a1240704cda3300a45039" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>has_empty_dimensions</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a0c4710dd288e49874da5ab054fe7f431" prot="private" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>initialize_from_string</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1afa0620bca6cb5609f6cb1d29440ffbf1" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>invert</name></member>
      <member refid="classscifir_1_1scalar__unit_1aff58f1afa3fe9f5b034a7acf1e04c141" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator float</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a305dbbc4e9609ed938c7b87a5d2af63b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator*</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a9dbca5e97b2346831125117acc17d10e" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator*</name></member>
      <member refid="classscifir_1_1scalar__unit_1a35658ee94f8a802aaa02188acf289d13" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator*</name></member>
      <member refid="classscifir_1_1scalar__unit_1a9b250120739fca9c027ea3929f31a555" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator*</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a59d046f3120a7e1db975fee1c8b2eae1" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a0b7780e065e19c2bbb3b918b0581ba27" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a48087760b026954027ae46a1a09b63a5" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator+</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a7bb41cd99c3246ecca935e9a642345a8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1a7aeafdb65fe4ab246c83c59b51efc731" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1ac395d00e4b4abaeb037d75bd83a068c4" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1a7c2b17b498e1afd1110c4f3a0b76e7b1" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator++</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1ef5e9e16ffeb5990f253f617885c8aa" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator++</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a040180b3b18ed8778e00d08f28a091bd" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1aea8def22d2fdd0f93e05d2e2cfa77c02" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1scalar__unit_1abbaf4dd62c32f8d16a6aaa1363430fd5" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a0d1abb8fa0e6feb7486033c4bc97bbe4" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a93e5d91920b06e7ba9c0caedb850cd3c" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator-</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a067b4fd5f457ed07a163594f0e3991f4" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8897df8c59682cf3fe28e2fe52bc2519" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a5277a3985d9aa59cb23a2f4c461f3c30" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1ffcae0b6dceb9b188b0f3f0698a8aa8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator--</name></member>
      <member refid="classscifir_1_1scalar__unit_1a04f488f4b0a5d6bf423221c250f2e663" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator--</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1aa729124b53b6f5850bcf5f8fe2c6e567" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1adcb875c10ef45aa8795f02fd03035593" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1scalar__unit_1acd9a736b50d0a914e043fc97b9323e90" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a17928a033e3292fea8ae8f4d087cac56" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a679d2f2546db4fc1359a8d190e6d5b97" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator/</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a48fb493c9a2c5990b0723c0a1ca34cfa" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator/</name></member>
      <member refid="classscifir_1_1scalar__unit_1a49db9492e36cfbde204ec4234888ad14" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator/</name></member>
      <member refid="classscifir_1_1scalar__unit_1a597ee369782cd285beec1a76f9794792" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator/</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a1d21a03998ad0ee9061d8331aff6f8c3" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1scalar__unit_1ab2e5d01cbd910afdad116d6c06739409" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a168ab49d6dedb5bd399a7ac7537deb5e" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a5c0fccfc2c496d289af8379e1fcd9016" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ae055d53c6f42f93727b5a5db35066408" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a9baeb5ba563890c2e8fbef7baad77b08" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a1aaaed9dedb58ce3d4de495820b91a30" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a8911a8ef8ca2186381b5f2eb8934f0ae" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator==</name></member>
      <member refid="classscifir_1_1scalar__unit_1a40e2dec78deafcf4c6ae24129a11fd5c" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator==</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ab8c695aa4d45964dcdb51aab249c4b79" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator^</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a8b8196d1e5fd01123eee9975faa30fbd" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>operator^</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1e7a6b741716f2a06116808cbc5b22a8" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_2d</scope><name>operator^</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a202d405ec4efe8e105b2e1eabb050ed7" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>point_to</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad78ee83a39d1d8a846545f4b3ff6339b" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>remove_dimension</name></member>
      <member refid="classscifir_1_1scalar__unit_1ab03d02ba63c30297b9739929659b38d5" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1afc354cb981dec3a98c2fe5070ec136b8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad24d9f352319e37086c5ef7c4e268f66" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a2620c8c54e21675cbf3e06b83a2bb911" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a786bed5f99bbbb1c76ed67078984c8cc" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad73c0ecc552ae1691f20b80c9cd9b835" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1ac8dd1f791316917205b10d9d667c1b40" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a60713bc43513df643c10575b618958cb" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a17a613a60e6b4100bd634f3bc9c88b3d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a915f798451bbdaec8a2682a7aaae3bc0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1aba1312368355c9e321cf2963ad05153b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a53116c89f3815a1ade42cc335ef043f3" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a30fe14e1861d1d49905e6bc07e941107" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>theta</name></member>
      <member refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>value</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ae6e0657b5f795ed9aec61a79438a26d8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a98d8063078f684a4266a885a153348d8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1acbb7e94692094b6e319b36e40bf6b442" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1aff3365ebb3e0e5fec344c4cbdb44dfd9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1acaf2a88bb5a785eb9f6e636dd369ed85" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a3ca5095c8bf1c30cb3a72ef8732d90c5" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ab51cac957eb6860cd7b35185526c1742" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a9daea76963960dc221154c70f79babb9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a8bc4a4829d37d04c4f334d5de31fb85c" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1abacf5e188060d339cc20e6d8761fb8bc" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1afea55898df669c84724743e4b3e76847" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a8002dbe48a045dfe7a797b3d58db31ba" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1acbcc77a4bd353c69533cf6159bebf1d7" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a3a6fd763d78bc4a1eff0448fb09c7e71" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ae9efa387fd50a7a5c7ab5109277804c3" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ac54eccbbb7bc6dc65a333e3761819288" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1aea3465e2d64f856439705a817f63f589" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1adea40dcc846a553b835dcf81f6919dc8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a0baeaf1acd00e295df6ca0dd128b714b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a709462a78482659ad8499e650b8ec5f1" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1ad1af5e0a75a65167ac34cda8ffd5f0f2" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a1525ea51add768e5ced7d08a17a942b9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a4c8b8973c28016bd216ceeb4fd5eab9e" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1acc9a28aa07196adb4d95c52249ee3e72" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vector_unit_2d</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a3d8adb9eabc0513690bb6c4ade13e0f9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vectorial_custom_display</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1aaa396df0414ce3deebb0997cb964ba04" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vectorial_derived_display</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1abb4b20585631cd1059a68898e872450e" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>vectorial_display</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1a6c322e23ba49e7b7bf7478dc51c2d36e" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>x_projection</name></member>
      <member refid="classscifir_1_1vector__unit__2d_1abf7fa4c19f437340a7c3a217fe624145" prot="public" virt="non-virtual"><scope>scifir::vector_unit_2d</scope><name>y_projection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
