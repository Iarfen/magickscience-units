<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1vector__unit__nd" kind="class" language="C++" prot="public">
    <compoundname>scifir::vector_unit_nd</compoundname>
    <basecompoundref refid="classscifir_1_1scalar__unit" prot="public" virt="non-virtual">scifir::scalar_unit</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1vector__unit__nd_1a17eed3849732c0256577450131dda3fc" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt;</type>
        <definition>vector&lt;angle&gt; scifir::vector_unit_nd::angles</definition>
        <argsstring></argsstring>
        <name>angles</name>
        <qualifiedname>scifir::vector_unit_nd::angles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="210" column="8" bodyfile="units/vector_unit_nd.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a48877ef99ffd213b7eb17133a9bfd470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>()</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="64" column="1" bodyfile="units/vector_unit_nd.cpp" bodystart="10" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ad18d11b4177ab643c1f13a61f5e617cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const vector_unit_nd &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="65" column="1" bodyfile="units/vector_unit_nd.cpp" bodystart="13" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a3cff2ac287463c59fc2c07da147472c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(vector_unit_nd &amp;&amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;&amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="66" column="1" bodyfile="units/vector_unit_nd.cpp" bodystart="16" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a6a70ff7efc4630e09aa69a13881d3a3d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(float, const string &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_dimensions</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="67" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1aad580721c8a8c55f408eba608f424fc8" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(float, const string &amp;, const vector&lt; float &gt; &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <defname>new_angles</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="68" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1aabc851c9209cfb66d9424039f298ecf8" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(float, const string &amp;, const vector&lt; angle &gt; &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <defname>new_angles</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="69" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a42e4397740da27422609ddaee9e05014" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(float, const vector&lt; dimension &gt; &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="70" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="33" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a58c98733b653c57659a66034b925f21c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(float, const vector&lt; dimension &gt; &amp;, const vector&lt; float &gt; &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <defname>new_angles</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="71" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="36" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a6350681fcbb14e9ce044d5b6439bea59" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(float, const vector&lt; dimension &gt; &amp;, const vector&lt; angle &gt; &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <defname>new_value</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <defname>new_dimensions</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <defname>new_angles</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="72" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="44" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a5e95d03fd2ddad89112b7ee9bb4d54b4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const scalar_unit &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="73" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="47" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1adbd547d5cd4863e123c3c38f8906a4f4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const scalar_unit &amp;, const vector&lt; float &gt; &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <defname>new_angles</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="74" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="50" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a564367d6d000c3d9000cb41d70dfcaff" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const scalar_unit &amp;, const vector&lt; angle &gt; &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <defname>new_angles</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="75" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="58" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a3d13782157818189e889634572960720" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const string &amp;, const vector&lt; float &gt; &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_scalar</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <defname>new_angles</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="76" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="61" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a5aa4333d7cd6bf64e316add6cfe87f0e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const string &amp;, const vector&lt; angle &gt; &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_scalar</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <defname>new_angles</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="77" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="69" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a54bff69cfc41755348a9a08fcae7085b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const string &amp;)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>init_vector_nd</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="78" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="72" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a66448d71896229a4f75e65940ec532fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
        <definition>vector_unit_nd &amp; scifir::vector_unit_nd::operator=</definition>
        <argsstring>(const vector_unit_nd &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_nd::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="102" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a080601214c9b3511956df19a028e87c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
        <definition>vector_unit_nd &amp; scifir::vector_unit_nd::operator=</definition>
        <argsstring>(vector_unit_nd &amp;&amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_nd::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;&amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="103" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a3fd3764863e27f925b1c535703d76a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
        <definition>vector_unit_nd &amp; scifir::vector_unit_nd::operator=</definition>
        <argsstring>(const scalar_unit &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_nd::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="104" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a9b652165d65fb42d617ff09a9f17bdfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
        <definition>vector_unit_nd &amp; scifir::vector_unit_nd::operator=</definition>
        <argsstring>(scalar_unit &amp;&amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_nd::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;&amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="105" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a872715e45eb2894183c2c439caf5fb38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::point_to</definition>
        <argsstring>(direction::name)</argsstring>
        <name>point_to</name>
        <qualifiedname>scifir::vector_unit_nd::point_to</qualifiedname>
        <param>
          <type>direction::name</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="107" column="6" bodyfile="units/vector_unit_nd.cpp" bodystart="112" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ae7909dcca9ebcd6dcadd7a038607fe09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::operator+=</definition>
        <argsstring>(const vector_unit_nd &amp;)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::vector_unit_nd::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
          <defname>y</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="109" column="6" bodyfile="units/vector_unit_nd.cpp" bodystart="301" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a7b54a70b64058393a4a0f7df28f3006a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::operator-=</definition>
        <argsstring>(vector_unit_nd)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::vector_unit_nd::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
          <defname>y</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="110" column="6" bodyfile="units/vector_unit_nd.cpp" bodystart="332" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ab8cdcdf9473f789b8c33cce90f6166b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator+</definition>
        <argsstring>(const vector_unit_nd &amp;) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::vector_unit_nd::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
          <defname>y</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="112" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="345" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a23790e937efd812b49b668e7cc1711c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator-</definition>
        <argsstring>(vector_unit_nd) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::vector_unit_nd::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
          <defname>y</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="113" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="386" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a6578385e7452dcb5eebd64db8cd47fd8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator*</definition>
        <argsstring>(const scalar_unit &amp;) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::vector_unit_nd::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="115" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="428" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a036d3708b63e5d745199d0094f6c5271" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator/</definition>
        <argsstring>(const scalar_unit &amp;) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::vector_unit_nd::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="116" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="451" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1aa392e63f3a74e930f5a37e5505f55821" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator^</definition>
        <argsstring>(const scalar_unit &amp;) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::vector_unit_nd::operator^</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <defname>x</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="117" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="474" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a9df16710a4b9cfbb27e2598f4e6d8c58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator+</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::vector_unit_nd::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="120" column="16" bodyfile="units/vector_unit_nd.hpp" bodystart="120" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a9368f2029ec8934e0c80432ff5613c30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator-</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::vector_unit_nd::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="128" column="16" bodyfile="units/vector_unit_nd.hpp" bodystart="128" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ab5c1c285036f7aa97eff575f7ab1700f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator*</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::vector_unit_nd::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="136" column="16" bodyfile="units/vector_unit_nd.hpp" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1abdd4310fcb74e73441350481a58c3ae2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator/</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::vector_unit_nd::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="144" column="16" bodyfile="units/vector_unit_nd.hpp" bodystart="144" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a5bf194c6c87e50c00cb6273275286d99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__integer__number" kindref="compound">is_integer_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator^</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::vector_unit_nd::operator^</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="152" column="16" bodyfile="units/vector_unit_nd.hpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a7d2d138ad2e160827157fbe577734a07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::operator+=</definition>
        <argsstring>(U y)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::vector_unit_nd::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="158" column="6" bodyfile="units/vector_unit_nd.hpp" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a3e2843a033ba65cb8880daabb88eb2be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::operator-=</definition>
        <argsstring>(U y)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::vector_unit_nd::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="164" column="6" bodyfile="units/vector_unit_nd.hpp" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1af70fbecf829d3e7705dac0e2790146c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::operator*=</definition>
        <argsstring>(U y)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::vector_unit_nd::operator*=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="170" column="6" bodyfile="units/vector_unit_nd.hpp" bodystart="170" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ac3d4f1475e3e82b589391d8a7049558c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::operator/=</definition>
        <argsstring>(U y)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::vector_unit_nd::operator/=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="180" column="6" bodyfile="units/vector_unit_nd.hpp" bodystart="180" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a375d5d9e20eee2a10c5fe583fd64b97f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
        <definition>bool scifir::vector_unit_nd::is_nd</definition>
        <argsstring>(unsigned int i) const</argsstring>
        <name>is_nd</name>
        <qualifiedname>scifir::vector_unit_nd::is_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">unsigned</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="189" column="13" bodyfile="units/vector_unit_nd.hpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a544b545723f9ef4592daea2facdd0407" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        <definition>int scifir::vector_unit_nd::get_nd</definition>
        <argsstring>() const</argsstring>
        <name>get_nd</name>
        <qualifiedname>scifir::vector_unit_nd::get_nd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="194" column="12" bodyfile="units/vector_unit_nd.hpp" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1abf83445ce650920236f1e8baf9e43199" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::vector_unit_nd::n_projection</definition>
        <argsstring>(int) const</argsstring>
        <name>n_projection</name>
        <qualifiedname>scifir::vector_unit_nd::n_projection</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="199" column="13" bodyfile="units/vector_unit_nd.cpp" bodystart="502" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a4ccdab8a3c34cd9467f879b8fb289478" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::vector_unit_nd::x_projection</definition>
        <argsstring>() const</argsstring>
        <name>x_projection</name>
        <qualifiedname>scifir::vector_unit_nd::x_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="200" column="13" bodyfile="units/vector_unit_nd.cpp" bodystart="522" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a39b5b6ca8fca3cf8bb88dc5ea3c27699" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::vector_unit_nd::y_projection</definition>
        <argsstring>() const</argsstring>
        <name>y_projection</name>
        <qualifiedname>scifir::vector_unit_nd::y_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="201" column="13" bodyfile="units/vector_unit_nd.cpp" bodystart="542" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ada70b23bb80c068edbf29b790b59cf34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::vector_unit_nd::z_projection</definition>
        <argsstring>() const</argsstring>
        <name>z_projection</name>
        <qualifiedname>scifir::vector_unit_nd::z_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="202" column="13" bodyfile="units/vector_unit_nd.cpp" bodystart="562" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a289c2f3f91da1201acbc71dc9e391bc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::invert</definition>
        <argsstring>()</argsstring>
        <name>invert</name>
        <qualifiedname>scifir::vector_unit_nd::invert</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="204" column="6" bodyfile="units/vector_unit_nd.cpp" bodystart="582" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a579f02aefd85061519daf248cb7c9ef9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::vector_unit_nd::vectorial_display</definition>
        <argsstring>(int=2) const</argsstring>
        <name>vectorial_display</name>
        <qualifiedname>scifir::vector_unit_nd::vectorial_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <defname>number_of_decimals</defname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="206" column="8" bodyfile="units/vector_unit_nd.cpp" bodystart="590" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ac1cabe7e541cfe0cf9a1db5b601b1758" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::vector_unit_nd::vectorial_derived_display</definition>
        <argsstring>(int=2) const</argsstring>
        <name>vectorial_derived_display</name>
        <qualifiedname>scifir::vector_unit_nd::vectorial_derived_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <defname>number_of_decimals</defname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="207" column="8" bodyfile="units/vector_unit_nd.cpp" bodystart="601" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1acd75fb71dd29e9984e0c3644e28e0e83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::vector_unit_nd::vectorial_custom_display</definition>
        <argsstring>(const string &amp;, int=2) const</argsstring>
        <name>vectorial_custom_display</name>
        <qualifiedname>scifir::vector_unit_nd::vectorial_custom_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <defname>new_dimensions_str</defname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <defname>number_of_decimals</defname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="208" column="8" bodyfile="units/vector_unit_nd.cpp" bodystart="612" bodyend="621"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a9be0b433aceee3918d40285ec0761bf0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>static vector_unit_nd scifir::vector_unit_nd::cartesian_2d</definition>
        <argsstring>(const string &amp;new_dimensions, float new_x, float new_y)</argsstring>
        <name>cartesian_2d</name>
        <qualifiedname>scifir::vector_unit_nd::cartesian_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="80" column="23" bodyfile="units/vector_unit_nd.hpp" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a8a31aaf77ce127253dd9a37b8f02cff6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>static vector_unit_nd scifir::vector_unit_nd::cartesian_3d</definition>
        <argsstring>(const string &amp;new_dimensions, float new_x, float new_y, float new_z)</argsstring>
        <name>cartesian_3d</name>
        <qualifiedname>scifir::vector_unit_nd::cartesian_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="87" column="23" bodyfile="units/vector_unit_nd.hpp" bodystart="87" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ab928f1d182a72b3bd07749db354d43e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>static vector_unit_nd scifir::vector_unit_nd::cylindrical</definition>
        <argsstring>(const string &amp;new_dimensions, float new_p, angle new_theta, float new_z)</argsstring>
        <name>cylindrical</name>
        <qualifiedname>scifir::vector_unit_nd::cylindrical</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="95" column="23" bodyfile="units/vector_unit_nd.hpp" bodystart="95" bodyend="100"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>scifir::scalar_unit</label>
        <link refid="classscifir_1_1scalar__unit"/>
      </node>
      <node id="1">
        <label>scifir::vector_unit_nd</label>
        <link refid="classscifir_1_1vector__unit__nd"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>scifir::scalar_unit</label>
        <link refid="classscifir_1_1scalar__unit"/>
      </node>
      <node id="1">
        <label>scifir::vector_unit_nd</label>
        <link refid="classscifir_1_1vector__unit__nd"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="units/vector_unit_nd.hpp" line="61" column="1" bodyfile="units/vector_unit_nd.hpp" bodystart="62" bodyend="211"/>
    <listofallmembers>
      <member refid="classscifir_1_1scalar__unit_1aadfdf56e7df6a99627fd468bd3c02ba1" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>add_dimension</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a17eed3849732c0256577450131dda3fc" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>angles</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a9be0b433aceee3918d40285ec0761bf0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>cartesian_2d</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a8a31aaf77ce127253dd9a37b8f02cff6" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>cartesian_3d</name></member>
      <member refid="classscifir_1_1scalar__unit_1ab58286c5045e63e2ca90571306626724" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>change_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1ac64621e7969dfc9aea0c12dd6ee048b8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>change_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1acfcf1821b6b0dbb4a05915d66f610833" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>custom_display</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ab928f1d182a72b3bd07749db354d43e0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>cylindrical</name></member>
      <member refid="classscifir_1_1scalar__unit_1ab6c6f9368db3f6b066c7aae5d7d1245f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>derived_display</name></member>
      <member refid="classscifir_1_1scalar__unit_1a47854a88ee4cacf7099c756e111b198d" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad160d04f5ea534a9c81142a5efd652a0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>display</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8c84a2ee69d730d6667b7103396730bd" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>display_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a49a18cc0d9347e017f2d13f1ce97889b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>get_derived_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1ac7a640edca2e933bc19a6194cb522204" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>get_dimensions</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a544b545723f9ef4592daea2facdd0407" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>get_nd</name></member>
      <member refid="classscifir_1_1scalar__unit_1aef86fe20676b9a14120270e6bb6c49b1" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>get_value</name></member>
      <member refid="classscifir_1_1scalar__unit_1a04899eed4d05a6267b1b44e832cc4d57" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1a2a12f475dc032f277bd577fd9b975d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a7edbf723398b8acd1a84669b1c3be30c" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1ae4b941ec3823e325a9d7290a56d4c226" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>has_empty_dimensions</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a289c2f3f91da1201acbc71dc9e391bc5" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>invert</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a375d5d9e20eee2a10c5fe583fd64b97f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>is_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1abf83445ce650920236f1e8baf9e43199" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>n_projection</name></member>
      <member refid="classscifir_1_1scalar__unit_1acab38ee2d23c051283285f08b9cac2c1" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator float</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a6578385e7452dcb5eebd64db8cd47fd8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator*</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ab5c1c285036f7aa97eff575f7ab1700f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator*</name></member>
      <member refid="classscifir_1_1scalar__unit_1ada6156aec98a6c56065f0cc774e8a7a7" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator*</name></member>
      <member refid="classscifir_1_1scalar__unit_1a76638cb2e1edb72efe75e985fcf8b923" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator*</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1af70fbecf829d3e7705dac0e2790146c0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1scalar__unit_1af82ffc4bfd5f62118ea38ed5376ba093" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ab8cdcdf9473f789b8c33cce90f6166b4" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator+</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a9df16710a4b9cfbb27e2598f4e6d8c58" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1a0ac0f8c43b2dea473b9e74b9ec510aa0" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1a05b93fe8c1ae6b47f457c5bfd7a65e60" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1af36b7d319844aad7f838a71aced338f4" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator++</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad4a110c3c13cf37db7329e70266a4ed7" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator++</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ae7909dcca9ebcd6dcadd7a038607fe09" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a7d2d138ad2e160827157fbe577734a07" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a5abaecf2a19c1d5a0bca214f0c1b55f2" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a118fcc15617a867f55e5b05a301e687c" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a23790e937efd812b49b668e7cc1711c6" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator-</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a9368f2029ec8934e0c80432ff5613c30" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a6c5f227e788c24feb0f82a0041a3ff91" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a020d08f5344018f5f17dd86e59b33ac2" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a180b89f1bb61a2d38175f2ceb408632d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator--</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1b069d8e8f353795ff9ea007ae7399eb" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator--</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a7b54a70b64058393a4a0f7df28f3006a" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a3e2843a033ba65cb8880daabb88eb2be" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1scalar__unit_1aa38e580247e28f32f744094e3a3ddf95" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a2f9328b2e6bd1114c144eb6267651dad" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a036d3708b63e5d745199d0094f6c5271" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator/</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1abdd4310fcb74e73441350481a58c3ae2" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator/</name></member>
      <member refid="classscifir_1_1scalar__unit_1a2de981aa756ea61334717a4b290446d2" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator/</name></member>
      <member refid="classscifir_1_1scalar__unit_1a186c0df0fe96b3da6e45cb4e580cf455" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator/</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ac3d4f1475e3e82b589391d8a7049558c" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a156e0918dadd06776e73c4fcf3b16576" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a66448d71896229a4f75e65940ec532fa" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a080601214c9b3511956df19a028e87c2" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a3fd3764863e27f925b1c535703d76a8f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a9b652165d65fb42d617ff09a9f17bdfe" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1aa392e63f3a74e930f5a37e5505f55821" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator^</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a5bf194c6c87e50c00cb6273275286d99" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator^</name></member>
      <member refid="classscifir_1_1scalar__unit_1a871cfaa2684c085ca2dcc75acc8f3fdc" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator^</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a872715e45eb2894183c2c439caf5fb38" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>point_to</name></member>
      <member refid="classscifir_1_1scalar__unit_1a2fec577682ea5238f05e1927fb92cb33" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>remove_dimension</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8ecd0310f82a51bfcc87b2aa892375b9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1af5216813417816260ebe01e51195d74f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a926fad376793fefcfda09c71a43c7b0b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad6c7d0c43bd2113048e3515719c32164" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a166ba9531851b6017f45798246e984c9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a5a666567f8c0783b0be278911a8da435" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a53864997d7b4e251260069eac6ffb3ca" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8019338691279bf0d0b9a3887d3fdb5c" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1ab8e7a7df3619e3d74ab1991c2ee0e2ea" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a46cf27440aa4714d68076ede0ae1a1fd" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a00a73942f2517b827e9df38e870f138c" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>set_from_string</name></member>
      <member refid="classscifir_1_1scalar__unit_1af1e3a220f55d66f5bb27ab6dfa84c632" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>value</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a48877ef99ffd213b7eb17133a9bfd470" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ad18d11b4177ab643c1f13a61f5e617cc" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a3cff2ac287463c59fc2c07da147472c7" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a6a70ff7efc4630e09aa69a13881d3a3d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1aad580721c8a8c55f408eba608f424fc8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1aabc851c9209cfb66d9424039f298ecf8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a42e4397740da27422609ddaee9e05014" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a58c98733b653c57659a66034b925f21c" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a6350681fcbb14e9ce044d5b6439bea59" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a5e95d03fd2ddad89112b7ee9bb4d54b4" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1adbd547d5cd4863e123c3c38f8906a4f4" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a564367d6d000c3d9000cb41d70dfcaff" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a3d13782157818189e889634572960720" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a5aa4333d7cd6bf64e316add6cfe87f0e" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a54bff69cfc41755348a9a08fcae7085b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1acd75fb71dd29e9984e0c3644e28e0e83" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vectorial_custom_display</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ac1cabe7e541cfe0cf9a1db5b601b1758" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vectorial_derived_display</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a579f02aefd85061519daf248cb7c9ef9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vectorial_display</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a4ccdab8a3c34cd9467f879b8fb289478" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>x_projection</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a39b5b6ca8fca3cf8bb88dc5ea3c27699" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>y_projection</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ada70b23bb80c068edbf29b790b59cf34" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>z_projection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
