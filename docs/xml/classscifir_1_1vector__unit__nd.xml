<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classscifir_1_1vector__unit__nd" kind="class" language="C++" prot="public">
    <compoundname>scifir::vector_unit_nd</compoundname>
    <basecompoundref refid="classscifir_1_1scalar__unit" prot="public" virt="non-virtual">scifir::scalar_unit</basecompoundref>
    <includes refid="vector__unit__nd_8hpp" local="no">vector_unit_nd.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classscifir_1_1vector__unit__nd_1a17eed3849732c0256577450131dda3fc" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt;</type>
        <definition>vector&lt;angle&gt; scifir::vector_unit_nd::angles</definition>
        <argsstring></argsstring>
        <name>angles</name>
        <qualifiedname>scifir::vector_unit_nd::angles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="230" column="8" bodyfile="units/vector_unit_nd.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a48877ef99ffd213b7eb17133a9bfd470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>()</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="63" column="1" bodyfile="units/vector_unit_nd.cpp" bodystart="10" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1abdce27e8a92c91c88c14cc1a0f28328a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const vector_unit_nd &amp;x)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="64" column="1" bodyfile="units/vector_unit_nd.cpp" bodystart="13" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a2feb55109e32f679236f4fd4e0f51ebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(vector_unit_nd &amp;&amp;x)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="65" column="1" bodyfile="units/vector_unit_nd.cpp" bodystart="16" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ae83bc4126e3635acda61e0b944d28cce" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(float new_value, const string &amp;init_dimensions)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="66" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="19" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ace6719eb1de17193c7cc3cf12e9ced7f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(float new_value, const string &amp;init_dimensions, const vector&lt; float &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="67" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a0b1fa099306696cd31b327b1cdf57abb" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(float new_value, const string &amp;init_dimensions, const vector&lt; angle &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="68" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a6bcfe008b6847b5977d935100db9bfb7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(double new_value, const string &amp;init_dimensions)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="69" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="33" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1aa2625007e78490225dfa9e3d15abe5d9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(double new_value, const string &amp;init_dimensions, const vector&lt; float &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="70" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="36" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a6534561233e6459b7edcc47ef30883fb" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(double new_value, const string &amp;init_dimensions, const vector&lt; angle &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="71" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="44" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a59a9703a9e566463a42a87d4c2463bf3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(long double new_value, const string &amp;init_dimensions)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="72" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="47" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1aa13c311fa8e9158e717a37f8827de88d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(long double new_value, const string &amp;init_dimensions, const vector&lt; float &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="73" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="50" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a842cc9b7f2543b59f7df54ba8b6fc34e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(long double new_value, const string &amp;init_dimensions, const vector&lt; angle &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="74" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="58" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a95a8c1d954de41b42bc6768c7df04251" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(int new_value, const string &amp;init_dimensions)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="75" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="61" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a4a4a9266041592df54e44263e70c174f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(int new_value, const string &amp;init_dimensions, const vector&lt; float &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="76" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="64" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a350d25549b309aafd355ba53d6531556" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(int new_value, const string &amp;init_dimensions, const vector&lt; angle &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="77" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="72" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1abc54e6c6c0bde1d95ba09f783ba8c1de" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(float new_value, const vector&lt; dimension &gt; &amp;new_dimensions)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="78" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="75" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a2c456b4fa6ecb16f53cd86a1c8e7952f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(float new_value, const vector&lt; dimension &gt; &amp;new_dimensions, const vector&lt; float &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="79" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="78" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a0300260317a8d6cb016cc7d287289f84" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(float new_value, const vector&lt; dimension &gt; &amp;new_dimensions, const vector&lt; angle &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="80" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="86" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a64bf0cca3a5ebf0f27611e7745b90ba7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(double new_value, const vector&lt; dimension &gt; &amp;new_dimensions)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="81" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="89" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a0b98afa47294c2b92a574a1a4a6cd419" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(double new_value, const vector&lt; dimension &gt; &amp;new_dimensions, const vector&lt; float &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="82" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="92" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1af3b6f77e799ff55e4abf4422699bf98b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(double new_value, const vector&lt; dimension &gt; &amp;new_dimensions, const vector&lt; angle &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="83" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="100" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a2eab5794697d68ad27681ba7a1d9f6ed" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(long double new_value, const vector&lt; dimension &gt; &amp;new_dimensions)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="84" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="103" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a4e83d08c60f1ac9de87f642ed771d305" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(long double new_value, const vector&lt; dimension &gt; &amp;new_dimensions, const vector&lt; float &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="85" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="106" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1abb9146e8fffde7d45e96e8c7d98d3bd1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(long double new_value, const vector&lt; dimension &gt; &amp;new_dimensions, const vector&lt; angle &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">long</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">double</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="86" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="114" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a232b31929a5c46e81435b50ece178905" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(int new_value, const vector&lt; dimension &gt; &amp;new_dimensions)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="87" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="117" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a9c47915106a6d5faae03bd2a8577ba71" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(int new_value, const vector&lt; dimension &gt; &amp;new_dimensions, const vector&lt; float &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="88" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a0f92adffe47b77242318fce76400e42c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(int new_value, const vector&lt; dimension &gt; &amp;new_dimensions, const vector&lt; angle &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1dimension" kindref="compound">dimension</ref> &gt; &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="89" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="128" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a337794a7fabcefd0cd5d668a16abed54" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const scalar_unit &amp;x)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="90" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="131" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ac2a3c89deeab8214d634579dd550c3b9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const scalar_unit &amp;x, const vector&lt; float &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="91" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="134" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ad787f36ba8c93fda679dc3a3ddbeb763" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const scalar_unit &amp;x, const vector&lt; angle &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="92" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="142" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a60fe95755ead6fadf35af77144f45f63" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const string &amp;init_scalar, const vector&lt; float &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_scalar</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="93" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="145" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a95caff6ee5585e44b02cf075bd15502d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const string &amp;init_scalar, const vector&lt; angle &gt; &amp;new_angles)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_scalar</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> vector&lt; <ref refid="classscifir_1_1angle" kindref="compound">angle</ref> &gt; &amp;</type>
          <declname>new_angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="94" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="153" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a039766193302fb45c7801a3d6ca4cf5a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>scifir::vector_unit_nd::vector_unit_nd</definition>
        <argsstring>(const string &amp;init_vector_nd)</argsstring>
        <name>vector_unit_nd</name>
        <qualifiedname>scifir::vector_unit_nd::vector_unit_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_vector_nd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="95" column="10" bodyfile="units/vector_unit_nd.cpp" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ad0952f0ddfd4f9bf50cc1928981de489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
        <definition>vector_unit_nd &amp; scifir::vector_unit_nd::operator=</definition>
        <argsstring>(const vector_unit_nd &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_nd::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="119" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="161" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1aaf45f794dc1614322f08cbd51f68f3b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
        <definition>vector_unit_nd &amp; scifir::vector_unit_nd::operator=</definition>
        <argsstring>(vector_unit_nd &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_nd::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="120" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="168" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ae05ba93b52592803d5cff7d9c68306cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
        <definition>vector_unit_nd &amp; scifir::vector_unit_nd::operator=</definition>
        <argsstring>(const scalar_unit &amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_nd::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="121" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a2157cbf2bc77f071822e65160de23705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
        <definition>vector_unit_nd &amp; scifir::vector_unit_nd::operator=</definition>
        <argsstring>(scalar_unit &amp;&amp;x)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_nd::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="122" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a6a791b68f88b87368a61ce3a3d66641a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
        <definition>vector_unit_nd &amp; scifir::vector_unit_nd::operator=</definition>
        <argsstring>(const string &amp;init_vector_nd)</argsstring>
        <name>operator=</name>
        <qualifiedname>scifir::vector_unit_nd::operator=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_vector_nd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="123" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="187" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a6e84feec1de8cf9929652b570eeabaeb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
        <definition>bool scifir::vector_unit_nd::operator==</definition>
        <argsstring>(vector_unit_nd x) const</argsstring>
        <name>operator==</name>
        <qualifiedname>scifir::vector_unit_nd::operator==</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="125" column="6" bodyfile="units/vector_unit_nd.cpp" bodystart="193" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ae41cb1b4cbb9e9023766c5bc0e5c1f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::point_to</definition>
        <argsstring>(direction::name x)</argsstring>
        <name>point_to</name>
        <qualifiedname>scifir::vector_unit_nd::point_to</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319" kindref="member">direction::name</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="127" column="6" bodyfile="units/vector_unit_nd.cpp" bodystart="206" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a443ed8e173fd54ee411f4a3da7940fb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::operator+=</definition>
        <argsstring>(const vector_unit_nd &amp;x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::vector_unit_nd::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="129" column="6" bodyfile="units/vector_unit_nd.cpp" bodystart="395" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a38606eb40f50c1949a6cc2eecf99c884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::operator-=</definition>
        <argsstring>(vector_unit_nd x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::vector_unit_nd::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="130" column="6" bodyfile="units/vector_unit_nd.cpp" bodystart="426" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1aa95c5c726591b56ab8c21309b7454c16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator+</definition>
        <argsstring>(const vector_unit_nd &amp;x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::vector_unit_nd::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="132" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="439" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1aaefa9684c8cba036f901b1a402fa3148" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator-</definition>
        <argsstring>(vector_unit_nd x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::vector_unit_nd::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="133" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="480" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a16cfc18d15b783b07a0809263330e25a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator*</definition>
        <argsstring>(const scalar_unit &amp;x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::vector_unit_nd::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="135" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="523" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a84e3baecee4f0d71e309b755022df5eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator/</definition>
        <argsstring>(const scalar_unit &amp;x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::vector_unit_nd::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="136" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="545" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a09a683c9860b0dc7c3a25b6c5de79bb9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator^</definition>
        <argsstring>(const scalar_unit &amp;x) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::vector_unit_nd::operator^</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="137" column="16" bodyfile="units/vector_unit_nd.cpp" bodystart="567" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a9df16710a4b9cfbb27e2598f4e6d8c58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator+</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator+</name>
        <qualifiedname>scifir::vector_unit_nd::operator+</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="140" column="16" bodyfile="units/vector_unit_nd.hpp" bodystart="140" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a9368f2029ec8934e0c80432ff5613c30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator-</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator-</name>
        <qualifiedname>scifir::vector_unit_nd::operator-</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="148" column="16" bodyfile="units/vector_unit_nd.hpp" bodystart="148" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ab5c1c285036f7aa97eff575f7ab1700f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator*</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator*</name>
        <qualifiedname>scifir::vector_unit_nd::operator*</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="156" column="16" bodyfile="units/vector_unit_nd.hpp" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1abdd4310fcb74e73441350481a58c3ae2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator/</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator/</name>
        <qualifiedname>scifir::vector_unit_nd::operator/</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="164" column="16" bodyfile="units/vector_unit_nd.hpp" bodystart="164" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a5bf194c6c87e50c00cb6273275286d99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__integer__number" kindref="compound">is_integer_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>vector_unit_nd scifir::vector_unit_nd::operator^</definition>
        <argsstring>(U x) const</argsstring>
        <name>operator^</name>
        <qualifiedname>scifir::vector_unit_nd::operator^</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="172" column="16" bodyfile="units/vector_unit_nd.hpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a22917c00ed4a724c8182322b7d69f5bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::operator+=</definition>
        <argsstring>(U x)</argsstring>
        <name>operator+=</name>
        <qualifiedname>scifir::vector_unit_nd::operator+=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="178" column="6" bodyfile="units/vector_unit_nd.hpp" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1aaa31d29e31cad60f10682bd68561738d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::operator-=</definition>
        <argsstring>(U x)</argsstring>
        <name>operator-=</name>
        <qualifiedname>scifir::vector_unit_nd::operator-=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="184" column="6" bodyfile="units/vector_unit_nd.hpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a33c629477717cc1bdbb0fcb2e114cefa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::operator*=</definition>
        <argsstring>(U x)</argsstring>
        <name>operator*=</name>
        <qualifiedname>scifir::vector_unit_nd::operator*=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="190" column="6" bodyfile="units/vector_unit_nd.hpp" bodystart="190" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a27bca2fb5243bdf023af93c8b758da88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          </param>
          <param>
            <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref></type>
            <defval><ref refid="classscifir_1_1coordinates__1d" kindref="compound">typename</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">enable_if</ref>&lt;<ref refid="structscifir_1_1is__number" kindref="compound">scifir::is_number</ref>&lt;<ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref>&gt;<ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">::value</ref>&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::operator/=</definition>
        <argsstring>(U x)</argsstring>
        <name>operator/=</name>
        <qualifiedname>scifir::vector_unit_nd::operator/=</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">U</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="200" column="6" bodyfile="units/vector_unit_nd.hpp" bodystart="200" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a375d5d9e20eee2a10c5fe583fd64b97f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">bool</ref></type>
        <definition>bool scifir::vector_unit_nd::is_nd</definition>
        <argsstring>(unsigned int i) const</argsstring>
        <name>is_nd</name>
        <qualifiedname>scifir::vector_unit_nd::is_nd</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">unsigned</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="209" column="13" bodyfile="units/vector_unit_nd.hpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a544b545723f9ef4592daea2facdd0407" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
        <definition>int scifir::vector_unit_nd::get_nd</definition>
        <argsstring>() const</argsstring>
        <name>get_nd</name>
        <qualifiedname>scifir::vector_unit_nd::get_nd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="214" column="12" bodyfile="units/vector_unit_nd.hpp" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a4e0703c092bf1acca73a5258901a0f58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::vector_unit_nd::n_projection</definition>
        <argsstring>(int i) const</argsstring>
        <name>n_projection</name>
        <qualifiedname>scifir::vector_unit_nd::n_projection</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="219" column="13" bodyfile="units/vector_unit_nd.cpp" bodystart="596" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a4ccdab8a3c34cd9467f879b8fb289478" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::vector_unit_nd::x_projection</definition>
        <argsstring>() const</argsstring>
        <name>x_projection</name>
        <qualifiedname>scifir::vector_unit_nd::x_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="220" column="13" bodyfile="units/vector_unit_nd.cpp" bodystart="616" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a39b5b6ca8fca3cf8bb88dc5ea3c27699" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::vector_unit_nd::y_projection</definition>
        <argsstring>() const</argsstring>
        <name>y_projection</name>
        <qualifiedname>scifir::vector_unit_nd::y_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="221" column="13" bodyfile="units/vector_unit_nd.cpp" bodystart="636" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ada70b23bb80c068edbf29b790b59cf34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref></type>
        <definition>scalar_unit scifir::vector_unit_nd::z_projection</definition>
        <argsstring>() const</argsstring>
        <name>z_projection</name>
        <qualifiedname>scifir::vector_unit_nd::z_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="222" column="13" bodyfile="units/vector_unit_nd.cpp" bodystart="656" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a289c2f3f91da1201acbc71dc9e391bc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::invert</definition>
        <argsstring>()</argsstring>
        <name>invert</name>
        <qualifiedname>scifir::vector_unit_nd::invert</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="224" column="6" bodyfile="units/vector_unit_nd.cpp" bodystart="676" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a54b4a6cbbee4da93280de2355a6176e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::vector_unit_nd::vectorial_display</definition>
        <argsstring>(int number_of_decimals=2) const</argsstring>
        <name>vectorial_display</name>
        <qualifiedname>scifir::vector_unit_nd::vectorial_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="226" column="8" bodyfile="units/vector_unit_nd.cpp" bodystart="689" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ab569434414860db7930f110fe995e45c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::vector_unit_nd::vectorial_derived_display</definition>
        <argsstring>(int number_of_decimals=2) const</argsstring>
        <name>vectorial_derived_display</name>
        <qualifiedname>scifir::vector_unit_nd::vectorial_derived_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="227" column="8" bodyfile="units/vector_unit_nd.cpp" bodystart="700" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a645c497b05427cd49bf85c3bf6055e1a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
        <definition>string scifir::vector_unit_nd::vectorial_custom_display</definition>
        <argsstring>(const string &amp;init_dimensions, int number_of_decimals=2) const</argsstring>
        <name>vectorial_custom_display</name>
        <qualifiedname>scifir::vector_unit_nd::vectorial_custom_display</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>init_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">int</ref></type>
          <declname>number_of_decimals</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="228" column="8" bodyfile="units/vector_unit_nd.cpp" bodystart="711" bodyend="720"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a9be0b433aceee3918d40285ec0761bf0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>static vector_unit_nd scifir::vector_unit_nd::cartesian_2d</definition>
        <argsstring>(const string &amp;new_dimensions, float new_x, float new_y)</argsstring>
        <name>cartesian_2d</name>
        <qualifiedname>scifir::vector_unit_nd::cartesian_2d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="97" column="23" bodyfile="units/vector_unit_nd.hpp" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a8a31aaf77ce127253dd9a37b8f02cff6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>static vector_unit_nd scifir::vector_unit_nd::cartesian_3d</definition>
        <argsstring>(const string &amp;new_dimensions, float new_x, float new_y, float new_z)</argsstring>
        <name>cartesian_3d</name>
        <qualifiedname>scifir::vector_unit_nd::cartesian_3d</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_x</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_y</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="104" column="23" bodyfile="units/vector_unit_nd.hpp" bodystart="104" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1ab928f1d182a72b3bd07749db354d43e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__nd" kindref="compound">vector_unit_nd</ref></type>
        <definition>static vector_unit_nd scifir::vector_unit_nd::cylindrical</definition>
        <argsstring>(const string &amp;new_dimensions, float new_p, angle new_theta, float new_z)</argsstring>
        <name>cylindrical</name>
        <qualifiedname>scifir::vector_unit_nd::cylindrical</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">const</ref> <ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref> &amp;</type>
          <declname>new_dimensions</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_p</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1angle" kindref="compound">angle</ref></type>
          <declname>new_theta</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">float</ref></type>
          <declname>new_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="112" column="23" bodyfile="units/vector_unit_nd.hpp" bodystart="112" bodyend="117"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classscifir_1_1vector__unit__nd_1a8977bbc85ca58b5f7084a8c67db9503f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">void</ref></type>
        <definition>void scifir::vector_unit_nd::initialize_from_string</definition>
        <argsstring>(string init_vector_nd)</argsstring>
        <name>initialize_from_string</name>
        <qualifiedname>scifir::vector_unit_nd::initialize_from_string</qualifiedname>
        <param>
          <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">string</ref></type>
          <declname>init_vector_nd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_nd.hpp" line="233" column="6" bodyfile="units/vector_unit_nd.cpp" bodystart="722" bodyend="735"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>scifir::scalar_unit</label>
        <link refid="classscifir_1_1scalar__unit"/>
      </node>
      <node id="1">
        <label>scifir::vector_unit_nd</label>
        <link refid="classscifir_1_1vector__unit__nd"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>scifir::scalar_unit</label>
        <link refid="classscifir_1_1scalar__unit"/>
      </node>
      <node id="1">
        <label>scifir::vector_unit_nd</label>
        <link refid="classscifir_1_1vector__unit__nd"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="units/vector_unit_nd.hpp" line="60" column="1" bodyfile="units/vector_unit_nd.hpp" bodystart="61" bodyend="234"/>
    <listofallmembers>
      <member refid="classscifir_1_1scalar__unit_1a28dc39e25122213c5d61cd56a260ef7b" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>add_dimension</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a17eed3849732c0256577450131dda3fc" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>angles</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a9be0b433aceee3918d40285ec0761bf0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>cartesian_2d</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a8a31aaf77ce127253dd9a37b8f02cff6" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>cartesian_3d</name></member>
      <member refid="classscifir_1_1scalar__unit_1aaf48aa357423e1f65044190c27053657" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>change_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1adda2fd58d0782bb244251760978c853d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>change_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1acc46b7f3e73c08b61e4528bc3331fc60" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>custom_display</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ab928f1d182a72b3bd07749db354d43e0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>cylindrical</name></member>
      <member refid="classscifir_1_1scalar__unit_1aacf2082b3224a8ded5798a0f1727b8a9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>derived_display</name></member>
      <member refid="classscifir_1_1scalar__unit_1a31051a01340ebcb0d2616491a41e3857" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a5cec374081c39d864a7c3267b6edad09" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>display</name></member>
      <member refid="classscifir_1_1scalar__unit_1a14efad80e22f77b77b3b82de4c0c72ca" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>display_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a266c61f83787ad59fbd8fe9741c522c6" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>get_derived_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>get_dimensions</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a544b545723f9ef4592daea2facdd0407" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>get_nd</name></member>
      <member refid="classscifir_1_1scalar__unit_1aeb2d34ea9de078b70babda80182e677a" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>get_value</name></member>
      <member refid="classscifir_1_1scalar__unit_1a4c076490a43430ad72b9443bb2d68fb7" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a08e62ce3092e91269286dda5b8178869" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a83084c8cac8d4a018891588d2eded5fa" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>has_dimensions</name></member>
      <member refid="classscifir_1_1scalar__unit_1a0b736b31c71a1240704cda3300a45039" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>has_empty_dimensions</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a8977bbc85ca58b5f7084a8c67db9503f" prot="private" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>initialize_from_string</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a289c2f3f91da1201acbc71dc9e391bc5" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>invert</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a375d5d9e20eee2a10c5fe583fd64b97f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>is_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a4e0703c092bf1acca73a5258901a0f58" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>n_projection</name></member>
      <member refid="classscifir_1_1scalar__unit_1aff58f1afa3fe9f5b034a7acf1e04c141" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator float</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a16cfc18d15b783b07a0809263330e25a" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator*</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ab5c1c285036f7aa97eff575f7ab1700f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator*</name></member>
      <member refid="classscifir_1_1scalar__unit_1a35658ee94f8a802aaa02188acf289d13" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator*</name></member>
      <member refid="classscifir_1_1scalar__unit_1a9b250120739fca9c027ea3929f31a555" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator*</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a33c629477717cc1bdbb0fcb2e114cefa" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a0b7780e065e19c2bbb3b918b0581ba27" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator*=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1aa95c5c726591b56ab8c21309b7454c16" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator+</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a9df16710a4b9cfbb27e2598f4e6d8c58" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1a7aeafdb65fe4ab246c83c59b51efc731" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1ac395d00e4b4abaeb037d75bd83a068c4" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator+</name></member>
      <member refid="classscifir_1_1scalar__unit_1a7c2b17b498e1afd1110c4f3a0b76e7b1" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator++</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1ef5e9e16ffeb5990f253f617885c8aa" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator++</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a443ed8e173fd54ee411f4a3da7940fb7" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a22917c00ed4a724c8182322b7d69f5bc" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1scalar__unit_1abbaf4dd62c32f8d16a6aaa1363430fd5" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a0d1abb8fa0e6feb7486033c4bc97bbe4" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator+=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1aaefa9684c8cba036f901b1a402fa3148" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator-</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a9368f2029ec8934e0c80432ff5613c30" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a8897df8c59682cf3fe28e2fe52bc2519" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a5277a3985d9aa59cb23a2f4c461f3c30" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator-</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1ffcae0b6dceb9b188b0f3f0698a8aa8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator--</name></member>
      <member refid="classscifir_1_1scalar__unit_1a04f488f4b0a5d6bf423221c250f2e663" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator--</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a38606eb40f50c1949a6cc2eecf99c884" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1aaa31d29e31cad60f10682bd68561738d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1scalar__unit_1acd9a736b50d0a914e043fc97b9323e90" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1scalar__unit_1a17928a033e3292fea8ae8f4d087cac56" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator-=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a84e3baecee4f0d71e309b755022df5eb" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator/</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1abdd4310fcb74e73441350481a58c3ae2" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator/</name></member>
      <member refid="classscifir_1_1scalar__unit_1a49db9492e36cfbde204ec4234888ad14" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator/</name></member>
      <member refid="classscifir_1_1scalar__unit_1a597ee369782cd285beec1a76f9794792" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator/</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a27bca2fb5243bdf023af93c8b758da88" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1scalar__unit_1ab2e5d01cbd910afdad116d6c06739409" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator/=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ad0952f0ddfd4f9bf50cc1928981de489" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1aaf45f794dc1614322f08cbd51f68f3b9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ae05ba93b52592803d5cff7d9c68306cc" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a2157cbf2bc77f071822e65160de23705" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a6a791b68f88b87368a61ce3a3d66641a" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator=</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a6e84feec1de8cf9929652b570eeabaeb" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator==</name></member>
      <member refid="classscifir_1_1scalar__unit_1a40e2dec78deafcf4c6ae24129a11fd5c" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator==</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a09a683c9860b0dc7c3a25b6c5de79bb9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator^</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a5bf194c6c87e50c00cb6273275286d99" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>operator^</name></member>
      <member refid="classscifir_1_1scalar__unit_1a1e7a6b741716f2a06116808cbc5b22a8" prot="public" virt="non-virtual" ambiguityscope="scifir::scalar_unit::"><scope>scifir::vector_unit_nd</scope><name>operator^</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ae41cb1b4cbb9e9023766c5bc0e5c1f3b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>point_to</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad78ee83a39d1d8a846545f4b3ff6339b" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>remove_dimension</name></member>
      <member refid="classscifir_1_1scalar__unit_1ab03d02ba63c30297b9739929659b38d5" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1afc354cb981dec3a98c2fe5070ec136b8" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad24d9f352319e37086c5ef7c4e268f66" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a2620c8c54e21675cbf3e06b83a2bb911" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a786bed5f99bbbb1c76ed67078984c8cc" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1ad73c0ecc552ae1691f20b80c9cd9b835" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1ac8dd1f791316917205b10d9d667c1b40" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a60713bc43513df643c10575b618958cb" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a17a613a60e6b4100bd634f3bc9c88b3d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a915f798451bbdaec8a2682a7aaae3bc0" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1aba1312368355c9e321cf2963ad05153b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a53116c89f3815a1ade42cc335ef043f3" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>scalar_unit</name></member>
      <member refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" prot="protected" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>value</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a48877ef99ffd213b7eb17133a9bfd470" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1abdce27e8a92c91c88c14cc1a0f28328a" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a2feb55109e32f679236f4fd4e0f51ebc" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ae83bc4126e3635acda61e0b944d28cce" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ace6719eb1de17193c7cc3cf12e9ced7f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a0b1fa099306696cd31b327b1cdf57abb" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a6bcfe008b6847b5977d935100db9bfb7" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1aa2625007e78490225dfa9e3d15abe5d9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a6534561233e6459b7edcc47ef30883fb" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a59a9703a9e566463a42a87d4c2463bf3" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1aa13c311fa8e9158e717a37f8827de88d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a842cc9b7f2543b59f7df54ba8b6fc34e" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a95a8c1d954de41b42bc6768c7df04251" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a4a4a9266041592df54e44263e70c174f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a350d25549b309aafd355ba53d6531556" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1abc54e6c6c0bde1d95ba09f783ba8c1de" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a2c456b4fa6ecb16f53cd86a1c8e7952f" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a0300260317a8d6cb016cc7d287289f84" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a64bf0cca3a5ebf0f27611e7745b90ba7" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a0b98afa47294c2b92a574a1a4a6cd419" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1af3b6f77e799ff55e4abf4422699bf98b" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a2eab5794697d68ad27681ba7a1d9f6ed" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a4e83d08c60f1ac9de87f642ed771d305" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1abb9146e8fffde7d45e96e8c7d98d3bd1" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a232b31929a5c46e81435b50ece178905" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a9c47915106a6d5faae03bd2a8577ba71" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a0f92adffe47b77242318fce76400e42c" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a337794a7fabcefd0cd5d668a16abed54" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ac2a3c89deeab8214d634579dd550c3b9" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ad787f36ba8c93fda679dc3a3ddbeb763" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a60fe95755ead6fadf35af77144f45f63" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a95caff6ee5585e44b02cf075bd15502d" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a039766193302fb45c7801a3d6ca4cf5a" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vector_unit_nd</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a645c497b05427cd49bf85c3bf6055e1a" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vectorial_custom_display</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ab569434414860db7930f110fe995e45c" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vectorial_derived_display</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a54b4a6cbbee4da93280de2355a6176e3" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>vectorial_display</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a4ccdab8a3c34cd9467f879b8fb289478" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>x_projection</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1a39b5b6ca8fca3cf8bb88dc5ea3c27699" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>y_projection</name></member>
      <member refid="classscifir_1_1vector__unit__nd_1ada70b23bb80c068edbf29b790b59cf34" prot="public" virt="non-virtual"><scope>scifir::vector_unit_nd</scope><name>z_projection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
