<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="lab__number_8hpp" kind="file" language="C++">
    <compoundname>lab_number.hpp</compoundname>
    <includes refid="is__number_8hpp" local="yes">../util/is_number.hpp</includes>
    <includes refid="types_8hpp" local="yes">../util/types.hpp</includes>
    <includes refid="scalar__unit_8hpp" local="yes">../units/scalar_unit.hpp</includes>
    <includes local="yes">boost/algorithm/string.hpp</includes>
    <includes local="no">cmath</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includedby refid="lab__number_8cpp" local="yes">meca_number/lab_number.cpp</includedby>
    <includedby refid="units_8hpp" local="yes">units.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>meca_number/lab_number.hpp</label>
        <link refid="lab__number_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>../units/dimension.hpp</label>
        <link refid="dimension_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>../units/prefix.hpp</label>
        <link refid="prefix_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../units/scalar_unit.hpp</label>
        <link refid="scalar__unit_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../util/is_number.hpp</label>
        <link refid="is__number_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../util/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="12">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="16">
        <label>cmath</label>
      </node>
      <node id="15">
        <label>cstddef</label>
      </node>
      <node id="9">
        <label>cstdint</label>
      </node>
      <node id="14">
        <label>cstring</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="17">
        <label>set</label>
      </node>
      <node id="18">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="20">
        <label>string_view</label>
      </node>
      <node id="3">
        <label>type_traits</label>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>meca_number/lab_number.cpp</label>
        <link refid="lab__number_8cpp"/>
      </node>
      <node id="1">
        <label>meca_number/lab_number.hpp</label>
        <link refid="lab__number_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>units.hpp</label>
        <link refid="units_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classscifir_1_1lab__number" prot="public">scifir::lab_number</innerclass>
    <innernamespace refid="namespacescifir">scifir</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="lab__number_8hpp_1a5d32c7e486a76a8dc134301ac210b104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const scifir::lab_number&lt; T &gt; &amp;x, const scifir::lab_number&lt; U &gt; &amp;y)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; U &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="119" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="119" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="lab__number_8hpp_1adc79a4b00cba09a15b767fa26d0d6bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const scifir::lab_number&lt; T &gt; &amp;x, const scifir::lab_number&lt; U &gt; &amp;y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; U &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="132" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="lab__number_8hpp_1a5ff3509983054476e2a98435ed08755e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const scifir::lab_number&lt; T &gt; &amp;x, const string &amp;init_lab_number)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>init_lab_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="138" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="lab__number_8hpp_1a169033d72eca9e683f5b6459fcc7fcbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const scifir::lab_number&lt; T &gt; &amp;x, const string &amp;init_lab_number)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>init_lab_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="145" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="lab__number_8hpp_1a8c3b2733f529bb6a685258013120c084" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const string &amp;init_lab_number, const scifir::lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator==</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_lab_number</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="151" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="lab__number_8hpp_1a0c015f0ccbd975d7b519be314e0e0dbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const string &amp;init_lab_number, const scifir::lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_lab_number</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="158" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="lab__number_8hpp_1a56697b7105d93cd83d34fcb98bec6373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void operator+=</definition>
        <argsstring>(string &amp;x, const scifir::lab_number&lt; T &gt; &amp;y)</argsstring>
        <name>operator+=</name>
        <param>
          <type>string &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="164" column="6" bodyfile="meca_number/lab_number.hpp" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="lab__number_8hpp_1aaa45aec8105922a392c17f15e70a855f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>string</type>
        <definition>string operator+</definition>
        <argsstring>(const string &amp;x, const scifir::lab_number&lt; T &gt; &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const string &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="170" column="8" bodyfile="meca_number/lab_number.hpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="lab__number_8hpp_1a22b193037173b03dd69498358f00e740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>string</type>
        <definition>string operator+</definition>
        <argsstring>(const scifir::lab_number&lt; T &gt; &amp;x, const string &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="176" column="8" bodyfile="meca_number/lab_number.hpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="lab__number_8hpp_1ad07977c8192b57b95be6bc207a4bc3da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>ostream &amp;</type>
        <definition>ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const scifir::lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="182" column="1" bodyfile="meca_number/lab_number.hpp" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="lab__number_8hpp_1a73a7697cdf8fc906059714d6b37132bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>istream &amp;</type>
        <definition>istream &amp; operator&gt;&gt;</definition>
        <argsstring>(istream &amp;is, scifir::lab_number&lt; T &gt; &amp;x)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1lab__number" kindref="compound">scifir::lab_number</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="meca_number/lab_number.hpp" line="188" column="9" bodyfile="meca_number/lab_number.hpp" bodystart="188" bodyend="195"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SCIFIR_UNITS_MECA_NUMBER_LAB_NUMBER_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIFIR_UNITS_MECA_NUMBER_LAB_NUMBER_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/is_number.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/types.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../units/scalar_unit.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/algorithm/string.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacescifir" kindref="compound">scifir</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="19" refid="classscifir_1_1lab__number" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classscifir_1_1lab__number" kindref="compound">lab_number</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="classscifir_1_1lab__number_1a7a9a83ef6d51f55e30477f1101b73037" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1a7a9a83ef6d51f55e30477f1101b73037" kindref="member">lab_number</ref>()<sp/>:<sp/><ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref>(),<ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classscifir_1_1lab__number_1a3253ee657dbe92a1d1ef86cc04a3db86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1a3253ee657dbe92a1d1ef86cc04a3db86" kindref="member">lab_number</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>&amp;<sp/>x)<sp/>:<sp/><ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref>(x.<ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref>),<ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref>(x.<ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classscifir_1_1lab__number_1aa3c6996e9a044e34d835e41829ee6648" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1aa3c6996e9a044e34d835e41829ee6648" kindref="member">lab_number</ref>(<ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>&amp;&amp;<sp/>x)<sp/>:<sp/><ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref>(std::move(x.<ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref>)),<ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref>(std::move(x.<ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref>))</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classscifir_1_1lab__number_1a8684fac1201417ca1f6d09d27df967ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1lab__number_1a8684fac1201417ca1f6d09d27df967ee" kindref="member">lab_number</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>x,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>y)<sp/>:<sp/><ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref>(x),<ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref>(y)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classscifir_1_1lab__number_1a28b2ad50f1b21c5025370a51a42af5c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1lab__number_1a28b2ad50f1b21c5025370a51a42af5c1" kindref="member">lab_number</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>x,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>y)<sp/>:<sp/><ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref>(x),<ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref>(y)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classscifir_1_1lab__number_1aa8cfcfa3ae0d44c0bbe51ea80fa01798" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1lab__number_1aa8cfcfa3ae0d44c0bbe51ea80fa01798" kindref="member">lab_number</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">init_lab_number</ref>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">vector&lt;string&gt;</ref><sp/>values;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::split(values,<ref refid="classscifir_1_1coordinates__1d" kindref="compound">init_lab_number</ref>,boost::is_any_of(</highlight><highlight class="stringliteral">&quot;+-,\u00B1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(values.size()<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::trim(values[0]);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::trim(values[2]);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref><sp/>=<sp/>T(values[0]);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref><sp/>=<sp/>T(values[2]);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classscifir_1_1lab__number_1a4e3a41a878e76f15af9ade9222aa7e7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>&amp;<sp/><ref refid="classscifir_1_1lab__number_1a4e3a41a878e76f15af9ade9222aa7e7a" kindref="member">operator =</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref><sp/>=<sp/>x.value;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref><sp/>=<sp/>x.error_value;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classscifir_1_1lab__number_1a6aa1e6a3966a68901866f32905129721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>&amp;<sp/><ref refid="classscifir_1_1lab__number_1a4e3a41a878e76f15af9ade9222aa7e7a" kindref="member">operator =</ref>(<ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>&amp;&amp;<sp/>x)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref><sp/>=<sp/>std::move(x.value);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref><sp/>=<sp/>std::move(x.error_value);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classscifir_1_1lab__number_1ab37ace1c12a3e65c0bf99d80bbefd48a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref><sp/><ref refid="classscifir_1_1lab__number_1ab37ace1c12a3e65c0bf99d80bbefd48a" kindref="member">operator +</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="65"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>(<ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref><sp/>+<sp/>x.value,<ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref><sp/>+<sp/>x.error_value);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classscifir_1_1lab__number_1ade0ff6438633e1880834176ccf03395f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref><sp/><ref refid="classscifir_1_1lab__number_1ade0ff6438633e1880834176ccf03395f" kindref="member">operator -</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="70"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>(<ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref><sp/>-<sp/>x.value,<ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref><sp/>-<sp/>x.error_value);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="75" refid="classscifir_1_1lab__number_1ad9d090252280d25efa25f68804901f7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;scalar_unit&gt;</ref><sp/><ref refid="classscifir_1_1lab__number_1ad9d090252280d25efa25f68804901f7a" kindref="member">operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;U&gt;</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;scalar_unit&gt;</ref>(<ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref><sp/>*<sp/>x.value,<ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref><sp/>*<sp/>x.error_value);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="81" refid="classscifir_1_1lab__number_1a6597e839f8dae6eb2a7dae750e28cbea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;scalar_unit&gt;</ref><sp/><ref refid="classscifir_1_1lab__number_1a6597e839f8dae6eb2a7dae750e28cbea" kindref="member">operator /</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;U&gt;</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="82"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;scalar_unit&gt;</ref>(<ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref><sp/>/<sp/>x.value,<ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref><sp/>/<sp/>x.error_value);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classscifir_1_1lab__number_1aae4742986e4c70e2daa51893394676a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1lab__number_1aae4742986e4c70e2daa51893394676a3" kindref="member">operator +=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref><sp/>+=<sp/>x.value;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref><sp/>+=<sp/>x.error_value;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classscifir_1_1lab__number_1a141dc7aae4d797da45426dcf4d289f4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1lab__number_1a141dc7aae4d797da45426dcf4d289f4b" kindref="member">operator -=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref><sp/>-=<sp/>x.value;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref><sp/>-=<sp/>x.error_value;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classscifir_1_1lab__number_1a5cac4667258cf23700b45ea6f7f0e87a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1lab__number_1a5cac4667258cf23700b45ea6f7f0e87a" kindref="member">display</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">number_of_decimals</ref><sp/>=<sp/>2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="99"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">ostringstream</ref><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">output</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">output</ref><sp/>&lt;&lt;<sp/><ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref>.display(<ref refid="classscifir_1_1coordinates__1d" kindref="compound">number_of_decimals</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\u00B1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref>.display(<ref refid="classscifir_1_1coordinates__1d" kindref="compound">number_of_decimals</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">output</ref>.str();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="classscifir_1_1lab__number_1a25d1942d4c74cdee805debcf87508f42" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="106" refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="classscifir_1_1lab__number_1a47a47719c9dc3a059d7dc78f520dfe66" kindref="member">error_value</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="110" refid="namespacescifir_1a8678aa370e625c458e82b7b74b96d278" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="namespacescifir_1a421182d5f93abcbbaeadc7c14112bdd5" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">lab_number&lt;T&gt;</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.display(2);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacescifir_1a6f938e487f453f713e335dd6f884a413" kindref="member">is_lab_number</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_lab_number);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="119" refid="lab__number_8hpp_1a5d32c7e486a76a8dc134301ac210b104" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lab__number_8hpp_1a5d32c7e486a76a8dc134301ac210b104" kindref="member">operator ==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;U&gt;</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.value<sp/>==<sp/>y.value<sp/>and<sp/>x.error_value<sp/>==<sp/>y.error_value)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="132" refid="lab__number_8hpp_1adc79a4b00cba09a15b767fa26d0d6bb5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lab__number_8hpp_1adc79a4b00cba09a15b767fa26d0d6bb5" kindref="member">operator !=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;U&gt;</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(x<sp/>==<sp/>y);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="138" refid="lab__number_8hpp_1a5ff3509983054476e2a98435ed08755e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lab__number_8hpp_1a5d32c7e486a76a8dc134301ac210b104" kindref="member">operator ==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_lab_number)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref><sp/>y(init_lab_number);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>y);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="145" refid="lab__number_8hpp_1a169033d72eca9e683f5b6459fcc7fcbd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lab__number_8hpp_1adc79a4b00cba09a15b767fa26d0d6bb5" kindref="member">operator !=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_lab_number)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(x<sp/>==<sp/>init_lab_number);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="151" refid="lab__number_8hpp_1a8c3b2733f529bb6a685258013120c084" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lab__number_8hpp_1a5d32c7e486a76a8dc134301ac210b104" kindref="member">operator ==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_lab_number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref><sp/>y(init_lab_number);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>y);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="158" refid="lab__number_8hpp_1a0c015f0ccbd975d7b519be314e0e0dbf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lab__number_8hpp_1adc79a4b00cba09a15b767fa26d0d6bb5" kindref="member">operator !=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_lab_number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(init_lab_number<sp/>==<sp/>x);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="164" refid="lab__number_8hpp_1a56697b7105d93cd83d34fcb98bec6373" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lab__number_8hpp_1a56697b7105d93cd83d34fcb98bec6373" kindref="member">operator +=</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>to_string(y);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="170" refid="lab__number_8hpp_1aaa45aec8105922a392c17f15e70a855f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="lab__number_8hpp_1aaa45aec8105922a392c17f15e70a855f" kindref="member">operator +</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>+<sp/>to_string(y);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="176" refid="lab__number_8hpp_1a22b193037173b03dd69498358f00e740" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="lab__number_8hpp_1aaa45aec8105922a392c17f15e70a855f" kindref="member">operator +</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>y)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>to_string(x)<sp/>+<sp/>y;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="182" refid="lab__number_8hpp_1ad07977c8192b57b95be6bc207a4bc3da" refkind="member"><highlight class="normal">ostream&amp;<sp/><ref refid="lab__number_8hpp_1ad07977c8192b57b95be6bc207a4bc3da" kindref="member">operator &lt;&lt;</ref>(ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>to_string(x);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="188" refid="lab__number_8hpp_1a73a7697cdf8fc906059714d6b37132bc" refkind="member"><highlight class="normal">istream&amp;<sp/><ref refid="lab__number_8hpp_1a73a7697cdf8fc906059714d6b37132bc" kindref="member">operator &gt;&gt;</ref>(istream&amp;<sp/>is,<sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a[256];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>is.getline(a,<sp/>256);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>b(a);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::lab_number&lt;T&gt;</ref>(b);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>SCIFIR_UNITS_MECA_NUMBER_LAB_NUMBER_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="meca_number/lab_number.hpp"/>
  </compounddef>
</doxygen>
