<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="unit__basic_8cpp" kind="file" language="C++">
    <compoundname>unit_basic.cpp</compoundname>
    <includes refid="unit__basic_8hpp" local="yes">./unit_basic.hpp</includes>
    <includes refid="scalar__unit_8hpp" local="yes">./scalar_unit.hpp</includes>
    <includes refid="dimension_8hpp" local="yes">./dimension.hpp</includes>
    <includes refid="prefix_8hpp" local="yes">./prefix.hpp</includes>
    <includes refid="constants_8hpp" local="yes">../topology/constants.hpp</includes>
    <includes local="yes">boost/algorithm/string.hpp</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cctype</includes>
    <includes local="no">cmath</includes>
    <includes local="no">iostream</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="21">
        <label>../special_units/percentage.hpp</label>
        <link refid="percentage_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>../topology/constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../units/dimension.hpp</label>
        <link refid="dimension_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../units/prefix.hpp</label>
        <link refid="prefix_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>../units/scalar_unit.hpp</label>
        <link refid="scalar__unit_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>units/unit_basic.cpp</label>
        <link refid="unit__basic_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>./unit_basic.hpp</label>
        <link refid="unit__basic_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>../util/is_number.hpp</label>
        <link refid="is__number_8hpp_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>algorithm</label>
      </node>
      <node id="10">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="23">
        <label>boost/math/constants/constants.hpp</label>
      </node>
      <node id="25">
        <label>cassert</label>
      </node>
      <node id="26">
        <label>cctype</label>
      </node>
      <node id="24">
        <label>chrono</label>
      </node>
      <node id="14">
        <label>cmath</label>
      </node>
      <node id="13">
        <label>cstddef</label>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="12">
        <label>cstring</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="15">
        <label>set</label>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="20">
        <label>string_view</label>
      </node>
      <node id="19">
        <label>type_traits</label>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacescifir">scifir</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="unit__basic_8cpp_1ac146d893daddced27d9122c575a6ce9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Ym</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Ym</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="355" column="16" bodyfile="units/unit_basic.cpp" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a1170872bbd1e361883a023d1a8e0044d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Zm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Zm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="360" column="16" bodyfile="units/unit_basic.cpp" bodystart="360" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aa53731306e0fc1fc2db47e71bbb21226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Em</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Em</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="365" column="16" bodyfile="units/unit_basic.cpp" bodystart="365" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a81a83c6d209cd9b4fc23f553416b990b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Pm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Pm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="370" column="16" bodyfile="units/unit_basic.cpp" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1abae41b7eb054475ac2b6cf7ccc1b4a94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Tm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Tm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="375" column="16" bodyfile="units/unit_basic.cpp" bodystart="375" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1afc3184d5fc037f63dc4e043288218374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Gm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Gm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="380" column="16" bodyfile="units/unit_basic.cpp" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a7499abd98a77081e255c6eaeedc12650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Mm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Mm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="385" column="16" bodyfile="units/unit_basic.cpp" bodystart="385" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a03afee1df47dae9ca193609d2cc3cd73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_km</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_km</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="390" column="16" bodyfile="units/unit_basic.cpp" bodystart="390" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a5d53c241831ef686a03e4c8cd6b90d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_hm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_hm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="395" column="16" bodyfile="units/unit_basic.cpp" bodystart="395" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a653e26f21a5a69fff9d4205e703470b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_dam</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_dam</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="400" column="16" bodyfile="units/unit_basic.cpp" bodystart="400" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a407d7fbe8042dea21d308298fe6b9e6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_m</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_m</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="405" column="16" bodyfile="units/unit_basic.cpp" bodystart="405" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aa505a4e6f8bef60f6a23c510e188b027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_dm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_dm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="410" column="16" bodyfile="units/unit_basic.cpp" bodystart="410" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a657183dfa51a8ee71fd2b6983c260dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_cm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_cm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="415" column="16" bodyfile="units/unit_basic.cpp" bodystart="415" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aa3246998da3ba35008a591465bc32ecc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_mm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_mm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="420" column="16" bodyfile="units/unit_basic.cpp" bodystart="420" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ab7489eff014cb2cec76a8403782cc817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_um</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_um</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="425" column="16" bodyfile="units/unit_basic.cpp" bodystart="425" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a9693cdde532a5c9f4a7866a58db1328b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_nm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_nm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="430" column="16" bodyfile="units/unit_basic.cpp" bodystart="430" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a23d4d3697556063785c95f734819f2f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_pm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_pm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="435" column="16" bodyfile="units/unit_basic.cpp" bodystart="435" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a6dc63c491e6a2180886880b34c44ed2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_fm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_fm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="440" column="16" bodyfile="units/unit_basic.cpp" bodystart="440" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a7ba2bca7db4f594bd71ed41d5f93c4af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_am</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_am</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="445" column="16" bodyfile="units/unit_basic.cpp" bodystart="445" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac757ec64c99bff17d026b7b48ebcf5b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_zm</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_zm</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="450" column="16" bodyfile="units/unit_basic.cpp" bodystart="450" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1af878309878ecc07649cc2fa44dfd3a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_ym</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ym</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="455" column="16" bodyfile="units/unit_basic.cpp" bodystart="455" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a8df81c85dd4c6ea2f639e5476b3cda9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_s</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_s</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="460" column="23" bodyfile="units/unit_basic.cpp" bodystart="460" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aff11c32bbddfd688ae4b9cc2b2da15e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_ms</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ms</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="465" column="23" bodyfile="units/unit_basic.cpp" bodystart="465" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a3e24be869152d06c4b0fbf152a54b332" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_us</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_us</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="470" column="23" bodyfile="units/unit_basic.cpp" bodystart="470" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a6fd933e207c35d4ef4b116d5777efd43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_ns</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ns</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="475" column="23" bodyfile="units/unit_basic.cpp" bodystart="475" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aa34df5da0d1ecf85f6c9c48ddd8dc529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_ps</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ps</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="480" column="23" bodyfile="units/unit_basic.cpp" bodystart="480" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1acb0b4da77ae26dce502dd07ffa09ad1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_fs</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_fs</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="485" column="23" bodyfile="units/unit_basic.cpp" bodystart="485" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a1653228865538d4ab057ddf91281d40f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_as</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_as</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="490" column="23" bodyfile="units/unit_basic.cpp" bodystart="490" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a4d39cd8ebec37ae1789319c804bf9912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_zs</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_zs</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="495" column="23" bodyfile="units/unit_basic.cpp" bodystart="495" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a071692007300aaa04e0018478a2c41c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_ys</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ys</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="500" column="23" bodyfile="units/unit_basic.cpp" bodystart="500" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ae26d86959cb5005e9dc948af94867f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Yg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Yg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="505" column="14" bodyfile="units/unit_basic.cpp" bodystart="505" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a36bbe89fc63806219418aee9aee6db3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Zg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Zg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="510" column="14" bodyfile="units/unit_basic.cpp" bodystart="510" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a287389ebde82d2e215b6553d3e583ad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Eg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Eg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="515" column="14" bodyfile="units/unit_basic.cpp" bodystart="515" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a3a565095a18e5965fe522946796dd163" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Pg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Pg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="520" column="14" bodyfile="units/unit_basic.cpp" bodystart="520" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a3aa917aa4c93990a09b7b2ae6bab11a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Tg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Tg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="525" column="14" bodyfile="units/unit_basic.cpp" bodystart="525" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aca64a0660fba5896452cd167bb6b3022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Gg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Gg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="530" column="14" bodyfile="units/unit_basic.cpp" bodystart="530" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac6d0b811cd642c4a426fa61760b7e323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Mg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Mg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="535" column="14" bodyfile="units/unit_basic.cpp" bodystart="535" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1afb1fe9b56af9d5c4cd827435e96c666e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_kg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_kg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="540" column="14" bodyfile="units/unit_basic.cpp" bodystart="540" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aeff37e3b1a056b5f282b1333ce519e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_hg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_hg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="545" column="14" bodyfile="units/unit_basic.cpp" bodystart="545" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ab28da9f5469b977991f915bee1ce3281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_dag</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_dag</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="550" column="14" bodyfile="units/unit_basic.cpp" bodystart="550" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a1c52c01c2a0d8cb98733636df33961db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_g</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_g</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="555" column="14" bodyfile="units/unit_basic.cpp" bodystart="555" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ab0a664a8117bcc3ead4ade2eaa74e9e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_dg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_dg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="560" column="14" bodyfile="units/unit_basic.cpp" bodystart="560" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aac137c1e90c88abb78727097dd21ab9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_cg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_cg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="565" column="14" bodyfile="units/unit_basic.cpp" bodystart="565" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a15de979d080e1222272c1b968377601b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_mg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_mg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="570" column="14" bodyfile="units/unit_basic.cpp" bodystart="570" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a4b1553cd56b1a42ef7824310f8cfa37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_ug</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ug</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="575" column="14" bodyfile="units/unit_basic.cpp" bodystart="575" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a8f90f4adcf4d1cf5db9bfe09a36d93cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_ng</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ng</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="580" column="14" bodyfile="units/unit_basic.cpp" bodystart="580" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aecb0e2d4b9ce1cf1d2ce7874e1ba26f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_pg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_pg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="585" column="14" bodyfile="units/unit_basic.cpp" bodystart="585" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aaccaa35d416f47b42206cb6ae225f77c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_fg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_fg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="590" column="14" bodyfile="units/unit_basic.cpp" bodystart="590" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac500feec7e3fe03e45a378ee0b98d5fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_ag</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ag</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="595" column="14" bodyfile="units/unit_basic.cpp" bodystart="595" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a8d389d13c92d4bad6695e07306730711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_zg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_zg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="600" column="14" bodyfile="units/unit_basic.cpp" bodystart="600" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a47bfb5b7ad7630bac1031215ace89b48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_yg</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_yg</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="605" column="14" bodyfile="units/unit_basic.cpp" bodystart="605" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a71bfc186bbf0f4b813cb6868fe5d00eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_YC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_YC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="610" column="16" bodyfile="units/unit_basic.cpp" bodystart="610" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ad049036961cc617281b37a7b1031fd0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_ZC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ZC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="615" column="16" bodyfile="units/unit_basic.cpp" bodystart="615" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a3baf6767a564524b99f64bcd225db1f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_EC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_EC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="620" column="16" bodyfile="units/unit_basic.cpp" bodystart="620" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ab7895e55e27878b61e43cd27dffd4040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_PC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_PC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="625" column="16" bodyfile="units/unit_basic.cpp" bodystart="625" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1abf237e634b8608a947c7629880a8475b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_TC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_TC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="630" column="16" bodyfile="units/unit_basic.cpp" bodystart="630" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1adefc380f04c2e2664601204522b95a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_GC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_GC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="635" column="16" bodyfile="units/unit_basic.cpp" bodystart="635" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1abff5340805e4a204d45288c0cf74feb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_MC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_MC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="640" column="16" bodyfile="units/unit_basic.cpp" bodystart="640" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a0fa2147a5f725fd58607a94250906300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_kC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_kC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="645" column="16" bodyfile="units/unit_basic.cpp" bodystart="645" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1adaab734aea992dc44d3f73ad32ad97d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_hC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_hC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="650" column="16" bodyfile="units/unit_basic.cpp" bodystart="650" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a0aaf46117079df0b5f0d371688ad8e0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_daC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_daC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="655" column="16" bodyfile="units/unit_basic.cpp" bodystart="655" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a71f6b1c27b8e9f642f64800019fbf4df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_C</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_C</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="660" column="16" bodyfile="units/unit_basic.cpp" bodystart="660" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a9d2b9cf6072aeced20874e11ce16fe0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_dC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_dC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="665" column="16" bodyfile="units/unit_basic.cpp" bodystart="665" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1af209ac930a61f4e17cc7935c20e1e704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_cC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_cC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="670" column="16" bodyfile="units/unit_basic.cpp" bodystart="670" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a6fcc5d6e7b6aac0aad740c683c4a15f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_mC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_mC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="675" column="16" bodyfile="units/unit_basic.cpp" bodystart="675" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a123719e4ac858852d4182ea5261fdcef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_uC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_uC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="680" column="16" bodyfile="units/unit_basic.cpp" bodystart="680" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac691d94f8fe391f18170c6356809c3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_nC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_nC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="685" column="16" bodyfile="units/unit_basic.cpp" bodystart="685" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a6ac20062d683d30ddd82ceb84d27d4b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_pC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_pC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="690" column="16" bodyfile="units/unit_basic.cpp" bodystart="690" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1abf2c2b995b4a88b4b91a30bb62df8d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_fC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_fC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="695" column="16" bodyfile="units/unit_basic.cpp" bodystart="695" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a85059c04f007f1698fc1a0138fabaaeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_aC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_aC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="700" column="16" bodyfile="units/unit_basic.cpp" bodystart="700" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a84675005001599520372704b55aefd3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_zC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_zC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="705" column="16" bodyfile="units/unit_basic.cpp" bodystart="705" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a89a05a3d7aba013f0a9da79f7718ff9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_yC</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_yC</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="710" column="16" bodyfile="units/unit_basic.cpp" bodystart="710" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a85c9eb81a06decbf8e810e9096ce229f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_YK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_YK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="715" column="21" bodyfile="units/unit_basic.cpp" bodystart="715" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ab646e554cb83836abbf4a5fd00182949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_ZK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ZK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="720" column="21" bodyfile="units/unit_basic.cpp" bodystart="720" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1af84d377c3e96c35f2101c45dfcedf4f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_EK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_EK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="725" column="21" bodyfile="units/unit_basic.cpp" bodystart="725" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aea568fa52a6e510d7b2071a26b19a61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_PK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_PK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="730" column="21" bodyfile="units/unit_basic.cpp" bodystart="730" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a2bd0eea9299f979b05e6a6afb745c505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_TK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_TK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="735" column="21" bodyfile="units/unit_basic.cpp" bodystart="735" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1afd2295f7c19b0ebdba92134b93a018ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_GK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_GK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="740" column="21" bodyfile="units/unit_basic.cpp" bodystart="740" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac88601b042c1659718ddd3bd423d2657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_MK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_MK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="745" column="21" bodyfile="units/unit_basic.cpp" bodystart="745" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a46a5c6b0012bada5ede88a2502b0d88e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_kK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_kK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="750" column="21" bodyfile="units/unit_basic.cpp" bodystart="750" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aec0e29e568e0dfc5b569ae25d941da90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_hK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_hK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="755" column="21" bodyfile="units/unit_basic.cpp" bodystart="755" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a3abe7bc737b72b878bdd91cd4a161622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_daK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_daK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="760" column="21" bodyfile="units/unit_basic.cpp" bodystart="760" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a644e59b06834718d8accddb182d77c12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_K</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_K</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="765" column="21" bodyfile="units/unit_basic.cpp" bodystart="765" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a6901a1942449bb391b36208a9272dabc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_dK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_dK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="770" column="21" bodyfile="units/unit_basic.cpp" bodystart="770" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a9f45b72871f1a24af8a1c2d3588b4488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_cK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_cK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="775" column="21" bodyfile="units/unit_basic.cpp" bodystart="775" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a00920688a9b1f76b21bc4efa5cd99832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_mK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_mK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="780" column="21" bodyfile="units/unit_basic.cpp" bodystart="780" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a2879c1b05e695ab07b85ef8549d95335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_uK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_uK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="785" column="21" bodyfile="units/unit_basic.cpp" bodystart="785" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a3aee0e791ae7d63ecc20a369109ec41b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_nK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_nK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="790" column="21" bodyfile="units/unit_basic.cpp" bodystart="790" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a46eb762f05cc291c15870cd94741ab9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_pK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_pK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="795" column="21" bodyfile="units/unit_basic.cpp" bodystart="795" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ae9d984ae47e709b599d186331583582e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_fK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_fK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="800" column="21" bodyfile="units/unit_basic.cpp" bodystart="800" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a65b0241019781561ff2185b261f6bb5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_aK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_aK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="805" column="21" bodyfile="units/unit_basic.cpp" bodystart="805" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ad9e1ee0d2e260b3e29e92d2038ed79ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_zK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_zK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="810" column="21" bodyfile="units/unit_basic.cpp" bodystart="810" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a59b4eaa5fcd4ed91a65e6fe35e52b4df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_yK</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_yK</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="815" column="21" bodyfile="units/unit_basic.cpp" bodystart="815" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a5fbe201bb382919d98c8a948d84942df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Ymol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Ymol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="820" column="14" bodyfile="units/unit_basic.cpp" bodystart="820" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a73c0bdca87da24755652866621d5be21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Zmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Zmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="825" column="14" bodyfile="units/unit_basic.cpp" bodystart="825" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a3cc8031619917b5b67f388f22c39e495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Emol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Emol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="830" column="14" bodyfile="units/unit_basic.cpp" bodystart="830" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a2259a69ebe1a059d28f219be918eb906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Pmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Pmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="835" column="14" bodyfile="units/unit_basic.cpp" bodystart="835" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a0789ac045309541ecd42482cc87ee44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Tmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Tmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="840" column="14" bodyfile="units/unit_basic.cpp" bodystart="840" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a619cf722b18acec111b0ec18e03f612b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Gmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Gmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="845" column="14" bodyfile="units/unit_basic.cpp" bodystart="845" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1abe54daacb143de2677dccca4b2323ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Mmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Mmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="850" column="14" bodyfile="units/unit_basic.cpp" bodystart="850" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a7b7f7049148f9c9279dc3c864c92af8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_kmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_kmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="855" column="14" bodyfile="units/unit_basic.cpp" bodystart="855" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a0c3290adc4834cde2d70465b537e5a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_hmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_hmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="860" column="14" bodyfile="units/unit_basic.cpp" bodystart="860" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a8c98015cc7cd2ca62132414acc08b6bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_damol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_damol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="865" column="14" bodyfile="units/unit_basic.cpp" bodystart="865" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a23a403d938af10a0acd1e399bf948e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_mol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_mol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="870" column="14" bodyfile="units/unit_basic.cpp" bodystart="870" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a8d5dbd422bb8b6ee2fe721694935c0d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_dmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_dmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="875" column="14" bodyfile="units/unit_basic.cpp" bodystart="875" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a05302214fd33666b81d7ce04e1a6639b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_cmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_cmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="880" column="14" bodyfile="units/unit_basic.cpp" bodystart="880" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a76c2bc420988a0feae8712a7e64e2fa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_mmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_mmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="885" column="14" bodyfile="units/unit_basic.cpp" bodystart="885" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a086eec070d12829ce3a57572ea50e2c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_umol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_umol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="890" column="14" bodyfile="units/unit_basic.cpp" bodystart="890" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ad124c98356cc91772dddfb2398c7b945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_nmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_nmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="895" column="14" bodyfile="units/unit_basic.cpp" bodystart="895" bodyend="898"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a8e9cec18c3f0667ea6b12aea15ee0fdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_pmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_pmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="900" column="14" bodyfile="units/unit_basic.cpp" bodystart="900" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a86188613ba518a4ba7c89498cbc1bfca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_fmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_fmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="905" column="14" bodyfile="units/unit_basic.cpp" bodystart="905" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aee84cde099c50dee078281d1a71871bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_amol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_amol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="910" column="14" bodyfile="units/unit_basic.cpp" bodystart="910" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a7a73bf395e49d0f0d5e11ced2c05d670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_zmol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_zmol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="915" column="14" bodyfile="units/unit_basic.cpp" bodystart="915" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1abbe3e1efc92818c364d6b50739691352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_ymol</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ymol</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="920" column="14" bodyfile="units/unit_basic.cpp" bodystart="920" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a1c24d9da2724fcb1a9ee95986c2b0b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Ycd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Ycd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="925" column="15" bodyfile="units/unit_basic.cpp" bodystart="925" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a71f1857a38b6819aadc31e8d9c68b76d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Zcd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Zcd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="930" column="15" bodyfile="units/unit_basic.cpp" bodystart="930" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a64e16593b6935887cc1d7285e0d00f57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Ecd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Ecd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="935" column="15" bodyfile="units/unit_basic.cpp" bodystart="935" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a30292e425b757f6f297a4ed67ac2f6c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Pcd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Pcd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="940" column="15" bodyfile="units/unit_basic.cpp" bodystart="940" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a73c11cb90fdd660fb697e087a8e3876a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Tcd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Tcd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="945" column="15" bodyfile="units/unit_basic.cpp" bodystart="945" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a5cb8b9ed64b0ad835ba4292e949a5f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Gcd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Gcd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="950" column="15" bodyfile="units/unit_basic.cpp" bodystart="950" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ae2f40c7babd2db01f22cda77a22a92f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Mcd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_Mcd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="955" column="15" bodyfile="units/unit_basic.cpp" bodystart="955" bodyend="958"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a81880ac48afaef2115191d2ac768e63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_kcd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_kcd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="960" column="15" bodyfile="units/unit_basic.cpp" bodystart="960" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aedfe686feff793ea056688fa446793b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_hcd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_hcd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="965" column="15" bodyfile="units/unit_basic.cpp" bodystart="965" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1af746841aa31374295ba6cbba119a2e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_dacd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_dacd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="970" column="15" bodyfile="units/unit_basic.cpp" bodystart="970" bodyend="973"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a562ca3f12294332903fac72bd462ecc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_cd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_cd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="975" column="15" bodyfile="units/unit_basic.cpp" bodystart="975" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a07fcbc85a01c355253a30354e6ab6d4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_dcd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_dcd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="980" column="15" bodyfile="units/unit_basic.cpp" bodystart="980" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1af054d2ee0b7e8c299e86365e601e310d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_ccd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ccd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="985" column="15" bodyfile="units/unit_basic.cpp" bodystart="985" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ab4d8556d1234cc7c057489ca3bc039f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_mcd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_mcd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="990" column="15" bodyfile="units/unit_basic.cpp" bodystart="990" bodyend="993"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a520f2b7c0991f300ed343e5696ffc907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_ucd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ucd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="995" column="15" bodyfile="units/unit_basic.cpp" bodystart="995" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a07f03580c9a742da6d2154327f67d2d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_ncd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ncd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1000" column="15" bodyfile="units/unit_basic.cpp" bodystart="1000" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ad50685d7787c0055597eff73f5a714dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_pcd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_pcd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1005" column="15" bodyfile="units/unit_basic.cpp" bodystart="1005" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a595f5bfb4f7ab11fe112d8c890894488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_fcd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_fcd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1010" column="15" bodyfile="units/unit_basic.cpp" bodystart="1010" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a3b13b72e91dc66fbeb0b789582129d8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_acd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_acd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1015" column="15" bodyfile="units/unit_basic.cpp" bodystart="1015" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a6fdea51d52ea7298a7c384deee4318dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_zcd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_zcd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1020" column="15" bodyfile="units/unit_basic.cpp" bodystart="1020" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a953bbe61f34c79cab89a77f621208726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_ycd</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ycd</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1025" column="15" bodyfile="units/unit_basic.cpp" bodystart="1025" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a97370106ea4e9e4effaade8c2729bd60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_YB</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_YB</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1030" column="14" bodyfile="units/unit_basic.cpp" bodystart="1030" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ab3833124d483422766d0e02895e69a49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_ZB</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ZB</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1035" column="14" bodyfile="units/unit_basic.cpp" bodystart="1035" bodyend="1038"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a7c3654ccdddcdfcd4d4d4a28585a9d16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_EB</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_EB</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1040" column="14" bodyfile="units/unit_basic.cpp" bodystart="1040" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a1b407eed742c0c9407b0e22395dfdaf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_PB</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_PB</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1045" column="14" bodyfile="units/unit_basic.cpp" bodystart="1045" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a617c3eff91668cef7ecc9d496ce0982e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_TB</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_TB</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1050" column="14" bodyfile="units/unit_basic.cpp" bodystart="1050" bodyend="1053"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a5c9b3afa3607339c0944738e35ebc4d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_GB</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_GB</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1055" column="14" bodyfile="units/unit_basic.cpp" bodystart="1055" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aa30b770bafb93c541d167c774679f7c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_MB</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_MB</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1060" column="14" bodyfile="units/unit_basic.cpp" bodystart="1060" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ad92e6739a2bd60ecbe2df578df9c2538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_kB</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_kB</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1065" column="14" bodyfile="units/unit_basic.cpp" bodystart="1065" bodyend="1068"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1afa46bec1229a6ca5b7f83cb657ae4d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_B</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_B</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1070" column="14" bodyfile="units/unit_basic.cpp" bodystart="1070" bodyend="1073"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a45bbe3cf25b309c7d949387451849cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Ym</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Ym</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1075" column="16" bodyfile="units/unit_basic.cpp" bodystart="1075" bodyend="1078"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a37360dbd148e04c75079188d4791a4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Zm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Zm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1080" column="16" bodyfile="units/unit_basic.cpp" bodystart="1080" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a1725f19b87ba35dc0b93129536103102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Em</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Em</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1085" column="16" bodyfile="units/unit_basic.cpp" bodystart="1085" bodyend="1088"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1af9248db1ae1306387aaa2bb3adfa90f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Pm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Pm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1090" column="16" bodyfile="units/unit_basic.cpp" bodystart="1090" bodyend="1093"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac01d7a909edb311b6f0066e936843300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Tm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Tm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1095" column="16" bodyfile="units/unit_basic.cpp" bodystart="1095" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a8d9ee4bfda98578709cd92885bbd22f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Gm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Gm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1100" column="16" bodyfile="units/unit_basic.cpp" bodystart="1100" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aff6f91e92ec7c6815a8100a305011505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_Mm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Mm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1105" column="16" bodyfile="units/unit_basic.cpp" bodystart="1105" bodyend="1108"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1afd7dcfba60662253386f42aab03590ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_km</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_km</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1110" column="16" bodyfile="units/unit_basic.cpp" bodystart="1110" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ab1a4fd3cfb9792e1a304bef3723a870a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_hm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_hm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1115" column="16" bodyfile="units/unit_basic.cpp" bodystart="1115" bodyend="1118"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1af4c8a6578c677e808b373782763cbaf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_dam</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_dam</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1120" column="16" bodyfile="units/unit_basic.cpp" bodystart="1120" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a5113e41e48d29a60463db88847461709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_m</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_m</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1125" column="16" bodyfile="units/unit_basic.cpp" bodystart="1125" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a7422f9973bb8162ccc5d39bb5feb8ad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_dm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_dm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1130" column="16" bodyfile="units/unit_basic.cpp" bodystart="1130" bodyend="1133"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a6df598c4ddeb6a8af3dae82e6835cab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_cm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_cm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1135" column="16" bodyfile="units/unit_basic.cpp" bodystart="1135" bodyend="1138"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a9ac121d9b0d4146c86b9f6e2a7429686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_mm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_mm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1140" column="16" bodyfile="units/unit_basic.cpp" bodystart="1140" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ab2c86597d3fcc36a6b617d251eeec5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_um</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_um</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1145" column="16" bodyfile="units/unit_basic.cpp" bodystart="1145" bodyend="1148"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a0717d8ff72ab49a2f90930a361ba9ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_nm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_nm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1150" column="16" bodyfile="units/unit_basic.cpp" bodystart="1150" bodyend="1153"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a7d2bf0cec973a68e2885a8886d3321fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_pm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_pm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1155" column="16" bodyfile="units/unit_basic.cpp" bodystart="1155" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a704810577e0e664d39b7f8d9f9a21450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_fm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_fm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1160" column="16" bodyfile="units/unit_basic.cpp" bodystart="1160" bodyend="1163"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac6fe768b95557b71400f44f81f796ab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_am</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_am</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1165" column="16" bodyfile="units/unit_basic.cpp" bodystart="1165" bodyend="1168"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a23b82f8b285f769ebaad7f2f04f061b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_zm</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_zm</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1170" column="16" bodyfile="units/unit_basic.cpp" bodystart="1170" bodyend="1173"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a667ccef3c617593af77046c320e84c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref></type>
        <definition>scifir::length operator&quot;&quot;_ym</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ym</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1175" column="16" bodyfile="units/unit_basic.cpp" bodystart="1175" bodyend="1178"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ae14c0093f6dc25aa82034bee4bc01a9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_s</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_s</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1180" column="23" bodyfile="units/unit_basic.cpp" bodystart="1180" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a65d4b4c75baa336a400311e09896fcc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_ms</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ms</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1185" column="23" bodyfile="units/unit_basic.cpp" bodystart="1185" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a3f531337b5594540fd879bb744cbc32a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_us</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_us</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1190" column="23" bodyfile="units/unit_basic.cpp" bodystart="1190" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ab44b961efd758037c826aec07d8c52c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_ns</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ns</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1195" column="23" bodyfile="units/unit_basic.cpp" bodystart="1195" bodyend="1198"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac975ef3fe6b88770c3d1b8b0bcfce9df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_ps</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ps</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1200" column="23" bodyfile="units/unit_basic.cpp" bodystart="1200" bodyend="1203"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ad48965fa65c508a1a826c32d79c2f69e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_fs</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_fs</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1205" column="23" bodyfile="units/unit_basic.cpp" bodystart="1205" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ae2e7881171e826b9c2374c70b1557e88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_as</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_as</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1210" column="23" bodyfile="units/unit_basic.cpp" bodystart="1210" bodyend="1213"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1afda57558bd7765a1c1007dcfeec3e249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_zs</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_zs</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1215" column="23" bodyfile="units/unit_basic.cpp" bodystart="1215" bodyend="1218"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a62be378b54d301b35cc324c21770a9ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::time_duration</type>
        <definition>scifir::time_duration operator&quot;&quot;_ys</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ys</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1220" column="23" bodyfile="units/unit_basic.cpp" bodystart="1220" bodyend="1223"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1adc1ebd66c4246070e8c5c626822c747c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Yg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Yg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1225" column="14" bodyfile="units/unit_basic.cpp" bodystart="1225" bodyend="1228"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aa288e521a53071978304225c3cc5a581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Zg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Zg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1230" column="14" bodyfile="units/unit_basic.cpp" bodystart="1230" bodyend="1233"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a0a6f1a3e0b972e0f5fdeecd6855f6218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Eg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Eg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1235" column="14" bodyfile="units/unit_basic.cpp" bodystart="1235" bodyend="1238"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a0703fd1f0d3ff184a90f91a30e3d7046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Pg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Pg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1240" column="14" bodyfile="units/unit_basic.cpp" bodystart="1240" bodyend="1243"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aa284be4fc0e9bb252da4b513854c006f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Tg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Tg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1245" column="14" bodyfile="units/unit_basic.cpp" bodystart="1245" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ad8565a031d06ae10eadb6e3e37da4cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Gg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Gg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1250" column="14" bodyfile="units/unit_basic.cpp" bodystart="1250" bodyend="1253"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a07422599388f6ab73cd1c425796649b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_Mg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Mg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1255" column="14" bodyfile="units/unit_basic.cpp" bodystart="1255" bodyend="1258"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a721a9662df1e17339c988905bac3155a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_kg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_kg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1260" column="14" bodyfile="units/unit_basic.cpp" bodystart="1260" bodyend="1263"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ab329027447a3f11a3e007f5e41924945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_hg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_hg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1265" column="14" bodyfile="units/unit_basic.cpp" bodystart="1265" bodyend="1268"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ad2143f641d1d95aec247ba97f1c24993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_dag</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_dag</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1270" column="14" bodyfile="units/unit_basic.cpp" bodystart="1270" bodyend="1273"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a9f9f8b4f427c7b6ec615ce864deef314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_g</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_g</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1275" column="14" bodyfile="units/unit_basic.cpp" bodystart="1275" bodyend="1278"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aaaaf4c2ec7c275bf1fc3b28add400b90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_dg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_dg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1280" column="14" bodyfile="units/unit_basic.cpp" bodystart="1280" bodyend="1283"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a5be613c34dc15a7795a2c57d057d3f41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_cg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_cg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1285" column="14" bodyfile="units/unit_basic.cpp" bodystart="1285" bodyend="1288"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a58ab98e9b627c6f616c311e51ab0462f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_mg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_mg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1290" column="14" bodyfile="units/unit_basic.cpp" bodystart="1290" bodyend="1293"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a611b85a4ee58ffef80618d6ff4d0bd0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_ug</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ug</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1295" column="14" bodyfile="units/unit_basic.cpp" bodystart="1295" bodyend="1298"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac1c8ccd6ccc97bd8007fe9a3b6bf65a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_ng</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ng</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1300" column="14" bodyfile="units/unit_basic.cpp" bodystart="1300" bodyend="1303"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a7d59981f52bf60caafbfb07d3e072931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_pg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_pg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1305" column="14" bodyfile="units/unit_basic.cpp" bodystart="1305" bodyend="1308"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a22be8008fe01c2dc261512136e297aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_fg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_fg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1310" column="14" bodyfile="units/unit_basic.cpp" bodystart="1310" bodyend="1313"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a7bf08408b2aca2a429c9cc52c573e172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_ag</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ag</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1315" column="14" bodyfile="units/unit_basic.cpp" bodystart="1315" bodyend="1318"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a563b0727549f6744a2d87075c15ffc10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_zg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_zg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1320" column="14" bodyfile="units/unit_basic.cpp" bodystart="1320" bodyend="1323"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aa5dc260af9e069ab5eb0490ce9c22590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mass</type>
        <definition>scifir::mass operator&quot;&quot;_yg</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_yg</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1325" column="14" bodyfile="units/unit_basic.cpp" bodystart="1325" bodyend="1328"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a60934b1eb9022f09db9613342665b103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_YC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_YC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1330" column="16" bodyfile="units/unit_basic.cpp" bodystart="1330" bodyend="1333"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a3b45143a1666254448b18ca2e1bf008a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_ZC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ZC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1335" column="16" bodyfile="units/unit_basic.cpp" bodystart="1335" bodyend="1338"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a0e9ca27ec36bc0487108ad08be0ff91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_EC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_EC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1340" column="16" bodyfile="units/unit_basic.cpp" bodystart="1340" bodyend="1343"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a7c8ef611191c23129a9b20e600c4c0d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_PC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_PC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1345" column="16" bodyfile="units/unit_basic.cpp" bodystart="1345" bodyend="1348"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a7073e02e534707e96c4f83e0b2b9dc96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_TC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_TC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1350" column="16" bodyfile="units/unit_basic.cpp" bodystart="1350" bodyend="1353"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a9afef1c1a181d0da6dc827aa1dbea0e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_GC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_GC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1355" column="16" bodyfile="units/unit_basic.cpp" bodystart="1355" bodyend="1358"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a485da154ba35d8fc04ef001e93c46196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_MC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_MC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1360" column="16" bodyfile="units/unit_basic.cpp" bodystart="1360" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac4a8563182cad2b6d12f6824afdfbf26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_kC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_kC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1365" column="16" bodyfile="units/unit_basic.cpp" bodystart="1365" bodyend="1368"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a70758205c6156bb1121795716b3aa926" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_hC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_hC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1370" column="16" bodyfile="units/unit_basic.cpp" bodystart="1370" bodyend="1373"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a07d9fee0cfc3e68551720c49468dca42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_daC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_daC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1375" column="16" bodyfile="units/unit_basic.cpp" bodystart="1375" bodyend="1378"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a07416b9002c9a20b492448563eba0a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_C</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_C</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1380" column="16" bodyfile="units/unit_basic.cpp" bodystart="1380" bodyend="1383"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a5a2b2e6311282ff302f7ed1b307ea5eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_dC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_dC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1385" column="16" bodyfile="units/unit_basic.cpp" bodystart="1385" bodyend="1388"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1acf193a59b6f16b282f9b803392810bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_cC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_cC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1390" column="16" bodyfile="units/unit_basic.cpp" bodystart="1390" bodyend="1393"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ad319f491513cb9378c406968c403686e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_mC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_mC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1395" column="16" bodyfile="units/unit_basic.cpp" bodystart="1395" bodyend="1398"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac8be7b1cb5a7447462d645cd974b2f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_uC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_uC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1400" column="16" bodyfile="units/unit_basic.cpp" bodystart="1400" bodyend="1403"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ae3b88af09132c264e97dfd900157c593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_nC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_nC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1405" column="16" bodyfile="units/unit_basic.cpp" bodystart="1405" bodyend="1408"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a0005484e6215508045bceef2b1ebf572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_pC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_pC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1410" column="16" bodyfile="units/unit_basic.cpp" bodystart="1410" bodyend="1413"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a4c6c68c827937214ce475bbc22e96e57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_fC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_fC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1415" column="16" bodyfile="units/unit_basic.cpp" bodystart="1415" bodyend="1418"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a2743897bc212c8ef084f658e9d5fd4ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_aC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_aC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1420" column="16" bodyfile="units/unit_basic.cpp" bodystart="1420" bodyend="1423"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1abdbb5a8dfb3a376f2ebf2098ba478b8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_zC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_zC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1425" column="16" bodyfile="units/unit_basic.cpp" bodystart="1425" bodyend="1428"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a4fbf7a7b6a9fb446a135cd43bf9f6985" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref></type>
        <definition>scifir::charge operator&quot;&quot;_yC</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_yC</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1430" column="16" bodyfile="units/unit_basic.cpp" bodystart="1430" bodyend="1433"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1afe4a69be551ef3d7d7a3838bb0867e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_YK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_YK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1435" column="21" bodyfile="units/unit_basic.cpp" bodystart="1435" bodyend="1438"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a505a38b5bcd82aec624be1c5da61dcb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_ZK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ZK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1440" column="21" bodyfile="units/unit_basic.cpp" bodystart="1440" bodyend="1443"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aa6ce01925e71a6bdea4ed611c421f925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_EK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_EK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1445" column="21" bodyfile="units/unit_basic.cpp" bodystart="1445" bodyend="1448"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a90be290e7a6fa4b635afb3b9202a7ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_PK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_PK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1450" column="21" bodyfile="units/unit_basic.cpp" bodystart="1450" bodyend="1453"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a86e118b40db3b14dfebd52912cc19079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_TK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_TK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1455" column="21" bodyfile="units/unit_basic.cpp" bodystart="1455" bodyend="1458"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a088266c4a7d08631bffae3e6678aa3a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_GK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_GK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1460" column="21" bodyfile="units/unit_basic.cpp" bodystart="1460" bodyend="1463"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a89ebc4b2c73b5afb8044c9c30c9171f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_MK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_MK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1465" column="21" bodyfile="units/unit_basic.cpp" bodystart="1465" bodyend="1468"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a5ce2714df03f11982bbd11cfbd8b57e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_kK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_kK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1470" column="21" bodyfile="units/unit_basic.cpp" bodystart="1470" bodyend="1473"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a5fb7ebf9c1762d74e33d3203c1bdf376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_hK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_hK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1475" column="21" bodyfile="units/unit_basic.cpp" bodystart="1475" bodyend="1478"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ad82f85a24cc3889a79fb97d5c8a9c941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_daK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_daK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1480" column="21" bodyfile="units/unit_basic.cpp" bodystart="1480" bodyend="1483"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a5ff4b228f6b1c45f1d19178e9d18f9ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_K</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_K</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1485" column="21" bodyfile="units/unit_basic.cpp" bodystart="1485" bodyend="1488"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1af8d6b7cac55b9e88f63f41d642eec0af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_dK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_dK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1490" column="21" bodyfile="units/unit_basic.cpp" bodystart="1490" bodyend="1493"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1af7b5b0fef2aa19c10c54bacda9450bda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_cK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_cK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1495" column="21" bodyfile="units/unit_basic.cpp" bodystart="1495" bodyend="1498"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1abd5dca9e7a0140e44a1ab7b8f72bb50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_mK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_mK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1500" column="21" bodyfile="units/unit_basic.cpp" bodystart="1500" bodyend="1503"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a59d5f33143e44b0d516945c42b0f1e94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_uK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_uK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1505" column="21" bodyfile="units/unit_basic.cpp" bodystart="1505" bodyend="1508"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a2dd1487988c2d8ffae26d74ad4fad6d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_nK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_nK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1510" column="21" bodyfile="units/unit_basic.cpp" bodystart="1510" bodyend="1513"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a9d749dde524738c3b1b6949110414e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_pK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_pK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1515" column="21" bodyfile="units/unit_basic.cpp" bodystart="1515" bodyend="1518"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac077c8cbf4af4e090dc610079b95ebe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_fK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_fK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1520" column="21" bodyfile="units/unit_basic.cpp" bodystart="1520" bodyend="1523"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a704f8296f296d2a32f1fa5e4732c87b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_aK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_aK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1525" column="21" bodyfile="units/unit_basic.cpp" bodystart="1525" bodyend="1528"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a09ce80e089e374427c312e1b9ed23c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_zK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_zK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1530" column="21" bodyfile="units/unit_basic.cpp" bodystart="1530" bodyend="1533"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a12a694c8ce07f07c6114dfa2ec66fc5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref></type>
        <definition>scifir::temperature operator&quot;&quot;_yK</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_yK</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1535" column="21" bodyfile="units/unit_basic.cpp" bodystart="1535" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aeb80969ba78a64a4f422f088ccfbf11a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Ymol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Ymol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1540" column="14" bodyfile="units/unit_basic.cpp" bodystart="1540" bodyend="1543"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac0e1b2d26f18862e5013a25ccb908695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Zmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Zmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1545" column="14" bodyfile="units/unit_basic.cpp" bodystart="1545" bodyend="1548"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a1a82883e2408d4c276206b6e4c81d8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Emol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Emol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1550" column="14" bodyfile="units/unit_basic.cpp" bodystart="1550" bodyend="1553"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a76334137b9538e47a1096bb78a4bc663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Pmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Pmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1555" column="14" bodyfile="units/unit_basic.cpp" bodystart="1555" bodyend="1558"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a28aee4ab362c3dbc64c35c166187b05d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Tmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Tmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1560" column="14" bodyfile="units/unit_basic.cpp" bodystart="1560" bodyend="1563"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aa95ab1ad9e1d2debd32f4e7cdb475b26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Gmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Gmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1565" column="14" bodyfile="units/unit_basic.cpp" bodystart="1565" bodyend="1568"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ab10c3944272cc993cea1f1740f9350b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_Mmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Mmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1570" column="14" bodyfile="units/unit_basic.cpp" bodystart="1570" bodyend="1573"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aafeb01fca3214636879e3263a83db779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_kmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_kmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1575" column="14" bodyfile="units/unit_basic.cpp" bodystart="1575" bodyend="1578"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a9ed8d0d8e0a093dd379b0e2421a3afb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_hmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_hmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1580" column="14" bodyfile="units/unit_basic.cpp" bodystart="1580" bodyend="1583"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a43709a8c3a433be2dcb2f6ec98b93f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_damol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_damol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1585" column="14" bodyfile="units/unit_basic.cpp" bodystart="1585" bodyend="1588"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1abc59cf051a1922c3a9b5276584d65690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_mol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_mol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1590" column="14" bodyfile="units/unit_basic.cpp" bodystart="1590" bodyend="1593"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1adb0840d5c79b60f6cc38f6b230a884f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_dmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_dmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1595" column="14" bodyfile="units/unit_basic.cpp" bodystart="1595" bodyend="1598"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a74f3ab5658659edf73705ca1a7c2d1ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_cmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_cmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1600" column="14" bodyfile="units/unit_basic.cpp" bodystart="1600" bodyend="1603"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a2ebee0a3a2030fa7edd2e1ae67c3d933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_mmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_mmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1605" column="14" bodyfile="units/unit_basic.cpp" bodystart="1605" bodyend="1608"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aed737520cc468a8da07ac2cd0ade1f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_umol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_umol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1610" column="14" bodyfile="units/unit_basic.cpp" bodystart="1610" bodyend="1613"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a36cb7cc6f0966cc62d6e7c162c56acf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_nmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_nmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1615" column="14" bodyfile="units/unit_basic.cpp" bodystart="1615" bodyend="1618"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a7ea1e1aa59fb08be2672d324854bc004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_pmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_pmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1620" column="14" bodyfile="units/unit_basic.cpp" bodystart="1620" bodyend="1623"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a10fb310c75b3c933205438119a81adaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_fmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_fmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1625" column="14" bodyfile="units/unit_basic.cpp" bodystart="1625" bodyend="1628"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aa2ecd596a95b7c9fa11527cde076ce90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_amol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_amol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1630" column="14" bodyfile="units/unit_basic.cpp" bodystart="1630" bodyend="1633"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a06ef22af95a738b2a3bb8f8d1d183170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_zmol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_zmol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1635" column="14" bodyfile="units/unit_basic.cpp" bodystart="1635" bodyend="1638"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1abaa38bc0daec373eb1b8319233d3e8ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::mole</type>
        <definition>scifir::mole operator&quot;&quot;_ymol</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ymol</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1640" column="14" bodyfile="units/unit_basic.cpp" bodystart="1640" bodyend="1643"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a4144f71a4b3a85e3eb35f393cc2bc2cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Ycd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Ycd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1645" column="15" bodyfile="units/unit_basic.cpp" bodystart="1645" bodyend="1648"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a00fec81bb784e5d693f102e0986483ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Zcd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Zcd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1650" column="15" bodyfile="units/unit_basic.cpp" bodystart="1650" bodyend="1653"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a023342bffef3e45de70fbb415dc533f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Ecd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Ecd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1655" column="15" bodyfile="units/unit_basic.cpp" bodystart="1655" bodyend="1658"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a4ea0c81b86cdd12d814069ad5f18a6f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Pcd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Pcd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1660" column="15" bodyfile="units/unit_basic.cpp" bodystart="1660" bodyend="1663"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1affe6ff166ec74c870ffc1d9e05ca8c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Tcd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Tcd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1665" column="15" bodyfile="units/unit_basic.cpp" bodystart="1665" bodyend="1668"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a25a9d62f10d9729286b8d494f247e09d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Gcd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Gcd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1670" column="15" bodyfile="units/unit_basic.cpp" bodystart="1670" bodyend="1673"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1acdb944528377cd3243408a97f231251a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_Mcd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_Mcd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1675" column="15" bodyfile="units/unit_basic.cpp" bodystart="1675" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a8eb78d341713b6f711001c9f5166635c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_kcd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_kcd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1680" column="15" bodyfile="units/unit_basic.cpp" bodystart="1680" bodyend="1683"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a5ce97a1053733fb150c37dd5aeca53f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_hcd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_hcd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1685" column="15" bodyfile="units/unit_basic.cpp" bodystart="1685" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1adeaa6399db3d73fe7da4170bed1822ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_dacd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_dacd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1690" column="15" bodyfile="units/unit_basic.cpp" bodystart="1690" bodyend="1693"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a2835b6eb8e76b4c9f50f354beb111ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_cd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_cd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1695" column="15" bodyfile="units/unit_basic.cpp" bodystart="1695" bodyend="1698"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a56d42d1febf4ffc762c0b251f7288650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_dcd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_dcd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1700" column="15" bodyfile="units/unit_basic.cpp" bodystart="1700" bodyend="1703"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a4de9d81b63bb3823b313878e5367da3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_ccd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ccd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1705" column="15" bodyfile="units/unit_basic.cpp" bodystart="1705" bodyend="1708"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a1b5994d54841d1f5b138dfa8e2e57699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_mcd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_mcd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1710" column="15" bodyfile="units/unit_basic.cpp" bodystart="1710" bodyend="1713"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a013aa70037661b251c3d1d260743024f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_ucd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ucd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1715" column="15" bodyfile="units/unit_basic.cpp" bodystart="1715" bodyend="1718"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a604e24d42868d784c07e051b606e5f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_ncd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ncd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1720" column="15" bodyfile="units/unit_basic.cpp" bodystart="1720" bodyend="1723"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ad026ca8073d4eb7cb7ab1bea5f8e1f4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_pcd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_pcd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1725" column="15" bodyfile="units/unit_basic.cpp" bodystart="1725" bodyend="1728"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a80d8ea849ee2d469d1f37877f5cdb3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_fcd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_fcd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1730" column="15" bodyfile="units/unit_basic.cpp" bodystart="1730" bodyend="1733"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1ac7fafab1111b347055c271433deb21be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_acd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_acd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1735" column="15" bodyfile="units/unit_basic.cpp" bodystart="1735" bodyend="1738"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a1dfa9adcebf536c791de4d0bb5110946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_zcd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_zcd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1740" column="15" bodyfile="units/unit_basic.cpp" bodystart="1740" bodyend="1743"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a6ff8064d76aefe1799947a49a4df4861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref></type>
        <definition>scifir::light operator&quot;&quot;_ycd</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ycd</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1745" column="15" bodyfile="units/unit_basic.cpp" bodystart="1745" bodyend="1748"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1afb165eebed36cc37f28b0fb66add2817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_YB</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_YB</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1750" column="14" bodyfile="units/unit_basic.cpp" bodystart="1750" bodyend="1753"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1aa82b0ffd80f27f25f16ea8560400ee4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_ZB</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_ZB</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1755" column="14" bodyfile="units/unit_basic.cpp" bodystart="1755" bodyend="1758"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a22547af6f77ebf6a2a148e803170f30b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_EB</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_EB</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1760" column="14" bodyfile="units/unit_basic.cpp" bodystart="1760" bodyend="1763"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a6d0b0ce3214ab96f6c236126c248743f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_PB</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_PB</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1765" column="14" bodyfile="units/unit_basic.cpp" bodystart="1765" bodyend="1768"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a8ac25303aae9faae0584fa2477ff299e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_TB</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_TB</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1770" column="14" bodyfile="units/unit_basic.cpp" bodystart="1770" bodyend="1773"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a86a402111a99acafd1965226ba2fbce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_GB</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_GB</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1775" column="14" bodyfile="units/unit_basic.cpp" bodystart="1775" bodyend="1778"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a6093568534a2f36e99e86ca46752e5c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_MB</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_MB</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1780" column="14" bodyfile="units/unit_basic.cpp" bodystart="1780" bodyend="1783"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a20f240df179b5a45f0ff49572a45fac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_kB</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_kB</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1785" column="14" bodyfile="units/unit_basic.cpp" bodystart="1785" bodyend="1788"/>
      </memberdef>
      <memberdef kind="function" id="unit__basic_8cpp_1a2c7a1b8146ec8e2603aa8b19a1a58866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scifir::data</type>
        <definition>scifir::data operator&quot;&quot;_B</definition>
        <argsstring>(long double x)</argsstring>
        <name>operator&quot;&quot;_B</name>
        <param>
          <type>long double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/unit_basic.cpp" line="1790" column="14" bodyfile="units/unit_basic.cpp" bodystart="1790" bodyend="1793"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;./unit_basic.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;./scalar_unit.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;./dimension.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;./prefix.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../topology/constants.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/algorithm/string.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cctype&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">scifir</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALAR_UNIT_CPP(length,</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALAR_UNIT_CPP(time_duration,</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>time_duration::time_duration(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_time)<sp/>:<sp/>scalar_unit()</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isdigit(init_time[0]))</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>init_values;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::split(init_values,init_time,boost::is_any_of(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>init_values.size();<sp/>i++)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(isdigit(init_values[i][j])<sp/>||<sp/>init_values[i][j]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>||<sp/>init_values[i][j]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>init_values[i][j]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal"><sp/>||<sp/>init_values[i][j]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal"><sp/>||<sp/>init_values[i][j]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>||<sp/>init_values[i][j]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(init_values[i][j]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>string_value<sp/>=<sp/>init_values[i].substr(0,<sp/>j);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::algorithm::erase_all(string_value,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>search_e<sp/>=<sp/>string_value.find(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search_e<sp/>!=<sp/>string::npos)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_value.replace(search_e,1,</highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>search_10<sp/>=<sp/>string_value.find(</highlight><highlight class="stringliteral">&quot;*10^&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search_10<sp/>!=<sp/>string::npos)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_value.replace(search_10,4,</highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>ss(string_value);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>init_value_float;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/>init_value_float;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>init_value_dimension<sp/>=<sp/>init_values[i].substr(j);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>init_value_dimension_quantity<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(init_value_dimension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_value_dimension_quantity<sp/>=<sp/>86400.0f;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(init_value_dimension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;h&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_value_dimension_quantity<sp/>=<sp/>3600.0f;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(init_value_dimension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_value_dimension_quantity<sp/>=<sp/>60.0f;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(init_value_dimension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_value_dimension_quantity<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>+=<sp/>init_value_float<sp/>*<sp/>init_value_dimension_quantity;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimensions<sp/>=<sp/>create_dimensions(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>time_duration::operator<sp/>std::chrono::seconds()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>a<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.change_dimensions(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::seconds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(a.get_value()));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_duration::get_years()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="94"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_year<sp/>(</highlight><highlight class="stringliteral">&quot;365d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&gt;=<sp/>one_year)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(trunc((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/>one_year).get_value()));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_duration::get_months()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="107"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_month(</highlight><highlight class="stringliteral">&quot;30d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&gt;=<sp/>one_month)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(trunc((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/>one_month).get_value()));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_duration::get_weeks()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="120"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_week(</highlight><highlight class="stringliteral">&quot;7d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&gt;=<sp/>one_week)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(trunc((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/>one_week).get_value()));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_duration::get_days()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="133"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_day(</highlight><highlight class="stringliteral">&quot;1d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&gt;=<sp/>one_day)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(trunc((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/>one_day).get_value()));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_duration::get_hours()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="146"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_hour(</highlight><highlight class="stringliteral">&quot;1h&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&gt;=<sp/>one_hour)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(trunc((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/>one_hour).get_value()));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_duration::get_minutes()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="159"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_minute<sp/>=<sp/>scifir::time_duration(</highlight><highlight class="stringliteral">&quot;1min&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&gt;=<sp/>one_minute)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(trunc((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/>one_minute).get_value()));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_duration::get_seconds()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="172"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_second(</highlight><highlight class="stringliteral">&quot;1s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&gt;=<sp/>one_second)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(trunc((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/>one_second).get_value()));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IS_UNIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>time_duration::get_finish_date()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="186"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chrono::time_point&lt;chrono::system_clock&gt;<sp/>start<sp/>=<sp/>chrono::system_clock::now();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>+=<sp/>chrono::seconds(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::time_t<sp/>start_time<sp/>=<sp/>std::chrono::system_clock::to_time_t(start);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>output;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>ctime(&amp;start_time);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output.str();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>IS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>time_duration::get_finish_date()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="196"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chrono::time_point&lt;chrono::system_clock&gt;<sp/>start<sp/>=<sp/>chrono::system_clock::now();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>+=<sp/>chrono::seconds(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::time_t<sp/>start_time<sp/>=<sp/>std::chrono::system_clock::to_time_t(start);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>output;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[26];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctime_s(str,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>str,&amp;start_time);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>str;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output.str();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>time_duration::display_as_time()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="209"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>output;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>remaining_time<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_year<sp/>(</highlight><highlight class="stringliteral">&quot;365d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&gt;=<sp/>one_year)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_of_years<sp/>=<sp/>int(trunc((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/>one_year).get_value()));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>total_of_years<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;y<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_time<sp/>-=<sp/>scifir::time_duration(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(total_of_years)<sp/>*<sp/>365,</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_month(</highlight><highlight class="stringliteral">&quot;30d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining_time<sp/>&gt;=<sp/>one_month)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_of_months<sp/>=<sp/>int(trunc((remaining_time<sp/>/<sp/>one_month).get_value()));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>total_of_months<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_time<sp/>-=<sp/>scifir::time_duration(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(total_of_months)<sp/>*<sp/>30,</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_day(</highlight><highlight class="stringliteral">&quot;1d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining_time<sp/>&gt;=<sp/>one_day)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_of_days<sp/>=<sp/>int(trunc((remaining_time<sp/>/<sp/>one_day).get_value()));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>total_of_days<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;d<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_time<sp/>-=<sp/>scifir::time_duration(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(total_of_days),</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_hour(</highlight><highlight class="stringliteral">&quot;1h&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining_time<sp/>&gt;=<sp/>one_hour)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_of_hours<sp/>=<sp/>int(trunc((remaining_time<sp/>/<sp/>one_hour).get_value()));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>total_of_hours<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;h<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_time<sp/>-=<sp/>scifir::time_duration(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(total_of_hours),</highlight><highlight class="stringliteral">&quot;h&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_minute(</highlight><highlight class="stringliteral">&quot;1min&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining_time<sp/>&gt;=<sp/>one_minute)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_of_minutes<sp/>=<sp/>int(trunc((remaining_time<sp/>/<sp/>one_minute).get_value()));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>total_of_minutes<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;min<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_time<sp/>-=<sp/>scifir::time_duration(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(total_of_minutes),</highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scifir::time_duration<sp/>one_second(</highlight><highlight class="stringliteral">&quot;1s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining_time<sp/>&gt;=<sp/>one_second)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_time.change_dimensions(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>total_of_seconds<sp/>=<sp/>float(remaining_time.get_value());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>total_of_seconds<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output.str();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>time_duration::display_years()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="258"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>get_years()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>y&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>time_duration::display_months()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="265"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>get_months()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>months&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>time_duration::display_weeks()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="272"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>get_weeks()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>weeks&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>time_duration::display_days()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="279"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>get_days()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>d&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>time_duration::display_hours()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="286"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>get_hours()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>h&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>time_duration::display_minutes()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="293"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>get_minutes()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>min&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>time_duration::display_seconds()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="300"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>get_seconds()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALAR_UNIT_CPP(mass,</highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>mass::mass(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>percentage&amp;<sp/>new_percentage,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mass&amp;<sp/>new_mass)<sp/>:<sp/>scalar_unit()</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimensions<sp/>=<sp/>new_mass.get_dimensions();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>new_percentage<sp/>*<sp/>new_mass.get_value();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>mass::mass(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_percentage,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_mass)<sp/>:<sp/>scalar_unit()</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialize_from_string(init_mass);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>percentage<sp/>new_percentage<sp/>=<sp/>percentage(init_percentage);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>new_percentage<sp/>*<sp/>value;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALAR_UNIT_CPP(charge,</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALAR_UNIT_CPP(temperature,</highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALAR_UNIT_CPP(mole,</highlight><highlight class="stringliteral">&quot;mol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>mole::mole(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>percentage&amp;<sp/>new_percentage,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mole&amp;<sp/>new_mole)<sp/>:<sp/>scalar_unit()</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimensions<sp/>=<sp/>new_mole.get_dimensions();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>new_percentage<sp/>*<sp/>new_mole.get_value();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>mole::mole(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_percentage,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_mole)<sp/>:<sp/>scalar_unit()</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialize_from_string(init_mole);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>percentage<sp/>new_percentage<sp/>=<sp/>percentage(init_percentage);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>new_percentage<sp/>*<sp/>value;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mole::number_of_particles()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="339"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(scalar_unit::actual_dimensions.count(particles))</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>scalar_unit::value;</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>scalar_unit::value<sp/>*<sp/>scifir::AVOGADRO_CONSTANT;</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALAR_UNIT_CPP(light,</highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>SCALAR_UNIT_CPP(data,</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Ym(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Ym&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Zm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Zm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Em(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Em&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Pm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Pm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Tm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Tm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Gm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Gm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Mm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Mm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_km(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;km&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_hm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;hm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dam(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;dam&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_m(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;dm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_cm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;cm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;mm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_um(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;um&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_nm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;nm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_pm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;pm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;fm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_am(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;am&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zm(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;zm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ym(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ym&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_s(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ms(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ms&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_us(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;us&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ns(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ns&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ps(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fs(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;fs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_as(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;as&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zs(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;zs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ys(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Yg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Yg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Zg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Zg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Eg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Eg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Pg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Pg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Tg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Tg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Gg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Gg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Mg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Mg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_kg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;kg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_hg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;hg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dag(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;dag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_g(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;dg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_cg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;cg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;mg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ug(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ug&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ng(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ng&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_pg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;pg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;fg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ag(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;zg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_yg(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;yg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_YC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;YC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ZC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ZC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_EC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;EC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_PC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;PC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_TC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;TC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_GC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;GC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_MC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;MC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_kC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;kC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_hC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;hC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_daC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;daC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_C(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;dC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_cC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;cC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;mC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_uC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;uC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_nC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;nC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_pC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;pC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;fC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_aC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;aC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;zC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_yC(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="711"><highlight class="normal">{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;yC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_YK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;YK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ZK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ZK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_EK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;EK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_PK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;PK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_TK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;TK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_GK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;GK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_MK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;MK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_kK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;kK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_hK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;hK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_daK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;daK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_K(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;dK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_cK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;cK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;mK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_uK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;uK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_nK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;nK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_pK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;pK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;fK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_aK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;aK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;zK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_yK(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="816"><highlight class="normal">{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;yK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Ymol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Ymol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Zmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Zmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Emol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Emol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Pmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="836"><highlight class="normal">{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Pmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Tmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Tmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Gmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Gmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Mmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Mmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_kmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;kmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_hmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;hmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_damol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;damol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;mol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;dmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_cmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;cmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;mmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_umol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;umol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_nmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="896"><highlight class="normal">{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;nmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_pmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="901"><highlight class="normal">{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;pmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;fmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_amol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;amol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zmol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="916"><highlight class="normal">{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;zmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ymol(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="921"><highlight class="normal">{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ymol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Ycd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Ycd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Zcd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Zcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Ecd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Ecd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Pcd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Pcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Tcd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="946"><highlight class="normal">{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Tcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Gcd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Gcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Mcd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="956"><highlight class="normal">{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;Mcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_kcd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;kcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_hcd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;hcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dacd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;dacd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_cd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dcd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="981"><highlight class="normal">{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;dcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ccd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ccd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mcd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;mcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ucd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="996"><highlight class="normal">{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ucd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ncd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ncd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_pcd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1006"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;pcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fcd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;fcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_acd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;acd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zcd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;zcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ycd(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ycd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_YB(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;YB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ZB(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;ZB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_EB(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1041"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;EB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_PB(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;PB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_TB(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;TB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_GB(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;GB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_MB(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;MB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_kB(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;kB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_B(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)x,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Ym(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Ym&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Zm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Zm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Em(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Em&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Pm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Pm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Tm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Tm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Gm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Gm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Mm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Mm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_km(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;km&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_hm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;hm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dam(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;dam&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_m(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;dm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_cm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;cm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;mm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_um(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;um&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_nm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;nm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_pm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;pm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;fm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_am(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;am&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;zm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ym(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::length</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;ym&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_s(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration(x,<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ms(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration(x,<sp/></highlight><highlight class="stringliteral">&quot;ms&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_us(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration(x,<sp/></highlight><highlight class="stringliteral">&quot;us&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ns(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration(x,<sp/></highlight><highlight class="stringliteral">&quot;ns&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ps(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration(x,<sp/></highlight><highlight class="stringliteral">&quot;ps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fs(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration(x,<sp/></highlight><highlight class="stringliteral">&quot;fs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_as(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration(x,<sp/></highlight><highlight class="stringliteral">&quot;as&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zs(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration(x,<sp/></highlight><highlight class="stringliteral">&quot;zs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal">scifir::time_duration<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ys(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::time_duration(x,<sp/></highlight><highlight class="stringliteral">&quot;ys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Yg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;Yg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Zg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;Zg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Eg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;Eg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Pg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;Pg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Tg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;Tg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Gg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;Gg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Mg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;Mg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_kg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;kg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_hg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;hg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dag(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;dag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_g(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;dg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_cg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;cg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;mg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ug(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;ug&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ng(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;ng&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_pg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;pg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;fg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ag(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;ag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;zg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal">scifir::mass<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_yg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mass(x,<sp/></highlight><highlight class="stringliteral">&quot;yg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_YC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;YC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ZC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;ZC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_EC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;EC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_PC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;PC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_TC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;TC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_GC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;GC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_MC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;MC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_kC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;kC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_hC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;hC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_daC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;daC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_C(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;dC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_cC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;cC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;mC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_uC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;uC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_nC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;nC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_pC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;pC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;fC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_aC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;aC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;zC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_yC(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::charge</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;yC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_YK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;YK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ZK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;ZK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_EK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;EK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_PK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;PK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_TK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;TK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_GK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;GK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_MK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;MK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_kK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;kK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_hK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;hK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_daK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;daK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_K(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;dK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_cK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;cK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;mK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_uK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;uK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_nK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;nK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_pK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;pK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;fK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_aK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;aK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;zK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_yK(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::temperature</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;yK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Ymol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;Ymol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Zmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;Zmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Emol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;Emol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Pmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;Pmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Tmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;Tmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Gmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;Gmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Mmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;Mmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_kmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;kmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_hmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;hmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_damol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;damol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;mol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;dmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_cmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;cmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;mmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_umol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;umol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_nmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;nmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_pmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;pmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;fmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_amol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;amol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zmol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;zmol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal">scifir::mole<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ymol(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::mole(x,<sp/></highlight><highlight class="stringliteral">&quot;ymol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Ycd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Ycd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Zcd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Zcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Ecd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Ecd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Pcd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Pcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Tcd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Tcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Gcd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Gcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_Mcd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;Mcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_kcd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;kcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_hcd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;hcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dacd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;dacd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_cd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;cd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_dcd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;dcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ccd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;ccd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_mcd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1711"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;mcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ucd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;ucd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ncd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;ncd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_pcd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;pcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_fcd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;fcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_acd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;acd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_zcd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;zcd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ycd(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1coordinates__1d" kindref="compound">scifir::light</ref>(x,<sp/></highlight><highlight class="stringliteral">&quot;ycd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_YB(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data(x,<sp/></highlight><highlight class="stringliteral">&quot;YB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ZB(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data(x,<sp/></highlight><highlight class="stringliteral">&quot;ZB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_EB(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data(x,<sp/></highlight><highlight class="stringliteral">&quot;EB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_PB(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data(x,<sp/></highlight><highlight class="stringliteral">&quot;PB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_TB(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data(x,<sp/></highlight><highlight class="stringliteral">&quot;TB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_GB(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data(x,<sp/></highlight><highlight class="stringliteral">&quot;GB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_MB(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data(x,<sp/></highlight><highlight class="stringliteral">&quot;MB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_kB(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data(x,<sp/></highlight><highlight class="stringliteral">&quot;kB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal">scifir::data<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_B(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scifir::data(x,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="units/unit_basic.cpp"/>
  </compounddef>
</doxygen>
