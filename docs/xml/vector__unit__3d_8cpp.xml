<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="vector__unit__3d_8cpp" kind="file" language="C++">
    <compoundname>vector_unit_3d.cpp</compoundname>
    <includes refid="vector__unit__3d_8hpp" local="yes">./vector_unit_3d.hpp</includes>
    <includes refid="coordinates__3d_8hpp" local="yes">../coordinates/coordinates_3d.hpp</includes>
    <includes refid="types_8hpp" local="yes">../util/types.hpp</includes>
    <incdepgraph>
      <node id="28">
        <label>list</label>
      </node>
      <node id="29">
        <label>../coordinates/coordinates_3d.hpp</label>
        <link refid="coordinates__3d_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="27">
        <label>functional</label>
      </node>
      <node id="24">
        <label>boost/math/constants/constants.hpp</label>
      </node>
      <node id="4">
        <label>../units/dimension.hpp</label>
        <link refid="dimension_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="3">
        <label>../units/scalar_unit.hpp</label>
        <link refid="scalar__unit_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>units/vector_unit_3d.cpp</label>
        <link refid="vector__unit__3d_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cmath</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="22">
        <label>../meca_number/angle.hpp</label>
        <link refid="angle_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>../predefined_units/physics_units.hpp</label>
        <link refid="physics__units_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>../special_units/percentage.hpp</label>
        <link refid="percentage_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>../util/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>../units/vector_unit_nd.hpp</label>
        <link refid="vector__unit__nd_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>./vector_unit_3d.hpp</label>
        <link refid="vector__unit__3d_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../units/prefix.hpp</label>
        <link refid="prefix_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>../topology/direction.hpp</label>
        <link refid="direction_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>string_view</label>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
      <node id="18">
        <label>../util/is_number.hpp</label>
        <link refid="is__number_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="21">
        <label>../units/vector_unit_2d.hpp</label>
        <link refid="vector__unit__2d_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>../topology/constants.hpp</label>
        <link refid="constants_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>../units/unit_basic.hpp</label>
        <link refid="unit__basic_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>cstddef</label>
      </node>
      <node id="34">
        <label>chrono</label>
      </node>
      <node id="19">
        <label>type_traits</label>
      </node>
      <node id="15">
        <label>set</label>
      </node>
      <node id="11">
        <label>algorithm</label>
      </node>
      <node id="30">
        <label>../topology/point_3d.hpp</label>
        <link refid="point__3d_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacescifir">scifir</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="vector__unit__3d_8cpp_1a4c6d9f8da6712bb19e4985c7518ddcd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref></type>
        <definition>scifir::vector_unit_3d operator*</definition>
        <argsstring>(const scifir::scalar_unit &amp;x, const scifir::vector_unit_3d &amp;y)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classscifir_1_1scalar__unit" kindref="compound">scifir::scalar_unit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>It creates a new vector_unit_3d scaling a vector_unit_3d by the scalar_unit x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_3d.cpp" line="508" column="24" bodyfile="units/vector_unit_3d.cpp" bodystart="508" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="vector__unit__3d_8cpp_1aa589e78de56758ac784ac996a564cdc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const scifir::vector_unit_3d &amp;x, const scifir::vector_unit_3d &amp;y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Comparison operator. Two vector_unit_3d are not equal if their value, dimensions, theta or phi are different. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_3d.cpp" line="515" column="6" bodyfile="units/vector_unit_3d.cpp" bodystart="515" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="vector__unit__3d_8cpp_1a42f3ca37252f0b895098df93814d7569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const scifir::vector_unit_3d &amp;x, const string &amp;init_vector_3d)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>init_vector_3d</declname>
        </param>
        <briefdescription>
<para>Returns true if x is equal to the vector_unit_3d initialized with the string being compared. The vectorial_display() function is not used, and so the values are compared with all its decimal numbers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_3d.cpp" line="520" column="6" bodyfile="units/vector_unit_3d.cpp" bodystart="520" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="vector__unit__3d_8cpp_1aa403c6557f7f52d7c4accdf865775cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const scifir::vector_unit_3d &amp;x, const string &amp;init_vector_3d)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>init_vector_3d</declname>
        </param>
        <briefdescription>
<para>Returns true if x is not equal to the vector_unit_3d initialized with the string being compared. The vectorial_display() function is not used, and so the values are compared with all its decimal numbers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_3d.cpp" line="526" column="6" bodyfile="units/vector_unit_3d.cpp" bodystart="526" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="vector__unit__3d_8cpp_1a6e9a0746e4aaa7a76a3dfd036141c0f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const string &amp;init_vector_3d, const scifir::vector_unit_3d &amp;y)</argsstring>
        <name>operator==</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_vector_3d</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns true if x is equal to the vector_unit_3d initialized with the string being compared. The vectorial_display() function is not used, and so the values are compared with all its decimal numbers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_3d.cpp" line="531" column="6" bodyfile="units/vector_unit_3d.cpp" bodystart="531" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="vector__unit__3d_8cpp_1a1145d1c9f033c481108d5f7059cb5382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const string &amp;init_vector_3d, const scifir::vector_unit_3d &amp;y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const string &amp;</type>
          <declname>init_vector_3d</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns true if x is not equal to the vector_unit_3d initialized with the string being compared. The vectorial_display() function is not used, and so the values are compared with all its decimal numbers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_3d.cpp" line="537" column="6" bodyfile="units/vector_unit_3d.cpp" bodystart="537" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="vector__unit__3d_8cpp_1ab01a99178d6b0f2f38e5273626fe22d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void operator+=</definition>
        <argsstring>(string &amp;x, const scifir::vector_unit_3d &amp;y)</argsstring>
        <name>operator+=</name>
        <param>
          <type>string &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Concatenates the string representation of the vector_unit_3d y to the string x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_3d.cpp" line="542" column="6" bodyfile="units/vector_unit_3d.cpp" bodystart="542" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="vector__unit__3d_8cpp_1aa8270aa46b6f04f367bfd660ef89a72c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string operator+</definition>
        <argsstring>(const string &amp;x, const scifir::vector_unit_3d &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const string &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Creates a new string as the concatenation of the string x with the representation string of the vector_unit_3d y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_3d.cpp" line="549" column="8" bodyfile="units/vector_unit_3d.cpp" bodystart="549" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="vector__unit__3d_8cpp_1ad2fbb36d987ad11a95ccc42b25b06072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string operator+</definition>
        <argsstring>(const scifir::vector_unit_3d &amp;y, const string &amp;x)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Creates a new string as the concatenation of the string x with the representation string of the vector_unit_3d y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_3d.cpp" line="557" column="8" bodyfile="units/vector_unit_3d.cpp" bodystart="557" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="vector__unit__3d_8cpp_1a7a7f117501b6fdfeb462b147d2239c3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const scifir::vector_unit_3d &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Adds the string representation of the vector_unit_3d x to an output stream os. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_3d.cpp" line="565" column="1" bodyfile="units/vector_unit_3d.cpp" bodystart="565" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="vector__unit__3d_8cpp_1a761af8b75a156be9a599fd2b55ab8417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>istream &amp;</type>
        <definition>istream &amp; operator&gt;&gt;</definition>
        <argsstring>(istream &amp;is, scifir::vector_unit_3d &amp;x)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Allows that an istream initializes by string a vector_unit_3d x. </para>
        </briefdescription>
        <detaileddescription>
<para>#endif // SCIFIR_UNITS_UNITS_VECTOR_UNIT_3D_HPP_INCLUDED </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="units/vector_unit_3d.cpp" line="570" column="9" bodyfile="units/vector_unit_3d.cpp" bodystart="570" bodyend="578"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vector__unit__3d_8hpp" kindref="compound">./vector_unit_3d.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../coordinates/coordinates_3d.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/types.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacescifir" kindref="compound">scifir</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10" refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_unit_3d::vector_unit_3d()<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(),theta(),phi()</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classscifir_1_1vector__unit__3d_1a6b13d7fdc2f31c1c6b4adfa256f64350" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(x),theta(x.theta),phi(x.phi)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classscifir_1_1vector__unit__3d_1a5237952cda38c23179b0dc7578911636" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(<ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;&amp;<sp/>x)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(std::move(x)),theta(std::move(x.theta)),phi(std::move(x.phi))</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classscifir_1_1vector__unit__3d_1a7c953af231aacc14f03ffe68eaa1d7c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_dimensions,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_theta,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,init_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classscifir_1_1vector__unit__3d_1afe4a6725533eff2f42d297cc3c87f1f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_dimensions,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_theta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,init_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classscifir_1_1vector__unit__3d_1afd17f7743553023d1d9c0da399cbb619" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_dimensions,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_theta,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,init_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classscifir_1_1vector__unit__3d_1aaf3ff8c9833cbbe07e3344a02d5653eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_dimensions,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_theta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,init_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classscifir_1_1vector__unit__3d_1a62410651151c3d68fcd919f383cfb803" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_dimensions,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_theta,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,init_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classscifir_1_1vector__unit__3d_1a761b25992706e54f6f25b2473266bbcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_dimensions,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_theta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,init_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classscifir_1_1vector__unit__3d_1aea0a0aea49ef671e6e6a291575acd153" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_dimensions,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_theta,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,init_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classscifir_1_1vector__unit__3d_1a804d5f25dff01e7dc6eeb492d09e71b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_dimensions,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_theta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,init_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classscifir_1_1vector__unit__3d_1a745e8c63394bb79d27946d216c92ab95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;dimension&gt;&amp;<sp/>new_dimensions,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_theta,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,new_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classscifir_1_1vector__unit__3d_1a72d5b304be55fa68f4ec6a661e968786" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;dimension&gt;&amp;<sp/>new_dimensions,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_theta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,new_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classscifir_1_1vector__unit__3d_1a88116f75efcae4c37243c64f1a3bd833" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;dimension&gt;&amp;<sp/>new_dimensions,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_theta,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,new_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classscifir_1_1vector__unit__3d_1a5c377e4760d4d47280331f1452c0e5a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;dimension&gt;&amp;<sp/>new_dimensions,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_theta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,new_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classscifir_1_1vector__unit__3d_1a79245eeb96c16f6acbd20102c9a5ff85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;dimension&gt;&amp;<sp/>new_dimensions,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_theta,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,new_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classscifir_1_1vector__unit__3d_1ab7288e59e749526eb93883799a1f7ea5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;dimension&gt;&amp;<sp/>new_dimensions,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_theta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,new_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classscifir_1_1vector__unit__3d_1a88a7396390ba23e6b405bceb0e703d27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;dimension&gt;&amp;<sp/>new_dimensions,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_theta,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,new_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classscifir_1_1vector__unit__3d_1ae2c1e58cb85730932a33af3d72eefe6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_value,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;dimension&gt;&amp;<sp/>new_dimensions,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_theta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(new_value,new_dimensions),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classscifir_1_1vector__unit__3d_1a5ffba9d52b084099a84a8d3ea60f97c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>&amp;<sp/>x,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_theta,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(x),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classscifir_1_1vector__unit__3d_1a7fd48192f22c36913231bdf988caa1d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>&amp;<sp/>x,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_theta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(x),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classscifir_1_1vector__unit__3d_1add3324755760dd7a80a0f7d258e4473e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_scalar,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_theta,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(init_scalar),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classscifir_1_1vector__unit__3d_1abd724c6ca1df04979df77d47263792c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_scalar,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_theta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>&amp;<sp/>new_phi)<sp/>:<sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(init_scalar),theta(new_theta),phi(new_phi)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classscifir_1_1vector__unit__3d_1ac044880bdcebf0ce99d33e9c34a4225f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d::vector_unit_3d</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_vector_3d)<sp/>:<sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>()</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1a5152301649558d388dc782b9d05a72f7" kindref="member">vector_unit_3d::initialize_from_string</ref>(init_vector_3d);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classscifir_1_1vector__unit__3d_1a9efe91396c6d7294b0c83ce6f3a0c090" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/><ref refid="classscifir_1_1vector__unit__3d_1a9efe91396c6d7294b0c83ce6f3a0c090" kindref="member">vector_unit_3d::operator =</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1scalar__unit_1a352ba4c9e26f2c644803b5ed51fe0de4" kindref="member">scalar_unit::operator =</ref>(x);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classscifir_1_1vector__unit__3d_1ab251aba0d8037d433a0e48643cdacfd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/><ref refid="classscifir_1_1vector__unit__3d_1a9efe91396c6d7294b0c83ce6f3a0c090" kindref="member">vector_unit_3d::operator =</ref>(<ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;&amp;<sp/>x)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1scalar__unit_1a352ba4c9e26f2c644803b5ed51fe0de4" kindref="member">scalar_unit::operator =</ref>(std::move(x));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>std::move(x.theta);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>std::move(x.phi);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classscifir_1_1vector__unit__3d_1a5118383dab0ff9abd732e4380e023d54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/><ref refid="classscifir_1_1vector__unit__3d_1a9efe91396c6d7294b0c83ce6f3a0c090" kindref="member">vector_unit_3d::operator =</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1scalar__unit_1a352ba4c9e26f2c644803b5ed51fe0de4" kindref="member">scalar_unit::operator =</ref>(x);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classscifir_1_1vector__unit__3d_1a1e13bea254b41b088143989036455379" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/><ref refid="classscifir_1_1vector__unit__3d_1a9efe91396c6d7294b0c83ce6f3a0c090" kindref="member">vector_unit_3d::operator =</ref>(<ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>&amp;&amp;<sp/>x)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1scalar__unit_1a352ba4c9e26f2c644803b5ed51fe0de4" kindref="member">scalar_unit::operator =</ref>(std::move(x));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classscifir_1_1vector__unit__3d_1ab474e2fd4a2d8b821e0d7d81aa828222" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/><ref refid="classscifir_1_1vector__unit__3d_1a9efe91396c6d7294b0c83ce6f3a0c090" kindref="member">vector_unit_3d::operator =</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_vector_3d)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1a5152301649558d388dc782b9d05a72f7" kindref="member">vector_unit_3d::initialize_from_string</ref>(init_vector_3d);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classscifir_1_1vector__unit__3d_1acaa01f05cdc757779023c1847e69e3d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1acaa01f05cdc757779023c1847e69e3d0" kindref="member">vector_unit_3d::operator ==</ref>(<ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="119"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.<ref refid="classscifir_1_1scalar__unit_1aaf48aa357423e1f65044190c27053657" kindref="member">change_dimensions</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classscifir_1_1scalar__unit_1aeb2d34ea9de078b70babda80182e677a" kindref="member">get_value</ref>()<sp/>==<sp/>x.<ref refid="classscifir_1_1scalar__unit_1aeb2d34ea9de078b70babda80182e677a" kindref="member">get_value</ref>()<sp/>and<sp/><ref refid="namespacescifir_1a0c8de3e3dd65b45ba57dc8e8cf70c214" kindref="member">scifir::same_direction</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,x)<sp/>and<sp/><ref refid="classscifir_1_1scalar__unit_1a4c076490a43430ad72b9443bb2d68fb7" kindref="member">has_dimensions</ref>(x))</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classscifir_1_1vector__unit__3d_1a572d29da780eddb7c560c4bdb156e3fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1a572d29da780eddb7c560c4bdb156e3fc" kindref="member">vector_unit_3d::point_to</ref>(<ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319" kindref="member">direction::name</ref><sp/>x)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319aeb4f3e61e6fafa6c467b82ee242eb51c" kindref="member">direction::LEFT</ref>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>270.0f;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>90.0f;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319ae8f2b1d045628d57b4b8c562d2ebfc02" kindref="member">direction::RIGHT</ref>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>90.0f;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>90.0f;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319ab2805b188b82e0c05c4e737e3d8d6831" kindref="member">direction::TOP</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a98f9679e7fcaa201ea32ecad8be036b8" kindref="member">direction::BOTTOM</ref>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>180.0f;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319ac4b30e39230d69500b780b0c7e42fbd4" kindref="member">direction::LEFT_TOP</ref>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>270.0f;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>45.0f;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a0e0beffa8560687faae66351c01efec5" kindref="member">direction::RIGHT_TOP</ref>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>90.0f;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>45.0f;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319af550920f7123c3d59dc0b0372733220f" kindref="member">direction::RIGHT_BOTTOM</ref>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>90.0f;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>135.0f;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a8a727b85c337390c844e1782ca8fe29c" kindref="member">direction::LEFT_BOTTOM</ref>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>270.0f;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>135.0f;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a3abb69462df2b2c0241c781d3701ecea" kindref="member">direction::FRONT</ref>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>90.0f;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a6f375fea0f3d26c57072608359d509dc" kindref="member">direction::BACK</ref>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>180.0f;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>90.0f;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a52a472b707489e9aeb225e164131b00f" kindref="member">direction::LEFT_FRONT</ref>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>315.0f;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>90.0f;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a979ae4388623540264f860f5a509761e" kindref="member">direction::RIGHT_FRONT</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>45.0f;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>90.0f;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a3a7f4b7a2b6e5c97a3c75be6f790cb03" kindref="member">direction::TOP_FRONT</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>45.0f;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319acc5900251cd00271c33ea49e71c0586d" kindref="member">direction::BOTTOM_FRONT</ref>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>135.0f;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a19ca484a501de12a3905c8ac2cd95c22" kindref="member">direction::LEFT_BACK</ref>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>225.0f;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>90.0f;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a8ee62fbd05c5583d1b24d4c31c2d7023" kindref="member">direction::RIGHT_BACK</ref>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>135.0f;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>90.0f;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319adfbb23a8474d3def4dab015ed3fff44a" kindref="member">direction::TOP_BACK</ref>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>180.0f;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>45.0f;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319af9efb3ea2745425d431a0171b134d8ec" kindref="member">direction::BOTTOM_BACK</ref>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>180.0f;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>135.0f;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319ae972f247233b7808a4d00ee49904065b" kindref="member">direction::LEFT_TOP_FRONT</ref>)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>315.0f;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>45.0f;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319ad27e31622675d229bc1e65bd899f382b" kindref="member">direction::RIGHT_TOP_FRONT</ref>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>45.0f;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>45.0f;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a743411405d7ab23e476f8d3ea8d45bbf" kindref="member">direction::LEFT_BOTTOM_FRONT</ref>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>315.0f;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>135.0f;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a87453e62afcaa50ae7169b0943f31029" kindref="member">direction::RIGHT_BOTTOM_FRONT</ref>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>45.0f;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>135.0f;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a0538028688f618f912a6cd7be679ba78" kindref="member">direction::LEFT_TOP_BACK</ref>)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>225.0f;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>45.0f;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319aeece56abc14d563afd73ffda94e39381" kindref="member">direction::RIGHT_TOP_BACK</ref>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>135.0f;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>45.0f;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319ae7d293719b6c7aeb70190fc55590b137" kindref="member">direction::LEFT_BOTTOM_BACK</ref>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>225.0f;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>135.0f;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classscifir_1_1direction_1a3f9d1fd5a6c5f61b9fb49c4e56938319a4dda968da1997b1f46f5a49979e7cd07" kindref="member">direction::RIGHT_BOTTOM_BACK</ref>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/>135.0f;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/>135.0f;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classscifir_1_1vector__unit__3d_1a10ab2717e963bfd0affe851a84fc8f96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1a10ab2717e963bfd0affe851a84fc8f96" kindref="member">vector_unit_3d::operator +=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classscifir_1_1scalar__unit_1a4c076490a43430ad72b9443bb2d68fb7" kindref="member">has_dimensions</ref>(x))</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_x<sp/>=<sp/>float(<ref refid="classscifir_1_1vector__unit__3d_1a8104afd03dc49832c7a7152cc481e18b" kindref="member">x_projection</ref>()<sp/>+<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a8104afd03dc49832c7a7152cc481e18b" kindref="member">x_projection</ref>());</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_y<sp/>=<sp/>float(<ref refid="classscifir_1_1vector__unit__3d_1a42fe2a209890638d8d526c6b1f0d7a76" kindref="member">y_projection</ref>()<sp/>+<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a42fe2a209890638d8d526c6b1f0d7a76" kindref="member">y_projection</ref>());</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_z<sp/>=<sp/>float(<ref refid="classscifir_1_1vector__unit__3d_1a6684389d73257dc3c5bed913144b4083" kindref="member">z_projection</ref>()<sp/>+<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a6684389d73257dc3c5bed913144b4083" kindref="member">z_projection</ref>());</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">scalar_unit::value</ref><sp/>=<sp/><ref refid="namespacescifir_1a8398eee82007ffff54b571e6e5c243c0" kindref="member">cartesian_3d_to_spherical_r</ref>(new_x,<sp/>new_y,<sp/>new_z);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>(<ref refid="namespacescifir_1a3401f5494f4717a5748e8951746f6543" kindref="member">cartesian_3d_to_spherical_theta</ref>(new_x,<sp/>new_y,<sp/>new_z));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>(<ref refid="namespacescifir_1ab8f1282de455c868d42ea5ce8f2709b0" kindref="member">cartesian_3d_to_spherical_phi</ref>(new_x,<sp/>new_y,<sp/>new_z));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>sum<sp/>vectors<sp/>of<sp/>different<sp/>dimensions&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classscifir_1_1vector__unit__3d_1a23a23f59bcabe3f947ba9e202263d767" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1a23a23f59bcabe3f947ba9e202263d767" kindref="member">vector_unit_3d::operator -=</ref>(<ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref><sp/>x)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classscifir_1_1scalar__unit_1a4c076490a43430ad72b9443bb2d68fb7" kindref="member">has_dimensions</ref>(x))</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a2ead70a460e06073383f6a990bbfa45c" kindref="member">invert</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>substract<sp/>vectors<sp/>of<sp/>different<sp/>dimensions&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="classscifir_1_1vector__unit__3d_1ad55a52184825fac55a1c69e670f351d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref><sp/><ref refid="classscifir_1_1vector__unit__3d_1ad55a52184825fac55a1c69e670f351d8" kindref="member">vector_unit_3d::operator +</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="296"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classscifir_1_1scalar__unit_1a4c076490a43430ad72b9443bb2d68fb7" kindref="member">has_dimensions</ref>(x))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_x<sp/>=<sp/>float(<ref refid="classscifir_1_1vector__unit__3d_1a8104afd03dc49832c7a7152cc481e18b" kindref="member">x_projection</ref>()<sp/>+<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a8104afd03dc49832c7a7152cc481e18b" kindref="member">x_projection</ref>());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_y<sp/>=<sp/>float(<ref refid="classscifir_1_1vector__unit__3d_1a42fe2a209890638d8d526c6b1f0d7a76" kindref="member">y_projection</ref>()<sp/>+<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a42fe2a209890638d8d526c6b1f0d7a76" kindref="member">y_projection</ref>());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_z<sp/>=<sp/>float(<ref refid="classscifir_1_1vector__unit__3d_1a6684389d73257dc3c5bed913144b4083" kindref="member">z_projection</ref>()<sp/>+<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a6684389d73257dc3c5bed913144b4083" kindref="member">z_projection</ref>());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_value<sp/>=<sp/><ref refid="namespacescifir_1a8398eee82007ffff54b571e6e5c243c0" kindref="member">cartesian_3d_to_spherical_r</ref>(new_x,<sp/>new_y,<sp/>new_z);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref><sp/>new_theta<sp/>=<sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>(<ref refid="namespacescifir_1a3401f5494f4717a5748e8951746f6543" kindref="member">cartesian_3d_to_spherical_theta</ref>(new_x,<sp/>new_y,<sp/>new_z));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref><sp/>new_phi<sp/>=<sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>(<ref refid="namespacescifir_1ab8f1282de455c868d42ea5ce8f2709b0" kindref="member">cartesian_3d_to_spherical_phi</ref>(new_x,<sp/>new_y,<sp/>new_z));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d</ref>(new_value,<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>(),new_theta,new_phi);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d</ref>();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classscifir_1_1vector__unit__3d_1ac1b459e7130d78f8890595f6dbdd5c6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref><sp/><ref refid="classscifir_1_1vector__unit__3d_1ac1b459e7130d78f8890595f6dbdd5c6c" kindref="member">vector_unit_3d::operator -</ref>(<ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="314"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classscifir_1_1scalar__unit_1a4c076490a43430ad72b9443bb2d68fb7" kindref="member">has_dimensions</ref>(x))</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a2ead70a460e06073383f6a990bbfa45c" kindref="member">invert</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_x<sp/>=<sp/>float(<ref refid="classscifir_1_1vector__unit__3d_1a8104afd03dc49832c7a7152cc481e18b" kindref="member">x_projection</ref>()<sp/>+<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a8104afd03dc49832c7a7152cc481e18b" kindref="member">x_projection</ref>());</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_y<sp/>=<sp/>float(<ref refid="classscifir_1_1vector__unit__3d_1a42fe2a209890638d8d526c6b1f0d7a76" kindref="member">y_projection</ref>()<sp/>+<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a42fe2a209890638d8d526c6b1f0d7a76" kindref="member">y_projection</ref>());</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_z<sp/>=<sp/>float(<ref refid="classscifir_1_1vector__unit__3d_1a6684389d73257dc3c5bed913144b4083" kindref="member">z_projection</ref>()<sp/>+<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a6684389d73257dc3c5bed913144b4083" kindref="member">z_projection</ref>());</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_value<sp/>=<sp/><ref refid="namespacescifir_1a8398eee82007ffff54b571e6e5c243c0" kindref="member">cartesian_3d_to_spherical_r</ref>(new_x,<sp/>new_y,<sp/>new_z);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref><sp/>new_theta<sp/>=<sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>(<ref refid="namespacescifir_1a3401f5494f4717a5748e8951746f6543" kindref="member">cartesian_3d_to_spherical_theta</ref>(new_x,<sp/>new_y,<sp/>new_z));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref><sp/>new_phi<sp/>=<sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>(<ref refid="namespacescifir_1ab8f1282de455c868d42ea5ce8f2709b0" kindref="member">cartesian_3d_to_spherical_phi</ref>(new_x,<sp/>new_y,<sp/>new_z));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d</ref>(new_value,<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>(),new_theta,new_phi);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d</ref>();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="classscifir_1_1vector__unit__3d_1adf6ede11956187485f3f1139913a5469" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref><sp/><ref refid="classscifir_1_1vector__unit__3d_1adf6ede11956187485f3f1139913a5469" kindref="member">vector_unit_3d::operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="333"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value<sp/>=<sp/><ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">scalar_unit::value</ref><sp/>*<sp/>x.<ref refid="classscifir_1_1scalar__unit_1aeb2d34ea9de078b70babda80182e677a" kindref="member">get_value</ref>();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;dimension&gt;<sp/>new_dimensions<sp/>=<sp/><ref refid="namespacescifir_1a9ffe4ce909247f67cb6d4a4eebf64be1" kindref="member">multiply_dimensions</ref>(<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>(),<sp/>x.<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>(),new_value);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(new_value),<sp/>new_dimensions,<sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>,<sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="classscifir_1_1vector__unit__3d_1a2b04124a50a082a439bf9030c95eebfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref><sp/><ref refid="classscifir_1_1vector__unit__3d_1a2b04124a50a082a439bf9030c95eebfb" kindref="member">vector_unit_3d::operator /</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="340"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value<sp/>=<sp/><ref refid="classscifir_1_1scalar__unit_1a64eba8849b847bbca056fb0e8bd45c39" kindref="member">scalar_unit::value</ref><sp/>/<sp/>x.<ref refid="classscifir_1_1scalar__unit_1aeb2d34ea9de078b70babda80182e677a" kindref="member">get_value</ref>();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;dimension&gt;<sp/>new_dimensions<sp/>=<sp/><ref refid="namespacescifir_1a1808c16c674ea62eafdc3a11d6c36ced" kindref="member">divide_dimensions</ref>(<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>(),<sp/>x.<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>(),new_value);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(new_value),<sp/>new_dimensions,<sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>,<sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="classscifir_1_1vector__unit__3d_1a6437bfae8995d0be000074a181493c54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref><sp/><ref refid="classscifir_1_1vector__unit__3d_1a6437bfae8995d0be000074a181493c54" kindref="member">vector_unit_3d::operator ^</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="347"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="classscifir_1_1scalar__unit_1a0b736b31c71a1240704cda3300a45039" kindref="member">has_empty_dimensions</ref>())</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref><sp/>new_unit<sp/>=<sp/><ref refid="classscifir_1_1scalar__unit_1afcba006cc5ecf0423ed028c2254c0104" kindref="member">scalar_unit::operator^</ref>(x);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d</ref>(new_unit,<sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>,<sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>power<sp/>with<sp/>as<sp/>exponent<sp/>a<sp/>unit<sp/>with<sp/>dimensions&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1aa032451e59ede864277d17a6a83b7d6f" kindref="member">vector_unit_3d</ref>();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IS_UNIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1ada38bc42325b20fe5f1d9d02ad329879" kindref="member">vector_unit_3d::vectorial_display</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_decimals)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="362"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/><ref refid="classscifir_1_1scalar__unit_1a5cec374081c39d864a7c3267b6edad09" kindref="member">display</ref>(number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a6fc5f876bdd1abb1118fc73288152eb0" kindref="member">display_float</ref>(<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>.<ref refid="classscifir_1_1angle_1a0ee2dddd2d514a707cc3f98e496cf8a1" kindref="member">get_value</ref>(),number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\U000003B8<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a6fc5f876bdd1abb1118fc73288152eb0" kindref="member">display_float</ref>(<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>.<ref refid="classscifir_1_1angle_1a0ee2dddd2d514a707cc3f98e496cf8a1" kindref="member">get_value</ref>(),number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\U000003A6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1a04849ac01c9c5439d1e71609c3086378" kindref="member">vector_unit_3d::vectorial_derived_display</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_decimals)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="369"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/><ref refid="classscifir_1_1scalar__unit_1aacf2082b3224a8ded5798a0f1727b8a9" kindref="member">derived_display</ref>(number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a6fc5f876bdd1abb1118fc73288152eb0" kindref="member">display_float</ref>(<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>.<ref refid="classscifir_1_1angle_1a0ee2dddd2d514a707cc3f98e496cf8a1" kindref="member">get_value</ref>(),number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\U000003B8<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a6fc5f876bdd1abb1118fc73288152eb0" kindref="member">display_float</ref>(<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>.<ref refid="classscifir_1_1angle_1a0ee2dddd2d514a707cc3f98e496cf8a1" kindref="member">get_value</ref>(),number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\U000003A6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1a7cf12bf79f23dabd5ef183679d3a9a16" kindref="member">vector_unit_3d::vectorial_custom_display</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_dimensions,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_decimals)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="376"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/><ref refid="classscifir_1_1scalar__unit_1acc46b7f3e73c08b61e4528bc3331fc60" kindref="member">custom_display</ref>(init_dimensions,number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a6fc5f876bdd1abb1118fc73288152eb0" kindref="member">display_float</ref>(<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>.<ref refid="classscifir_1_1angle_1a0ee2dddd2d514a707cc3f98e496cf8a1" kindref="member">get_value</ref>(),number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\U000003B8<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a6fc5f876bdd1abb1118fc73288152eb0" kindref="member">display_float</ref>(<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>.<ref refid="classscifir_1_1angle_1a0ee2dddd2d514a707cc3f98e496cf8a1" kindref="member">get_value</ref>(),number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\U000003A6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="namespacescifir_1a421182d5f93abcbbaeadc7c14112bdd5" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_unit_3d&amp;<sp/>x)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.vectorial_display(2);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>IS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1ada38bc42325b20fe5f1d9d02ad329879" kindref="member">vector_unit_3d::vectorial_display</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_decimals)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="388"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/><ref refid="classscifir_1_1scalar__unit_1a5cec374081c39d864a7c3267b6edad09" kindref="member">display</ref>(number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a6fc5f876bdd1abb1118fc73288152eb0" kindref="member">display_float</ref>(<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>.<ref refid="classscifir_1_1angle_1a0ee2dddd2d514a707cc3f98e496cf8a1" kindref="member">get_value</ref>(),number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\U03B8<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a6fc5f876bdd1abb1118fc73288152eb0" kindref="member">display_float</ref>(<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>.<ref refid="classscifir_1_1angle_1a0ee2dddd2d514a707cc3f98e496cf8a1" kindref="member">get_value</ref>(),number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\U03A6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1a04849ac01c9c5439d1e71609c3086378" kindref="member">vector_unit_3d::vectorial_derived_display</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_decimals)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="395"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/><ref refid="classscifir_1_1scalar__unit_1aacf2082b3224a8ded5798a0f1727b8a9" kindref="member">derived_display</ref>(number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a6fc5f876bdd1abb1118fc73288152eb0" kindref="member">display_float</ref>(<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>.<ref refid="classscifir_1_1angle_1a0ee2dddd2d514a707cc3f98e496cf8a1" kindref="member">get_value</ref>(),number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\U03B8<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a6fc5f876bdd1abb1118fc73288152eb0" kindref="member">display_float</ref>(<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>.<ref refid="classscifir_1_1angle_1a0ee2dddd2d514a707cc3f98e496cf8a1" kindref="member">get_value</ref>(),number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\U03A6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1a7cf12bf79f23dabd5ef183679d3a9a16" kindref="member">vector_unit_3d::vectorial_custom_display</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_dimensions,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_decimals)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="402"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>out;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/><ref refid="classscifir_1_1scalar__unit_1acc46b7f3e73c08b61e4528bc3331fc60" kindref="member">custom_display</ref>(init_dimensions,number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a6fc5f876bdd1abb1118fc73288152eb0" kindref="member">display_float</ref>(<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>.<ref refid="classscifir_1_1angle_1a0ee2dddd2d514a707cc3f98e496cf8a1" kindref="member">get_value</ref>(),number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\U03B8<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a6fc5f876bdd1abb1118fc73288152eb0" kindref="member">display_float</ref>(<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>.<ref refid="classscifir_1_1angle_1a0ee2dddd2d514a707cc3f98e496cf8a1" kindref="member">get_value</ref>(),number_of_decimals)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\U03A6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="namespacescifir_1a421182d5f93abcbbaeadc7c14112bdd5" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_unit_3d&amp;<sp/>x)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.vectorial_display(2);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="classscifir_1_1vector__unit__3d_1a5152301649558d388dc782b9d05a72f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d_1a5152301649558d388dc782b9d05a72f7" kindref="member">vector_unit_3d::initialize_from_string</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>init_vector_3d)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>values;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::split(values,init_vector_3d,boost::is_any_of(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(values.size()<sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1scalar__unit_1a05dcfa5468b6d3700ec90bc60bc3f26e" kindref="member">scalar_unit::initialize_from_string</ref>(values[0]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>values[1]);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>=<sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>(values[2]);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>=<sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref>(values[3]);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="namespacescifir_1a12256ad91a09112ae1515d2532d5b721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref><sp/><ref refid="namespacescifir_1accc56ab405831f217868c125f41d18d0" kindref="member">norm</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(<ref refid="namespacescifir_1a0fca35769fd130e4f6303660a24e6c83" kindref="member">std::abs</ref>(x.<ref refid="classscifir_1_1scalar__unit_1aeb2d34ea9de078b70babda80182e677a" kindref="member">get_value</ref>()),x.<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>());</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="namespacescifir_1aff302ba57190c50495faa737867c4512" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref><sp/><ref refid="namespacescifir_1adeff4b825414d35ce963977f181f1b5c" kindref="member">sqrt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref><sp/>new_value<sp/>=<sp/><ref refid="namespacescifir_1adeff4b825414d35ce963977f181f1b5c" kindref="member">scifir::sqrt</ref>(<ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(x));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>(new_value,<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>,<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="namespacescifir_1a0106c7b5d5258ea53513935964d08e8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref><sp/><ref refid="namespacescifir_1a0b02e4d82f1d2253f6901264ff11ca38" kindref="member">sqrt_nth</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref><sp/>new_value<sp/>=<sp/><ref refid="namespacescifir_1a0b02e4d82f1d2253f6901264ff11ca38" kindref="member">scifir::sqrt_nth</ref>(<ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(x),<sp/>index);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>(new_value,<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>,<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="namespacescifir_1ace0edee40a69737f575bd80df8dca9c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref><sp/><ref refid="namespacescifir_1a732fc05956fd18f78cd0019c5c023b5c" kindref="member">dot_product</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value<sp/>=<sp/>float(x.<ref refid="classscifir_1_1vector__unit__3d_1a8104afd03dc49832c7a7152cc481e18b" kindref="member">x_projection</ref>()*y.<ref refid="classscifir_1_1vector__unit__3d_1a8104afd03dc49832c7a7152cc481e18b" kindref="member">x_projection</ref>()<sp/>+<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a42fe2a209890638d8d526c6b1f0d7a76" kindref="member">y_projection</ref>()*y.<ref refid="classscifir_1_1vector__unit__3d_1a42fe2a209890638d8d526c6b1f0d7a76" kindref="member">y_projection</ref>()<sp/>+<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a6684389d73257dc3c5bed913144b4083" kindref="member">z_projection</ref>()*y.<ref refid="classscifir_1_1vector__unit__3d_1a6684389d73257dc3c5bed913144b4083" kindref="member">z_projection</ref>());</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;dimension&gt;<sp/>new_dimensions<sp/>=<sp/><ref refid="namespacescifir_1a9ffe4ce909247f67cb6d4a4eebf64be1" kindref="member">multiply_dimensions</ref>(x.<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>(),<sp/>y.<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>(),new_value);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scalar_unit</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(new_value),new_dimensions);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="namespacescifir_1ac62851b9d931d02184edca7f3db3f1a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref><sp/><ref refid="namespacescifir_1ac62851b9d931d02184edca7f3db3f1a7" kindref="member">cross_product</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref><sp/>new_theta;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref><sp/>new_phi;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y.<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>==<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>and<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>==<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_value<sp/>=<sp/>0.0l;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_x<sp/>=<sp/>float(x.<ref refid="classscifir_1_1vector__unit__3d_1a42fe2a209890638d8d526c6b1f0d7a76" kindref="member">y_projection</ref>()<sp/>*<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1a6684389d73257dc3c5bed913144b4083" kindref="member">z_projection</ref>()<sp/>-<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a6684389d73257dc3c5bed913144b4083" kindref="member">z_projection</ref>()<sp/>*<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1a42fe2a209890638d8d526c6b1f0d7a76" kindref="member">y_projection</ref>());</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_y<sp/>=<sp/>float(x.<ref refid="classscifir_1_1vector__unit__3d_1a6684389d73257dc3c5bed913144b4083" kindref="member">z_projection</ref>()<sp/>*<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1a8104afd03dc49832c7a7152cc481e18b" kindref="member">x_projection</ref>()<sp/>-<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a8104afd03dc49832c7a7152cc481e18b" kindref="member">x_projection</ref>()<sp/>*<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1a6684389d73257dc3c5bed913144b4083" kindref="member">z_projection</ref>());</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>new_z<sp/>=<sp/>float(x.<ref refid="classscifir_1_1vector__unit__3d_1a8104afd03dc49832c7a7152cc481e18b" kindref="member">x_projection</ref>()<sp/>*<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1a42fe2a209890638d8d526c6b1f0d7a76" kindref="member">y_projection</ref>()<sp/>-<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1a42fe2a209890638d8d526c6b1f0d7a76" kindref="member">y_projection</ref>()<sp/>*<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1a8104afd03dc49832c7a7152cc481e18b" kindref="member">x_projection</ref>());</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_value<sp/>=<sp/><ref refid="namespacescifir_1a8398eee82007ffff54b571e6e5c243c0" kindref="member">cartesian_3d_to_spherical_r</ref>(new_x,<sp/>new_y,<sp/>new_z);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_theta<sp/>=<sp/><ref refid="namespacescifir_1a3401f5494f4717a5748e8951746f6543" kindref="member">cartesian_3d_to_spherical_theta</ref>(new_x,<sp/>new_y,<sp/>new_z);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_phi<sp/>=<sp/><ref refid="namespacescifir_1ab8f1282de455c868d42ea5ce8f2709b0" kindref="member">cartesian_3d_to_spherical_phi</ref>(new_x,<sp/>new_y,<sp/>new_z);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;dimension&gt;<sp/>new_dimensions<sp/>=<sp/><ref refid="namespacescifir_1a9ffe4ce909247f67cb6d4a4eebf64be1" kindref="member">multiply_dimensions</ref>(x.<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>(),<sp/>y.<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>(),new_value);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(new_value),<sp/>new_dimensions,<sp/>new_theta,<sp/>new_phi);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="namespacescifir_1ac860ed2437193ce73676374430236859" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1angle" kindref="compound">angle</ref><sp/><ref refid="namespacescifir_1a0a708b03e7faa9893325df448046989c" kindref="member">angle_between</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacescifir_1ad107726d553b98dd1061fa75b7f9cc60" kindref="member">scifir::acos</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(<ref refid="namespacescifir_1a732fc05956fd18f78cd0019c5c023b5c" kindref="member">dot_product</ref>(x,y)/(<ref refid="namespacescifir_1accc56ab405831f217868c125f41d18d0" kindref="member">norm</ref>(x)*<ref refid="namespacescifir_1accc56ab405831f217868c125f41d18d0" kindref="member">norm</ref>(y))));</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="namespacescifir_1a19f08ffa79111f8085d509dc14c2f1e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacescifir_1a0c8de3e3dd65b45ba57dc8e8cf70c214" kindref="member">same_direction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>==<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>and<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>==<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="namespacescifir_1ab9afa8da4d4995163fdc49332dea029e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacescifir_1ae4beaddada9427f8c7a53e3381c5b796" kindref="member">parallel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x.<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>==<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>and<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>==<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>)<sp/>or<sp/>(x.<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref><sp/>==<sp/>(180.0f<sp/>+<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>)<sp/>and<sp/>x.<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref><sp/>==<sp/>(180.0f<sp/>-<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>)))</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="namespacescifir_1afc6f9fc2154dce1fc4819d1e2333342a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacescifir_1a3ea95ad2c4137768f1e541e77db8a97a" kindref="member">orthogonal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>x,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">vector_unit_3d</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1angle" kindref="compound">scifir::angle</ref><sp/>x_angle<sp/>=<sp/><ref refid="namespacescifir_1a0a708b03e7faa9893325df448046989c" kindref="member">angle_between</ref>(x,y);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x_angle<sp/>==<sp/>90.0f);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="vector__unit__3d_8cpp_1a4c6d9f8da6712bb19e4985c7518ddcd9" refkind="member"><highlight class="normal"><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref><sp/><ref refid="vector__unit__3d_8cpp_1a4c6d9f8da6712bb19e4985c7518ddcd9" kindref="member">operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1scalar__unit" kindref="compound">scifir::scalar_unit</ref>&amp;<sp/>x,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_value<sp/>=<sp/>x.<ref refid="classscifir_1_1scalar__unit_1aeb2d34ea9de078b70babda80182e677a" kindref="member">get_value</ref>()<sp/>*<sp/>y.<ref refid="classscifir_1_1scalar__unit_1aeb2d34ea9de078b70babda80182e677a" kindref="member">get_value</ref>();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;scifir::dimension&gt;<sp/>new_dimensions<sp/>=<sp/><ref refid="namespacescifir_1a9ffe4ce909247f67cb6d4a4eebf64be1" kindref="member">multiply_dimensions</ref>(x.<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>(),<sp/>y.<ref refid="classscifir_1_1scalar__unit_1a39ed9ef8729a155b1a54ab848e8576c0" kindref="member">get_dimensions</ref>(),new_value);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(new_value),<sp/>new_dimensions,<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1aabbc544480e739a4d45fad2371f9caaa" kindref="member">theta</ref>,<sp/>y.<ref refid="classscifir_1_1vector__unit__3d_1aedcd4552b76ffdd4d0e9a53e1340985d" kindref="member">phi</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="vector__unit__3d_8cpp_1aa589e78de56758ac784ac996a564cdc7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="vector__unit__3d_8cpp_1aa589e78de56758ac784ac996a564cdc7" kindref="member">operator !=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(x<sp/>==<sp/>y);</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="vector__unit__3d_8cpp_1a42f3ca37252f0b895098df93814d7569" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="vector__unit__3d_8cpp_1a42f3ca37252f0b895098df93814d7569" kindref="member">operator ==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_vector_3d)</highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref><sp/>y(init_vector_3d);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>y);</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="vector__unit__3d_8cpp_1aa403c6557f7f52d7c4accdf865775cf3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="vector__unit__3d_8cpp_1aa589e78de56758ac784ac996a564cdc7" kindref="member">operator !=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_vector_3d)</highlight></codeline>
<codeline lineno="527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(x<sp/>==<sp/>init_vector_3d);</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="vector__unit__3d_8cpp_1a6e9a0746e4aaa7a76a3dfd036141c0f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="vector__unit__3d_8cpp_1a42f3ca37252f0b895098df93814d7569" kindref="member">operator ==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_vector_3d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref><sp/>x(init_vector_3d);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>y);</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537" refid="vector__unit__3d_8cpp_1a1145d1c9f033c481108d5f7059cb5382" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="vector__unit__3d_8cpp_1aa589e78de56758ac784ac996a564cdc7" kindref="member">operator !=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>init_vector_3d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(init_vector_3d<sp/>==<sp/>y);</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542" refid="vector__unit__3d_8cpp_1ab01a99178d6b0f2f38e5273626fe22d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vector__unit__3d_8cpp_1ab01a99178d6b0f2f38e5273626fe22d4" kindref="member">operator +=</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>ostringstream<sp/>output;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>y;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>output.str();</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="vector__unit__3d_8cpp_1aa8270aa46b6f04f367bfd660ef89a72c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="vector__unit__3d_8cpp_1aa8270aa46b6f04f367bfd660ef89a72c" kindref="member">operator +</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>&amp;<sp/>y)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>ostringstream<sp/>output;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>x;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>y;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output.str();</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="vector__unit__3d_8cpp_1ad2fbb36d987ad11a95ccc42b25b06072" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="vector__unit__3d_8cpp_1aa8270aa46b6f04f367bfd660ef89a72c" kindref="member">operator +</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>x)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>ostringstream<sp/>output;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>y;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>&lt;&lt;<sp/>x;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output.str();</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="vector__unit__3d_8cpp_1a7a7f117501b6fdfeb462b147d2239c3a" refkind="member"><highlight class="normal">ostream&amp;<sp/><ref refid="vector__unit__3d_8cpp_1a7a7f117501b6fdfeb462b147d2239c3a" kindref="member">operator &lt;&lt;</ref>(ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/><ref refid="namespacescifir_1a421182d5f93abcbbaeadc7c14112bdd5" kindref="member">to_string</ref>(x);</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="vector__unit__3d_8cpp_1a761af8b75a156be9a599fd2b55ab8417" refkind="member"><highlight class="normal">istream&amp;<sp/><ref refid="vector__unit__3d_8cpp_1a761af8b75a156be9a599fd2b55ab8417" kindref="member">operator &gt;&gt;</ref>(istream&amp;<sp/>is,<sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a[256];</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>is.getline(a,<sp/>256);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>b(a);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::trim(b);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="classscifir_1_1vector__unit__3d" kindref="compound">scifir::vector_unit_3d</ref>(b);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="units/vector_unit_3d.cpp"/>
  </compounddef>
</doxygen>
